#!/usr/bin/env ruby
require_relative '../lib/hash_map'

optimizers = [
  {
    name: 'Based on key length',
    block: proc { |key, collision_count| key.length + collision_count }
  },
  {
    name: 'Best hash dealer evaaaa!111!1',
    block: proc do |_key, collision_count|
      # TODO your optimizer here
      collision_count
    end
  }
]

seed = Random.new_seed
puts "Initializing experiment with random seed #{seed}"

optimizers.each do |locator|
  puts "Strategy: #{locator[:name]}"
  ['numeric_keys'].each do |sample_name|
    rng = Random.new(seed)
    keys = File.read("spec/data/#{sample_name}.txt").split(/\W+/).shuffle

    hash_map = HashMap.new.with_locator(&locator[:block])

    keys.each { |key| hash_map[key] = :value }
    raise 'Element could not be found' if keys.one? { |key| hash_map[key].nil? }

    puts "  #{sample_name}: #{hash_map.total_collision_count} collisions, #{hash_map.fill_level} fill"
  end
end
