import   Geolocation   from     models geolocation model
import   AddressSelectorComponent   from    address selector component
import PlaceResult   google maps places PlaceResult

describe  AddressSelectorComponent
  let component  AddressSelectorComponent
  let converter  any
  let mapsApiLoader  any

  beforeEach
    converter   jasmine createSpyObj  converter     convertAddress
    mapsApiLoader   jasmine createSpyObj  mapsApiLoader     load
    component   new AddressSelectorComponent mapsApiLoader  converter


  describe  ngOnInit
    beforeEach
      spyOn component   initAddressSelector   and returnValue true
      component ngOnInit


    it  sets the input text label if a location is passed
      expect component inputText  toEqual
      component chosenLocation   new Geolocation  street   Bahnhofstrasse   zip   8000   city   Zurich
      component ngOnInit
      expect component inputText  toEqual  Bahnhofstrasse  8000 Zurich


    it  sets the input text to empty string if no location is passed
      expect component inputText  toEqual
      component ngOnInit
      expect component inputText  toEqual



  describe  onAddressFieldChanged
    const changeSpy   jasmine createSpy  propagateChange
    const touchedSpy   jasmine createSpy  propagateTouched

    beforeEach
      component registerOnChange changeSpy
      component registerOnTouched touchedSpy


    it  the field was changed via selection of the google autocomplete field
      const geolocation   new Geolocation
        zip   8000
        street   Industriestrasse
        city   ZÃ¼rich
        latitude  3 2222
        longitude  2 2222
        country   Switzerland

      component chosenLocation   undefined
      converter convertAddress and returnValue geolocation
      const place    PlaceResult
      component onAddressFieldChanged
      component onPlaceChanged place      simulating the listener event
      expect component chosenLocation  toBe geolocation
      expect changeSpy  toHaveBeenCalledWith geolocation
      expect touchedSpy  toHaveBeenCalled
      expect converter convertAddress  toHaveBeenCalledWith place


    it  the field was changed via invalid input so the handler did not fire   done
      component chosenLocation    Geolocation
      component onAddressFieldChanged
      setTimeout
        expect component chosenLocation  toBeUndefined
        expect touchedSpy  toHaveBeenCalled
        expect changeSpy  toHaveBeenCalledWith undefined
        expect converter convertAddress  not toHaveBeenCalled
        done
         600



  describe  writeValue
    const location    any   format         test

    it  sets the location to the given value and sets the input text
      component writeValue location
      expect component chosenLocation  toBe location
      expect component inputText  toEqual  test


    it  doesnt sets location if its not defined
      component writeValue undefined
      expect component chosenLocation  toBeUndefined
      expect component inputText  toEqual


    it  resets the value if undefined is passed
      component writeValue location
      component writeValue undefined
      expect component chosenLocation  toBeUndefined



import   MapsAPILoader   from   agm core
import   Component  ElementRef  forwardRef  Input  OnInit  ViewChild   from   angular core
import   AppSettings   from     app settings
import   Geolocation   from     models geolocation model
import   PlaceToGeodataConverter   from    place to geodata converter
import PlaceResult   google maps places PlaceResult
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms
import   I18n   from     i18n i18n

 Component
  selector   my address selector
  templateUrl   address selector component html
  providers

      provide  NG VALUE ACCESSOR
         tslint disable next line no forward ref
      useExisting  forwardRef       AddressSelectorComponent
      multi  true



export class AddressSelectorComponent implements OnInit  ControlValueAccessor
   Input   markInvalid   false
   ViewChild  search   searchElementRef  ElementRef
  chosenLocation  Geolocation
  i18n   I18n
  inputText  string
  private propagateChange       any
  private propagateTouched

  constructor private mapsAPILoader  MapsAPILoader  private converter  PlaceToGeodataConverter

  ngOnInit
    this initInputText
    this initAddressSelector


  private initInputText
    if  this chosenLocation
      this setInputText



  initAddressSelector
    this mapsAPILoader load   then
      this initAutocomplete



  onAddressFieldChanged
    this chosenLocation   undefined
    this propagateTouched
    this propagateChange this chosenLocation


  onPlaceChanged place  PlaceResult
    this chosenLocation   this converter convertAddress place
    if  this chosenLocation
      this setInputText

    this propagateChange this chosenLocation


     NOTICE  not tested because external
  private initAutocomplete
    const autocomplete   new google maps places Autocomplete this searchElementRef nativeElement
      componentRestrictions   country  AppSettings GOOGLE MAPS COUNTRY
      types    address

    autocomplete addListener  place changed         this onPlaceChanged autocomplete getPlace


  private setInputText
    this inputText   this chosenLocation format


  writeValue value  any   void
    this chosenLocation   value
    if  this chosenLocation
      this setInputText



  registerOnChange fn  any
    this propagateChange   fn


  registerOnTouched fn  any   void
    this propagateTouched   fn


import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule   from   angular forms
import   BrowserModule   from   angular platform browser
import   AddressSelectorComponent   from    address selector component
import   PlaceToGeodataConverter   from    place to geodata converter
import   RegionSelectorComponent   from    region selector component

const SHARED DECLARATIONS
  AddressSelectorComponent
  RegionSelectorComponent


 NgModule
  imports
    BrowserModule
    CommonModule
    FormsModule

  declarations
       SHARED DECLARATIONS

  exports
       SHARED DECLARATIONS

  providers
    PlaceToGeodataConverter


export class AddressSelectorModule

export interface AddressComponentsAsStruct
  route   string
  street number   string
  postal code   string
  locality   string
  country   string
   key  string   string

import   Geolocation   from     models geolocation model
import   PlaceToGeodataConverter   from    place to geodata converter
import PlaceResult   google maps places PlaceResult

describe  PlaceToGeodataConverter
  const converter   new PlaceToGeodataConverter
  const placeWithoutCoordinates    PlaceResult
    address components
       long name   7000   short name   7000   types    postal code


  const placeWithoutAddressComponents    PlaceResult
    geometry
      location
        lat     return 87 849385
        lng     return 85 384758




  const completePlaceResult  PlaceResult    PlaceResult
    address components
       long name   Au   types    route
       long name   23   types    street number
       long name   1   types    postal code
       long name   Wil   types    locality
       long name   Switzerland   types    country

    geometry
      location
        lat     return 87 849385
        lng     return 85 384758


    formatted address   Au 23  1 Wil  Switzerland


  const completeGeolocation  Geolocation   new Geolocation
    zip   1
    street   Au 23
    city   Wil
    country   Switzerland
    latitude  87 849385
    longitude  85 384758


  describe  convertAddress
    describe  returns undefined if data are missing
      it  returns undefined if place has no lat lng
        expect converter convertAddress placeWithoutCoordinates   toBeUndefined


      it  returns undefined if place has no address components
        expect converter convertAddress placeWithoutAddressComponents   toBeUndefined


      it  returns undefined if place has no zip
        const place  PlaceResult    PlaceResult
          address components
             long name   Au   types    route
             long name   Wil   types    locality
             long name   Switzerland   types    country

          geometry
            location
              lat     return 87 849385
              lng     return 85 384758



        expect converter convertAddress place   toBeUndefined



    describe  returns a Geolocation if all data are there
      it  returns a well formatted geolocation
        expect converter convertAddress completePlaceResult   toEqual completeGeolocation


      it  can handle a minimum of informations
        const place  PlaceResult    PlaceResult
          address components
             long name   Au   types    route
             long name   1   types    postal code
             long name   Wil   types    locality
             long name   Switzerland   types    country

          geometry
            location
              lat     return 87 849385
              lng     return 85 384758


          formatted address   Au 23  1 Wil  Switzerland


        const expected  Geolocation   new Geolocation
          zip   1
          street   Au
          city   Wil
          country   Switzerland
          latitude  87 849385
          longitude  85 384758

        expect converter convertAddress place   toEqual expected




  describe  convertRegion
    describe  returns a Geolocation
      it  returns a well formatted geolocation
        const place  PlaceResult    PlaceResult
          address components
             long name   Wil   types    locality
             long name   Switzerland   types    country

          geometry
            location
              lat     return 87 849385
              lng     return 85 384758


          formatted address   Wil  Switzerland


        const expected  Geolocation   new Geolocation
          city   Wil
          country   Switzerland
          latitude  87 849385
          longitude  85 384758

        expect converter convertRegion place   toEqual expected


      it  tolerates missing data
        const place  PlaceResult    PlaceResult
          address components
             long name   Switzerland   types    country

          geometry
            location
              lat     return 87 849385
              lng     return 85 384758


          formatted address   Switzerland


        const expected  Geolocation   new Geolocation
          city  undefined
          country   Switzerland
          latitude  87 849385
          longitude  85 384758

        expect converter convertRegion place   toEqual expected


      it  adds address if present
        expect converter convertRegion completePlaceResult   toEqual completeGeolocation



    describe  returns undefined if data are missing
      it  returns undefined if place has no lat lng
        expect converter convertRegion placeWithoutCoordinates   toBeUndefined


      it  returns undefined if place has no address components
        expect converter convertRegion placeWithoutAddressComponents   toBeUndefined




import PlaceResult   google maps places PlaceResult
import   Geolocation   from     models geolocation model
import   AddressComponentsAsStruct   from    address selector types
import LatLng   google maps LatLng

export class PlaceToGeodataConverter
  convertAddress place  PlaceResult   Geolocation   undefined
    if   this hasPlaceAllRequiredData place     return
    const deserializedPlace   this deserializePlace place
    return new Geolocation
      zip  deserializedPlace addressComponents postal code
      street  this convertStreet deserializedPlace addressComponents
      city  deserializedPlace addressComponents locality
      country  deserializedPlace addressComponents country
      latitude  deserializedPlace location lat
      longitude  deserializedPlace location lng



  convertRegion place  PlaceResult   Geolocation   undefined
    if   this hasPlaceMinimumRequiredData place     return
    const deserializedPlace   this deserializePlace place
    const geolocation   new Geolocation
      city  deserializedPlace addressComponents locality
      country  deserializedPlace addressComponents country
      latitude  deserializedPlace location lat
      longitude  deserializedPlace location lng

    if  this hasPlaceAllRequiredData place
      geolocation zip   deserializedPlace addressComponents postal code
      geolocation street   this convertStreet deserializedPlace addressComponents

    return geolocation


  private convertStreet addressComponents  AddressComponentsAsStruct
    return  addressComponents route  addressComponents street number  join      trim


  private deserializePlace place  PlaceResult
    return
      addressComponents  this deserializeAddressComponentsAsStruct place
      location  this deserializeGeometry place



  private deserializeAddressComponentsAsStruct place  PlaceResult   AddressComponentsAsStruct
    const address  AddressComponentsAsStruct
    for  const field of place address components
      address field types 0     field long name

    return address


  private deserializeGeometry place  PlaceResult   LatLng
    return place geometry location


  private hasPlaceAllRequiredData place  PlaceResult   boolean
    return this hasPlaceMinimumRequiredData place     this hasZip place


  private hasPlaceMinimumRequiredData place  PlaceResult   boolean
    return this hasHasGeometryData place     this hasAddressComponents place


  private hasZip place  PlaceResult
    if   this hasAddressComponents    return false
    return place address components map addressComponent    addressComponent types 0   includes  postal code


  private hasHasGeometryData place  PlaceResult   boolean
    return place hasOwnProperty  geometry      place geometry hasOwnProperty  location


  private hasAddressComponents place  PlaceResult   boolean
    return place hasOwnProperty  address components


import   Geolocation   from     models geolocation model
import   RegionSelectorComponent   from    region selector component
import PlaceResult   google maps places PlaceResult
import   MapsAPILoader   from   agm core

describe  RegionSelectorComponent
  let component  RegionSelectorComponent
  let converter  any
  const mapsLoader  MapsAPILoader    any
  const validGeolocation  Geolocation   new Geolocation
    city   ZÃ¼rich
    latitude  3 2222
    longitude  2 2222
    country   Switzerland


  function mockPlaceChangedEvent geolocation  Geolocation
    converter convertRegion and returnValue geolocation
    spyOn component onChooseLocation   emit
    const place    PlaceResult
    component onPlaceChanged place      simulating the listener event


  function expectForGeolocationAfter500Ms geolocation  Geolocation  runSpecs        void
    mockPlaceChangedEvent geolocation
    setTimeout
      runSpecs
       500


  beforeEach
    converter   jasmine createSpyObj  converter     convertRegion
    component   new RegionSelectorComponent mapsLoader  converter


  describe  ngOnInit
    beforeEach
      spyOn component   initAddressSelector   and returnValue true


    it  sets the input text label if a location is passed
      expect component inputText  toEqual
      component chosenLocation   new Geolocation  street   Bahnhofstrasse   zip   8000   city   Zurich
      component ngOnInit
      expect component inputText  toEqual  Bahnhofstrasse  8000 Zurich


    it  sets the input text to empty string if no location is passed
      expect component inputText  toEqual
      component ngOnInit
      expect component inputText  toEqual



  describe  onPlaceChanged
    it  the field was changed via selection of the google autocomplete field
      component chosenLocation   undefined
      mockPlaceChangedEvent validGeolocation
      expect component chosenLocation  toEqual validGeolocation
      expect component onChooseLocation emit  toHaveBeenCalledWith validGeolocation
      expect converter convertRegion  toHaveBeenCalled



  describe  ngOnChanges
    it  sets the input text label if a location is passed
      expect component inputText  toEqual
      component chosenLocation   new Geolocation  street   Bahnhofstrasse   zip   8000   city   Zurich
      component ngOnChanges
      expect component inputText  toEqual  Bahnhofstrasse  8000 Zurich


    it  doesnt changes the input text if no location is passed
      component inputText    test
      component chosenLocation   undefined
      component ngOnChanges
      expect component inputText  toEqual  test



  describe  onAddressFieldChanged
    it  sets the geolocation to undefined and emits it if inputText is empty
      component inputText
      component chosenLocation    any   city   test
      spyOn component onChooseLocation   emit
      component onAddressFieldChanged
      expect component onChooseLocation emit  toHaveBeenCalledWith undefined
      expect component chosenLocation  toBeUndefined
      expect component isSelectionValid  toBeTruthy


    describe  input text length   0
      beforeEach
        component inputText    test
        component onAddressFieldChanged


      it  sets isSelectionValid to false after 500ms if geolocation is valid   done
        expectForGeolocationAfter500Ms validGeolocation
          expect component onChooseLocation emit  toHaveBeenCalledWith validGeolocation
          expect component chosenLocation  toEqual validGeolocation
          expect component isSelectionValid  toBeTruthy
          done



      it  sets isSelectionValid to false after 500ms if geolocation is undefined   done
        expectForGeolocationAfter500Ms undefined
          expect component chosenLocation  toBeUndefined
          expect component isSelectionValid  toBeFalsy
          done



      it  sets isSelectionValid to false after 500ms if geolocation is lat is missing   done
        expectForGeolocationAfter500Ms  any
          city   ZÃ¼rich
          longitude  2 2222
          country   Switzerland

          expect component isSelectionValid  toBeFalsy
          done



      it  sets isSelectionValid to false after 500ms if geolocation is lng is missing   done
        expectForGeolocationAfter500Ms  any
          city   ZÃ¼rich
          latitude  2 2222
          country   Switzerland

          expect component isSelectionValid  toBeFalsy
          done





import   MapsAPILoader   from   agm core
import   Component  ElementRef  EventEmitter  forwardRef  Input  OnChanges  OnInit  Output  ViewChild   from   angular core
import   AppSettings   from     app settings
import   Geolocation   from     models geolocation model
import   PlaceToGeodataConverter   from    place to geodata converter
import PlaceResult   google maps places PlaceResult
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms
import   I18n   from     i18n i18n

 Component
  selector   my region selector
  templateUrl   region selector component html
  providers

      provide  NG VALUE ACCESSOR
         tslint disable next line no forward ref
      useExisting  forwardRef       RegionSelectorComponent
      multi  true



export class RegionSelectorComponent implements OnInit  OnChanges  ControlValueAccessor
   Output   onChooseLocation   new EventEmitter Geolocation   undefined
   Input   chosenLocation  Geolocation
   Input   markInvalid   false
   ViewChild  search   searchElementRef  ElementRef
  i18n   I18n
  inputText
  isSelectionValid   true
  private propagateChange       any

  constructor private mapsAPILoader  MapsAPILoader
              private converter  PlaceToGeodataConverter

  ngOnInit
    this setInputText
    this initAddressSelector


  initAddressSelector
    this mapsAPILoader load   then
      this initAutocomplete



  ngOnChanges
    this setInputText


  onPlaceChanged place  PlaceResult
    this chosenLocation   this converter convertRegion place
    this setSelectionIsValid
    this emitLocationChange


  private emitLocationChange
    this onChooseLocation emit this chosenLocation
    this propagateChange this chosenLocation


  onAddressFieldChanged
    this chosenLocation   undefined
    if  this inputText length     0
      this isSelectionValid   true
      this emitLocationChange



  private setSelectionIsValid
    this isSelectionValid   this isChosenLocationComplete


  private isChosenLocationComplete
    return   this chosenLocation      this chosenLocation latitude      this chosenLocation longitude


     NOTICE  not tested because external
  private initAutocomplete
    const autocomplete   new google maps places Autocomplete this searchElementRef nativeElement
      componentRestrictions   country  AppSettings GOOGLE MAPS COUNTRY

    autocomplete addListener  place changed         this onPlaceChanged autocomplete getPlace


  private setInputText
    if  this chosenLocation
      this inputText   this chosenLocation format



  writeValue value  any   void
    this chosenLocation   value
    this setInputText


  registerOnChange fn  any
    this propagateChange   fn


  registerOnTouched    void

  setDisabledState isDisabled  boolean   void
    const input   this searchElementRef nativeElement
    input disabled   isDisabled
    if  isDisabled
      this chosenLocation   undefined
      this inputText



import   NgModule   from   angular core
import   RouterModule   from   angular router
import   AdminGuardService   from     services admin guard service
import   WorkAdminDetailResolver   from     services work admin detail resolver service
import   AdminUsersComponent   from    users admin users component
import   AdminWorksComponent   from    works admin works component
import   AdminWorksModerateComponent   from    works moderate admin works moderate component

 NgModule
  imports
    RouterModule forChild

        path   admin   canLoad   AdminGuardService
        children
           path      redirectTo    admin users   pathMatch   full
           path   users   component  AdminUsersComponent
           path   works   component  AdminWorksComponent

            path   works
            children
               path      component  AdminWorksComponent

                path    id
                resolve   pendingWork  WorkAdminDetailResolver
                children
                   path   moderate   component  AdminWorksModerateComponent







  exports   RouterModule

export class AdminRoutingModule

import   CommonModule   from   angular common
import   NgModule   from   angular core
import   ApiModule   from     api api module
import   WorkAdminDetailResolver   from     services work admin detail resolver service
import   WorkService   from     services work service
import   AdminRoutingModule   from    admin routing module
import   AdminUsersService   from    users admin users service
import   AdminWorksService   from    works admin works service

 NgModule
  imports
    CommonModule
    ApiModule
    AdminRoutingModule

  providers
    AdminUsersService
    AdminWorksService
    WorkService
    WorkAdminDetailResolver


export class AdminModule

import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   TabItem   from        shared models tab item model
import   AdminUsersComponent   from    admin users component

describe  AdminUsersComponent
  let service  any
  let router  any
  let sessionService  any
  let component  AdminUsersComponent

  beforeEach
    service   jasmine createSpyObj  service     all    get
    router   jasmine createSpyObj  router     navigateByUrl
    sessionService   jasmine createSpyObj  sessionService     userChanged
    component   new AdminUsersComponent service  router  sessionService


  describe  ngOnInit
    const usersTab   new TabItem I18n t tabSubnavbar users   users
    const worksTab   new TabItem I18n t tabSubnavbar works   works
    it  calls all of the AdminUsersService
      expect component users  toEqual
      service all and returnValue Observable of  some   data
      component ngOnInit
      expect component tabItems  toEqual  usersTab  worksTab
      expect component users  toEqual  any   some   data



  describe  loginAsUser
    it  calls get of the AdminUsersService and redirects to the start page
      service get and returnValue Observable of undefined
      component loginAsUser  any   id  2
      expect service get  toHaveBeenCalledWith 2
      expect sessionService userChanged  toHaveBeenCalled
      expect router navigateByUrl  toHaveBeenCalledWith



import   Component  OnDestroy  OnInit   from   angular core
import   Router   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   User   from        models user model
import   SessionService   from        services session service
import   TabItem   from        shared models tab item model
import   AdminUsersService   from    admin users service

 Component
  templateUrl   admin users component html

export class AdminUsersComponent implements OnInit  OnDestroy
  tabItems  TabItem
  tab   users     works
  i18n   I18n
  users  User
  private subscription  Subscription

  constructor private service  AdminUsersService  private router  Router  private sessionService  SessionService

  ngOnInit
    this service all   subscribe users    this users   users
    this subscription   this i18n getLang   subscribe       this buildTabItems


  private buildTabItems
    this tabItems
      new TabItem this i18n t tabSubnavbar users   users
      new TabItem this i18n t tabSubnavbar works   works



  loginAsUser user  User
    this subscription   this service get user id  subscribe
      this router navigateByUrl
      this sessionService userChanged



  ngOnDestroy    void
    if  this subscription
      this subscription unsubscribe



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   AdminUsersApi   from        api endpoints admin users api service
import   AdminUsersService   from    admin users service

describe  AdminUsersService
  const api  AdminUsersApi   new AdminUsersApi null
  const service  AdminUsersService   new AdminUsersService api

  describe  all
    it  returns the list of users   done
      spyOn api   all   and returnValue Observable of  any    some   data
      service all   subscribe users
        expect api all  toHaveBeenCalled
        expect users  toEqual  any    some   data
        done




  describe  get
    it  calls get and doesnt returns anything   done
      spyOn api   get   and returnValue Observable of undefined
      service get 1  subscribe
        expect api get  toHaveBeenCalledWith 1
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   AdminUsersApi   from        api endpoints admin users api service
import   User   from        models user model

 Injectable
export class AdminUsersService
  constructor private api  AdminUsersApi

  all    Observable User
    return this api all


  get userId  number   Observable void
    return this api get userId


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   TabItem   from        shared models tab item model
import   AdminWorksComponent   from    admin works component

describe  AdminWorksComponent
  let service  any
  let userSessionService  any
  let component  AdminWorksComponent
  let user  any

  beforeEach
    user    id  12  firstName   Andrew   lastName   Surname
    service   jasmine createSpyObj  adminWorksService     allWorks    updateWork
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    component   new AdminWorksComponent service


  describe  ngOnInit
    const usersTab   new TabItem I18n t tabSubnavbar users   users
    const worksTab   new TabItem I18n t tabSubnavbar works   works

    it  calls all of the ngOnInit
      expect component works  toEqual
      service allWorks and returnValue Observable of  some   data
      userSessionService currentUser and returnValue Observable of user
      component ngOnInit
      expect component tabItems  toEqual  usersTab  worksTab
      expect component works  toEqual  any   some   data



import   Component  OnDestroy  OnInit   from   angular core
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   TabItem   from        shared models tab item model
import   WorkDescription   from        shared models work states work description model
import   AdminWorksService   from    admin works service

 Component
  templateUrl   admin works component html
  styleUrls    admin works component scss

export class AdminWorksComponent implements OnInit  OnDestroy
  tabItems  TabItem
  i18n   I18n
  works  WorkDescription
  private subscription  Subscription

  constructor private service  AdminWorksService

  ngOnInit    void
    this service allWorks   subscribe works    this works   works
    this subscription   this i18n getLang   subscribe       this buildTabItems


  private buildTabItems    void
    this tabItems
      new TabItem this i18n t tabSubnavbar users   users
      new TabItem this i18n t tabSubnavbar works   works



  ngOnDestroy    void
    if  this subscription
      this subscription unsubscribe



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import
  draftWorkCreateMockDataJSON  draftWorkIndexMockDataJSON
  draftWorkShowMockDataJSON  workUpdateMockDataJSON
  from        api mock data works api mock data
import   LawoonHttpMock   from        api utils lawoon http service mock
import   Category   from        categories shared category model
import   Subcategory   from        categories shared subcategory model
import   WorkDescriptionForm   from        customer work shared work description form model
import   Geolocation   from        models geolocation model
import   WorkFilter   from        public browse public work work filter model
import   PendingWork   from        shared models work states pending work model
import   WorkDescription   from        shared models work states work description model
import   AdminWorksService   from    admin works service

describe  AdminWorksService
  let api  any
  let userSessionService  any
  const http  any   new LawoonHttpMock

  let service  AdminWorksService
  const mockedResponse  Paginated WorkDescription     any

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    api   jasmine createSpyObj  workApi     allWorks    updateWork     all    get    getById    patch
       publishDraft    saveDraft    getDraftWork    deleteDraft
    service   new AdminWorksService api  http  userSessionService


  function buildWorkDescriptionForm    WorkDescriptionForm
    const workDescriptionForm   new WorkDescriptionForm
    workDescriptionForm title    adsf
    workDescriptionForm description    adfa
    workDescriptionForm workPlace   new Geolocation
       zip   8008   street   Dufourstrasse   city   ZÃ¼rich   latitude  47 35874829999999  longitude  8 551713899999982  country   Schweiz

    workDescriptionForm isPublic   false
    workDescriptionForm possibleTimes
    workDescriptionForm questions
    workDescriptionForm isPublic   false
    workDescriptionForm category   new Category
    workDescriptionForm subcategory   new Subcategory  id  20
    workDescriptionForm files
    workDescriptionForm estimatedWorkMinutes   210
    workDescriptionForm talents    any    id  1    id  2
    return workDescriptionForm


  describe  allWorks
    it  returns the list of works   done
      const mockedFilter  WorkFilter    any
      api allWorks and returnValue Observable of mockedResponse
      service allWorks mockedFilter  subscribe
        expect api allWorks  toHaveBeenCalledWith mockedFilter
        done




  describe   all
    it  returns the list of works   done
      spyOn http   get   and callThrough
      http mockResponse draftWorkIndexMockDataJSON
      service  all   subscribe allWorks
        expect allWorks 0   toEqual jasmine any WorkDescription
        expect http get  toHaveBeenCalledWith  admin works
        done




  describe  get
    it  calls get and doesnt returns anything   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse draftWorkShowMockDataJSON
      service get 7  subscribe
        expect spy  toHaveBeenCalledWith  admin works 7
        done




  describe  deleteDraft
    it  destroy work draft   done
      http mockResponse draftWorkShowMockDataJSON
      api deleteDraft and returnValue Observable of WorkDescription
      service deleteDraft 7  subscribe
        expect api deleteDraft  toHaveBeenCalledWith 7
        done




  describe  publishDraft
    it  updates a work description by id   done
      http mockResponse draftWorkCreateMockDataJSON
      api publishDraft and returnValue Observable of WorkDescription
      service publishDraft 7  subscribe
        expect api publishDraft  toHaveBeenCalledWith 7
        done




  describe  update
    it  updates a work description by id   done
      http mockResponse draftWorkCreateMockDataJSON
      api saveDraft and returnValue Observable of WorkDescription
      service update buildWorkDescriptionForm    7  subscribe
        expect api saveDraft  toHaveBeenCalledWith workUpdateMockDataJSON  7
        done




  describe  getDraftWork
    const pendingWork   new PendingWork

    beforeEach
      userSessionService currentUser and returnValue Observable of  id  5
      api getDraftWork and returnValue Observable of pendingWork


    it  calls the userSessionService to retrieve the current user   done
      service getDraftWork 3  subscribe
        expect userSessionService currentUser  toHaveBeenCalled
        done



    it  calls the api work service with the current user   done
      service getDraftWork 3  subscribe
        expect api getDraftWork  toHaveBeenCalledWith 5  3
        done



    it  returns a pending work   done
      service getDraftWork 3  subscribe pendingWorkResponse
        expect pendingWorkResponse  toEqual pendingWork
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   Api   from        api api
import   WorkApiObjectUpdateRequest   from        api endpoints work api interface
import   WorkApiObject   from        api endpoints work api interface
import   WorkApi   from        api endpoints work api service
import   LawoonHttp   from        api utils lawoon http service
import   WorkDescriptionForm   from        customer work shared work description form model
import   WorkFilter   from        public browse public work work filter model
import   UserSessionService   from        services user session service
import   WorkService   from        services work service
import   PendingWork   from        shared models work states pending work model
import   WorkDescription   from        shared models work states work description model

 Injectable
export class AdminWorksService extends WorkService
     TODO  are all needed
  constructor protected api  WorkApi  private http  LawoonHttp  protected userSessionService  UserSessionService
    super api  userSessionService


  allWorks filter  WorkFilter   new WorkFilter     Observable WorkDescription
    return this api allWorks filter


   all    Observable WorkDescription
    return this http get  admin works
       map data    new Api WorkApiObject  WorkDescription  data  deserializeArray


  get id  number   Observable void
    return this http get  admin works   id    map  data    undefined


  publishDraft id  number   Observable WorkDescription
    return this api publishDraft id


  update workDescriptionForm  WorkDescriptionForm  id  number   Observable WorkDescription
    const postData  WorkApiObjectUpdateRequest
      data   type   works   attributes  workDescriptionForm serializeForSave

    return this api saveDraft postData  id


  getDraftWork workId  number   Observable PendingWork
    return this userSessionService currentUser   first   mergeMap user    this api getDraftWork user id  workId


  deleteDraft workId  number   Observable void
    return this api deleteDraft workId


export   from    admin works component
import   FormBuilder   from   angular forms
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   draftWorkShowMockDataJSON   from           api mock data works api mock data
import   LawoonHttpMock   from           api utils lawoon http service mock
import   WorkDescriptionForm   from           customer work shared work description form model
import   I18n   from           i18n i18n
import   WorkDescription   from           shared models work states work description model
import   AdminWorksModerateComponent   from    admin works moderate component

describe  AdminWorksModerateComponent
  let service  any
  let router  any
  let alert  any
  let component  AdminWorksModerateComponent
  let location  any
  const http  any   new LawoonHttpMock
  const workDescriptionMock  WorkDescription   new WorkDescription
  workDescriptionMock id   4

  const route    any   snapshot   data   pendingWork   workDescription  workDescriptionMock
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched

  beforeEach
    alert   jasmine createSpyObj  alert     success    danger
    router   jasmine createSpyObj  router     navigate
    service   jasmine createSpyObj  service     publishDraft    deleteDraft
    location   jasmine createSpyObj  location     back
    component   new AdminWorksModerateComponent route  service  router  alert  formBuilder  formHelper  location


  describe  publishDraft
    const workDescriptionForm  WorkDescriptionForm   new WorkDescriptionForm
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeForms
      spyOn formHelper   setAsTouched
      component workDescriptionForm   workDescriptionForm


    describe  successful
      const newWorkDescription   new WorkDescription

      beforeEach
        newWorkDescription id   4
        const responseObservable   Observable of newWorkDescription
        service publishDraft and returnValue responseObservable
        component publishDraft


      it  submits the workDescriptionForm to the Service
        expect service publishDraft  toHaveBeenCalledWith component workDescription id


      it  sets the route data work descritpion to the new work descrption
        expect route snapshot data pendingWork workDescription  toEqual newWorkDescription


      it  shows an alert success message
        expect alert success  toHaveBeenCalledWith I18n t customerWorkEdit success


      it  navigates back to details view
        expect router navigate  toHaveBeenCalledWith   admin works



    describe  unsuccessful
      beforeEach
        const responseObservable   Observable throw null
        service publishDraft and returnValue responseObservable
        component publishDraft


      it  submits the workDescriptionForm to the Service
        expect service publishDraft  toHaveBeenCalledWith component workDescription id


      it  shows an alert danger message
        expect alert danger  toHaveBeenCalledWith I18n t customerWorkEdit error


      it  does not navigate back to details view
        expect router navigate  not toHaveBeenCalled




  describe  goBack
    it  goes to previous URL if navigated from app
      router navigated   true
      component goBack
      expect location back  toHaveBeenCalled


    it  goes one step higher if URL was pasted into browser
      router navigated   false
      component goBack
      expect router navigate  toHaveBeenCalledWith           queryParamsHandling   preserve



  describe  deleteDraft
    it  destroy work draft   done
      http mockResponse draftWorkShowMockDataJSON
      service deleteDraft and returnValue Observable of WorkDescription
      service deleteDraft 7  subscribe
        expect service deleteDraft  toHaveBeenCalledWith 7
        done




import   Location   from   angular common
import   Component  OnInit  ViewChild   from   angular core
import   FormBuilder  FormGroup   from   angular forms
import   ActivatedRoute  Router   from   angular router
import   AlertService   from           alerts alerts service
import   CustomerWorkEditComponent   from           customer work edit customer work edit component
import   WorkDescriptionForm   from           customer work shared work description form model
import   I18n   from           i18n i18n
import   WorkDescription   from           shared models work states work description model
import   FormHelper   from           utils form helper
import   AdminWorksService   from     admin works service
import   AdminWorksModerateClientComponent   from    client admin works moderate client component

 Component
  templateUrl   admin works moderate component html

export class AdminWorksModerateComponent extends CustomerWorkEditComponent implements OnInit
  workDescriptionForm  WorkDescriptionForm
  workModerateForm  FormGroup
   ViewChild  clientDetailsModal   clientDetailsModal  AdminWorksModerateClientComponent

  constructor protected route  ActivatedRoute  protected workService  AdminWorksService  protected router  Router
              protected alertService  AlertService  protected formBuilder  FormBuilder  protected formHelper  FormHelper
              protected location  Location
    super route  workService  router  alertService  formBuilder  formHelper


  goBack    void
    if  this router navigated
      this location back
      else
      this router navigate           queryParamsHandling   preserve



  publishDraft    void
    this workService publishDraft this workDescription id
       subscribe       this onSuccess this workDescription         this onError


  protected onSuccess work  WorkDescription   void
    this route snapshot data  pendingWork   workDescription   work
    this alertService success I18n t customerWorkEdit success
    this router navigate   admin works


  deleteDraft    void
    this workService deleteDraft this workDescription id
       subscribe       this onSuccess this workDescription         this onError


import   ActivatedRoute   from   angular router
import   AdminWorksModerateClientComponent   from    admin works moderate client component

describe  AdminWorksModerateClientComponent
  let component  AdminWorksModerateClientComponent
  let clientDetailsModal  any
  const route  ActivatedRoute    any   snapshot   params   redirect   dashboard    queryParams

  beforeEach
    clientDetailsModal   jasmine createSpyObj  clientDetailsModal     show    hide
    component   new AdminWorksModerateClientComponent route
    component clientDetailsModal   clientDetailsModal


  describe  ngAfterViewInit
    it  sets the redirectUrl
      component ngAfterViewInit
      expect component redirectUrl  toEqual  dashboard



import   AfterViewInit  Component  Input  ViewChild   from   angular core
import   ActivatedRoute   from   angular router
import   ModalDirective   from  ng2 bootstrap modal
import   WorkDescriptionForm   from              customer work shared work description form model
import   I18n   from              i18n i18n
import   WorkDescription   from              shared models work states work description model

 Component
  templateUrl   admin works moderate client component html
  selector   my admin works moderate client

export class AdminWorksModerateClientComponent implements AfterViewInit
   ViewChild  clientDetailsModal   clientDetailsModal  ModalDirective

  workDescriptionForm  WorkDescriptionForm
   Input   workDescription  WorkDescription

  i18n   I18n
  isErrorMessageVisible  boolean   false
  errorMessage  string
  formSent   false
  redirectUrl  string

  constructor private route  ActivatedRoute

  ngAfterViewInit    void
    this redirectUrl   this route snapshot params  redirect


import   AlertService   from    alerts service

describe  AlertsService
  let alertService  any
  let toastyService  any
  const toastyConfig    any   theme   default

  beforeEach
    toastyService   jasmine createSpyObj  toastyService     success    info    warning    error    wait    clearAll
    alertService   new AlertService toastyService  toastyConfig


  describe  setting up toastyConfig
    it  sets the configs theme to bootstrap
      expect toastyConfig theme  toEqual  bootstrap



  describe  alert methods
    describe  success
      it  calls the success method of the toastyService wihthout title
        alertService success  test
        expect toastyService success  toHaveBeenCalledWith  title      msg   test


      it  calls the success method of the toastyService wihth title
        alertService success  test    title
        expect toastyService success  toHaveBeenCalledWith  title   title   msg   test



    describe  info
      it  calls the info method of the toastyService wihthout title
        alertService info  test
        expect toastyService info  toHaveBeenCalledWith  title      msg   test


      it  calls the info method of the toastyService wihth title
        alertService info  test    title
        expect toastyService info  toHaveBeenCalledWith  title   title   msg   test



    describe  warning
      it  calls the warning method of the toastyService wihthout title
        alertService warning  test
        expect toastyService warning  toHaveBeenCalledWith  title      msg   test


      it  calls the warning method of the toastyService wihth title
        alertService warning  test    title
        expect toastyService warning  toHaveBeenCalledWith  title   title   msg   test



    describe  error
      it  calls the error method of the toastyService wihthout title
        alertService danger  test
        expect toastyService error  toHaveBeenCalledWith  title      msg   test


      it  calls the error method of the toastyService wihth title
        alertService danger  test    title
        expect toastyService error  toHaveBeenCalledWith  title   title   msg   test



    describe  wait
      it  calls the wait method of the toastyService wihthout title
        alertService wait  test
        expect toastyService wait  toHaveBeenCalledWith  title  undefined  msg   test   timeout  100000


      it  calls the wait method of the toastyService wihth title
        alertService wait  test    title
        expect toastyService wait  toHaveBeenCalledWith  title   title   msg   test   timeout  100000



    describe  clearAll
      it  calls clearAll from the toastyService
        alertService clearAll
        expect toastyService clearAll  toHaveBeenCalled




import   Injectable   from   angular core
import   ToastOptions  ToastyConfig  ToastyService   from  ng2 toasty

 Injectable
export class AlertService
  constructor private toastyService  ToastyService  private toastyConfig  ToastyConfig
    this toastyConfig theme    bootstrap


  success message  string  title   string
    this toastyService success this getToastOptions message  title


  info message  string  title   string
    this toastyService info this getToastOptions message  title


  warning message  string  title   string
    this toastyService warning this getToastOptions message  title


  danger message  string  title   string
    this toastyService error this getToastOptions message  title


    Call clearAll after calling this one
  wait message  string  title   string
    this toastyService wait
      title
      msg  message
      timeout  100000



  clearAll
    this toastyService clearAll


  private getToastOptions message  string  title  string        ToastOptions
    return  title  msg  message


export   from    alerts service
import   CommonModule   from   angular common
import   NgModule   from   angular core
import   HttpModule   from   angular http
import   AdminUsersApi   from    endpoints admin users api service
import   BillApi   from    endpoints bill api service
import   ChatHashApi   from    endpoints chat hash api service
import   ContractApi   from    endpoints contract api service
import   CostApi   from    endpoints cost api service
import   DeclinedOfferApi   from    endpoints declined offer api service
import   LinkUrlApi   from    endpoints link url api service
import   MessageApi   from    endpoints message api service
import   NotificationSettingsApi   from    endpoints notification settings api
import   OfferApi   from    endpoints offer api service
import   PaymentMethodsApi   from    endpoints payment methods api service
import   ReceiptApi   from    endpoints receipt api service
import   TalentBankAccountApi   from    endpoints talent bank account api service
import   TalentRatingApi   from    endpoints talent rating api service
import   UserApi   from    endpoints user api service
import   WorkApi   from    endpoints work api service
import   WorkFlowApi   from    endpoints work flow api service
import   LawoonHttp   from    utils lawoon http service
import   LawoonHttpMock   from    utils lawoon http service mock

 NgModule
  imports
    CommonModule
    HttpModule
  providers
    AdminUsersApi
    BillApi
    ChatHashApi
    ContractApi
    CostApi
    DeclinedOfferApi
    LawoonHttp
    LawoonHttpMock
    LinkUrlApi
    MessageApi
    NotificationSettingsApi
    OfferApi
    PaymentMethodsApi
    ReceiptApi
    TalentBankAccountApi
    TalentRatingApi
    UserApi
    WorkApi
    WorkFlowApi


export class ApiModule

import   Offer   from     shared models work states offer model
import   Api   from    api

function wrap x  any
  return
    json        x



describe  Api
  describe  without serializer
    it  should throw exception when trying to deserialize model of which mapping is not defined
      const jsonapiData
        data
          type   asdf
          id   1
          attributes   id  1

        links
          self   current
          nextPage   current

        meta
          currentPage  2
          nextPage  3


      const api   new Api wrap jsonapiData   false
      expect       api deserializeObject    toThrowError


    it  throws an error if deserialize   is not called with an array
      const jsonapiData
        data
          type   example
          attributes   id  1


      const api   new Api any  any  wrap jsonapiData   false
      expect       api deserializeForPagination    toThrow new Error  Data is an object instead of an array


    it  creates a structure if links and meta are provided
      const jsonapiData
        data   any
        links
          aLink   test

        meta
          aMeta   meta


      const api   new Api any  any  wrap jsonapiData   false
      const expectedResponse
        data   any
        links   aLink   test
        meta   aMeta   meta

      expect api deserializeForPagination    toEqualData expectedResponse


    it  throws error because mapping is not defined
      const jsonapiData
        data
          type   example
          attributes   id  1

          type   example
          attributes   id  1


      const api   new Api any  any  wrap jsonapiData   false
      expect       api deserializeForPagination    toThrow new Error  Model mapping for  example  is not defined



  describe  with serializer
    it  should throw exception when trying to pass a deserializer which is not defined
      const api   new Api wrap  data   type   nonExisting
      expect       api deserializeForPagination    toThrowError


    it  if passed useDeserializer  it looks for the deserializer mapping and calls an external deserializer
      const jsonapiData  any
        data
          id   53
          type   offers
          attributes
            title   Flannel gentrify bitters
            duration  4
            chosenTimes    from   2017 01 22T06 53 14 000Z   to   2017 01 22T13 57 42 000Z
            offerText   Test Offer Text
            hourlyRate  168
            serviceFee  0 2
            questions

                question   You are unwise to lower your defenses
                answer   Yes


                question   No reward is worth this
                answer   No


            talentId  1
            createdAt   2017 01 02T13 03 45 717 01 00
            zip   12172
            city   Dustinview
            costItems
            workCost
              amount  4
              cost  806 4


          relationships
            subcategory
              data
                id   33
                type   subcategories


            workFlow
              data
                id   33
                type   workFlows





      const api   new Api wrap jsonapiData
      expect api deserializeObject    toEqual jasmine any Offer



import   isEmpty   from  lodash
import   ApiRelation  ApiResponse  ApiResponseObject  Deserializer  JsonApiHttpResponse  Paginated   from    api types
import   deserializerMappings  modelMappings   from    mappings
import   IncludesSorter   from    utils includes sorter
import   LookupTable   from    utils lookup table

export class Api TIn extends ApiResponseObject  TOut
  private table   new LookupTable
  private response  ApiResponse TIn
  private responseData  TIn   TIn

  constructor httpResponse  JsonApiHttpResponse TIn   private useDeserializer  boolean   true
    this response   httpResponse json
    this responseData   this response data


  deserializeObject    TOut
    this buildObjectMap
    if  this responseData instanceof Array
      throw new Error  Data is an array instead of an object

    this remapRelationships this responseData
    return this deserializeObjectByType this responseData


  deserializeArray    TOut
    this buildObjectMap
    if    this responseData instanceof Array
      throw new Error  Data is an object instead of an array

    this responseData map  obj  any     this remapRelationships obj
    return this deserializeArrayByType this responseData


     build hash table of objects included in the response for instant lookups
  private buildObjectMap
    if   this response included    return

    new IncludesSorter this response included  sort   forEach obj
      this remapRelationships obj
      this table add obj type  this parseId obj   this deserializeObjectByType obj



  private deserializeObjectByType data  ApiResponseObject   TOut
    if  this useDeserializer
      return this createDeserializer data  deserialize


    if   modelMappings data type
      throw new Error  Model mapping for    data type   is not defined

    return  new modelMappings data type     deserialize data


  private createDeserializer data  ApiRelation   Deserializer TOut
    if   deserializerMappings data type
      throw new Error  Deserializer mapping for    data type   is not defined


    const deserializer  Deserializer any    new deserializerMappings data type  data
    return  Deserializer TOut   deserializer


  private deserializeArrayByType data  any     TOut
    return data map obj    this deserializeObjectByType obj


     remap relationships in the data to actual included objects
  private remapRelationships obj  ApiResponseObject
    if  isEmpty this table      obj relationships    return

    for  const key of Object keys obj relationships
      this remapRelationship obj  key



  private remapRelationship obj  ApiResponseObject  key  string
    if   obj resolvedRelationships    obj resolvedRelationships
    if  obj relationships key  data     null    return

    const relationshipData  ApiRelation   ApiRelation     obj relationships key  data
    if  relationshipData instanceof Array
      obj resolvedRelationships key    relationshipData
         map  relatedObj  ApiRelation     this table get relatedObj type  this parseId relatedObj
      else
      obj resolvedRelationships key    this table get relationshipData type  this parseId relationshipData



  private parseId object   id  string    number
    return parseInt object id  10


  deserializeForPagination    Paginated TOut
    return
      data  this deserializeArray
      links  this response links
      meta  this response meta



export interface JsonApiHttpResponse TIn extends ApiResponseObject
  json        ApiResponse TIn


export interface ApiResponse TIn extends ApiResponseObject
  data  TIn   TIn
  links   any
  meta   any
  included   ApiResponseObject


export interface ApiResponseObject
  id  string
  type  string
  attributes    key  string   any
  relationships   ApiRelationshipMap
  resolvedRelationships     key  string   any


export interface ApiRelationshipMap
   key  string   ApiRelationship   ApiRelationshipArray


export interface ApiRelationship
  data  ApiRelation


export interface ApiRelationshipArray
  data  ApiRelation


export interface ApiNoRelationship
  data  null


export interface ApiTypedRelationship T
  data  ApiTypedRelation T


interface ApiTypedRelation T
  id  string
  type  T


export interface ApiTypedRelationshipArray T
  data  ApiTypedRelation T


export interface ApiRelation
  id  string
  type  string


export interface Paginated T
  data  T
  links   any
  meta   ApiPagination


export interface ApiPagination
  currentPage  number
  nextPage  number
  prevPage  number
  totalCount  number
  totalPages  number


export interface DeserializerConstructor T
  new  data  any   Deserializer T


export interface Deserializer T
  deserialize    T

import   merge   from  lodash
import   User   from        models user model
import   PaymentMethod   from        payment payment method model
import   Contract   from        shared models contract model
import   WorkFlow   from        shared models work flow model
import   Bill   from        shared models work states bill
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   billMockJSON   from     mock data bill api service mock data
import   BillDeserializer   from    bill deserializer
import   expectResolvedRelationship   from    deserializer spec helper

function deserializeBill overriddenIncomingData
  const deserializer   new BillDeserializer merge     billMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  BillDeserializer
  it  returns a bill
    expect deserializeBill    toEqual jasmine any Bill


  describe  it deserializes the
    it  id
      expect deserializeBill   id  toEqual 1


    it  createdAt
      const expected   new Date  2017 01 23T16 50 34 982 01 00
      expect deserializeBill   createdAt  toEqual expected


    describe  archivedAt
      it  serializes if archived at is given
        const expected  Date   new Date  2017 01 23T16 50 34 982 01 00
        expect deserializeBill   archivedAt  toEqual expected


      it  must return undefined if date is null to avoid invalid date object
        expect deserializeBill  attributes   archivedAt  null    archivedAt  toBeUndefined



    it  cost
      expect deserializeBill   cost  toEqual billMockJSON attributes cost


    it  workFlow
      expect deserializeBill   workFlow  toEqual new WorkFlow parseInt billMockJSON relationships workFlow data id  10


    expectResolvedRelationship deserializeBill   contract    contract   new Contract
    expectResolvedRelationship deserializeBill   offer    offer   new Offer
    expectResolvedRelationship deserializeBill   workDescription    work   new WorkDescription
    expectResolvedRelationship deserializeBill   paymentMethod    paymentMethod   new PaymentMethod 1   tok XX   true  null
    expectResolvedRelationship deserializeBill   customer    user   new User


import   WorkFlow   from        shared models work flow model
import   Bill   from        shared models work states bill
import   BillApiObject  BillApiObjectAttributes   from     endpoints bill api interface

export class BillDeserializer
  private attr  BillApiObjectAttributes
  private bill  Bill

  constructor private data  BillApiObject
    this bill   new Bill
    this attr   this data attributes


  deserialize    Bill
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    this deserializeRelationships
    return this bill


  private assignRelationships
    if  this data resolvedRelationships
      this bill contract   this data resolvedRelationships contract
      this bill offer   this data resolvedRelationships offer
      this bill workDescription   this data resolvedRelationships work
      this bill talent   this data resolvedRelationships talent
      this bill customer   this data resolvedRelationships user
      this bill paymentMethod   this data resolvedRelationships paymentMethod



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this bill id   parseInt this data id  10


  private deserializeAttributes
    this deserializeCreatedAt
    this deserializeArchivedAt
    this deserializeCost


  private deserializeCreatedAt
    this bill createdAt   new Date this attr createdAt


  private deserializeArchivedAt
    if  this attr archivedAt
      this bill archivedAt   new Date this attr archivedAt



  private deserializeCost
    this bill cost   this attr cost


  private deserializeRelationships
    this deserializeWorkFlow


  private deserializeWorkFlow
    this bill workFlow   new WorkFlow parseInt this data relationships workFlow data id  10


import   as   from  lodash
import   Category   from        categories shared category model
import   Subcategory   from        categories shared subcategory model
import   categoryMockDataJSON   from     mock data category api service mock data
import   CategoryDeserializer   from    category deserializer
import   expectResolvedRelationship   from    deserializer spec helper

function deserializeCategory overriddenIncomingData
  const deserializer   new CategoryDeserializer   merge     categoryMockDataJSON  overriddenIncomingData
  return deserializer deserialize


describe  CategoryDeserializer
  it  can be instantiated with a Category
    expect new CategoryDeserializer categoryMockDataJSON   toEqual jasmine any CategoryDeserializer


  it  returns a category
    expect new CategoryDeserializer categoryMockDataJSON  deserialize    toEqual jasmine any Category


  describe  it deserializes the
    it  name
      expect deserializeCategory   name  toEqual  Category One


    it  icon url
      expect deserializeCategory   iconUrl  toEqual  this icon svg


    expectResolvedRelationship deserializeCategory   subcategories    subcategories    new Subcategory


import   Category   from        categories shared category model
import   CategoryApiObject  CategoryApiObjectAttributes   from     endpoints category api interface

export class CategoryDeserializer
  private category  Category
  private attr  CategoryApiObjectAttributes

  constructor private data  CategoryApiObject
    this category   new Category
    this attr   this data attributes


  deserialize    Category
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this category


  private deserializeNonAttributes
    this category id   parseInt this data id  10


  private deserializeAttributes
    this category name   this attr name
    this category iconUrl   this attr iconUrl


  private assignRelationships
    if  this data resolvedRelationships
      this category subcategories   this data resolvedRelationships subcategories



import   as   from  lodash
import   chatHashMockJSON   from     mock data chat hash api service mock data
import   ChatHashDeserializer   from    chat hash deserializer

function deserializeChatHash overriddenIncomingData
  const deserializer   new ChatHashDeserializer   merge     chatHashMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  ChatHashDeserializer
  describe  it deserializes the
    it  chatHash
      expect deserializeChatHash    toEqual chatHashMockJSON attributes



import   ChatHashApiObject  ChatHashApiObjectAttributes   from     endpoints chat hash api interface

export interface ChatHash
  chatHash  string


export class ChatHashDeserializer
  private attr  ChatHashApiObjectAttributes

  constructor private data  ChatHashApiObject
    this attr   this data attributes


  deserialize    ChatHash
    return this attr


import   as   from  lodash
import   Talent   from        models talent model
import   User   from        models user model
import   PaymentMethod   from        payment payment method model
import   Contract   from        shared models contract model
import   PossibleTime   from        shared models possible time model
import   WorkFlow   from        shared models work flow model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   contractMockDataJSON   from     mock data contract api service mock data
import   ContractDeserializer   from    contract deserializer
import   expectResolvedRelationship   from    deserializer spec helper

function deserializeContract overriddenIncomingData
  const deserializer   new ContractDeserializer   merge     contractMockDataJSON  overriddenIncomingData
  return deserializer deserialize


describe  ContractDeserializer
  it  can be instantiated with a contract
    expect new ContractDeserializer contractMockDataJSON   toEqual jasmine any ContractDeserializer


  it  returns a contract
    expect new ContractDeserializer contractMockDataJSON  deserialize    toEqual jasmine any Contract


  describe  it deserializes the
    it  id
      expect deserializeContract   id  toEqual 1


    it  createdAt
      expect deserializeContract   createdAt  toEqual new Date  2017 01 22T14 49 53 988 01 00


    it  chosenTime
      expect deserializeContract   chosenTime  toEqual  new PossibleTime new Date  2017 02 22T14 49 53 988 01 00


    it  workFlow
      expect deserializeContract   workFlow  toEqual new WorkFlow parseInt contractMockDataJSON relationships workFlow data id  10



  expectResolvedRelationship deserializeContract   paymentMethod    paymentMethod   new PaymentMethod 1   tok XX   true  null
  expectResolvedRelationship deserializeContract   workDescription    work   new WorkDescription
  expectResolvedRelationship deserializeContract   customer    user   new User
  expectResolvedRelationship deserializeContract   talent    talent   new Talent
  expectResolvedRelationship deserializeContract   offer    offer   new Offer

import   Contract   from        shared models contract model
import   PossibleTime   from        shared models possible time model
import   WorkFlow   from        shared models work flow model
import   ContractApiObject  ContractApiObjectAttributes   from     endpoints contract api interface

export class ContractDeserializer
  private attr  ContractApiObjectAttributes
  private contract  Contract

  constructor private data  ContractApiObject
    this contract   new Contract
    this attr   this data attributes


  deserialize    Contract
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    this deserializeRelationships
    return this contract


  private assignRelationships
    if  this data resolvedRelationships
      this contract paymentMethod   this data resolvedRelationships paymentMethod
      this contract workDescription   this data resolvedRelationships work
      this contract customer   this data resolvedRelationships user
      this contract talent   this data resolvedRelationships talent
      this contract offer   this data resolvedRelationships offer



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this contract id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeArrays


  private deserializeSimpleTypes
    this deserializeCreatedAt


  private deserializeCreatedAt
    this contract createdAt   new Date this attr createdAt


  private deserializeArrays
    this deserializeTimeSuggestions


  private deserializeTimeSuggestions
    this contract chosenTime   this attr chosenTime map timeData    new PossibleTime new Date timeData from


  private deserializeRelationships
    this deserializeWorkFlow


  private deserializeWorkFlow
    this contract workFlow   new WorkFlow parseInt this data relationships workFlow data id  10


import   as   from  lodash
import   costMockJSON   from     mock data cost api service mock data
import   CostDeserializer   from    cost deserializer

function deserializeCost overriddenIncomingData
  const deserializer   new CostDeserializer   merge     costMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  CostDeserializer
  describe  it deserializes the
    it  cost
      expect deserializeCost    toEqual costMockJSON attributes cost



import   Cost   from        shared models cost cost model
import   CostApiObject  CostApiObjectAttributes   from     endpoints cost api interface

export class CostDeserializer
  private attr  CostApiObjectAttributes

  constructor private data  CostApiObject
    this attr   this data attributes


  deserialize    Cost
    return this attr cost


import   as   from  lodash
import   Talent   from        models talent model
import   User   from        models user model
import   WorkFlow   from        shared models work flow model
import   DeclinedInvitation   from        shared models work states declined invitation model
import   WorkDescription   from        shared models work states work description model
import   declinedInvitationMockDataJSON   from     mock data declined invitation api service mock data
import   DeclinedInvitationDeserializer   from    declined invitation deserializer
import   expectResolvedRelationship   from    deserializer spec helper

function deserializeDeclinedInvitation overriddenIncomingData
  const deserializer   new DeclinedInvitationDeserializer   merge     declinedInvitationMockDataJSON  overriddenIncomingData
  return deserializer deserialize


describe  DeclinedInvitationDeserializer
  it  can be instantiated with a declined invitation
    expect new DeclinedInvitationDeserializer declinedInvitationMockDataJSON   toEqual jasmine any DeclinedInvitationDeserializer


  it  returns a declined invitation
    expect new DeclinedInvitationDeserializer declinedInvitationMockDataJSON  deserialize    toEqual jasmine any DeclinedInvitation


  describe  it deserializes the
    it  id
      expect deserializeDeclinedInvitation   id  toEqual 3


    it  createdAt
      expect deserializeDeclinedInvitation   createdAt  toEqual new Date  2017 06 29T17 25 12 078 02 00


    it  declinedBy
      expect deserializeDeclinedInvitation   declinedBy  toBe  customer



  expectResolvedRelationship deserializeDeclinedInvitation   workDescription    work   new WorkDescription
  expectResolvedRelationship deserializeDeclinedInvitation   talent    talent   new Talent
  expectResolvedRelationship deserializeDeclinedInvitation   customer    user   new User
  expectResolvedRelationship deserializeDeclinedInvitation   workFlow    workFlow   new WorkFlow 1

import   DeclinedInvitation   from        shared models work states declined invitation model
import   DeclinedInvitationApiObject  DeclinedInvitationApiObjectAttributes   from     endpoints declined invitation api interface

export class DeclinedInvitationDeserializer
  private attr  DeclinedInvitationApiObjectAttributes
  private declinedInvitation  DeclinedInvitation

  constructor private data  DeclinedInvitationApiObject
    this declinedInvitation   new DeclinedInvitation
    this attr   this data attributes


  deserialize    DeclinedInvitation
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this declinedInvitation


  private assignRelationships
    if  this data resolvedRelationships
      this declinedInvitation workDescription   this data resolvedRelationships work
      this declinedInvitation customer   this data resolvedRelationships user
      this declinedInvitation talent   this data resolvedRelationships talent
      this declinedInvitation workFlow   this data resolvedRelationships workFlow



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this declinedInvitation id   parseInt this data id  10


  private deserializeAttributes
    this deserializeCreatedAt
    this deserializeDeclinedBy


  private deserializeCreatedAt
    this declinedInvitation createdAt   new Date this attr createdAt


  private deserializeDeclinedBy
    this declinedInvitation declinedBy   this attr declinedBy


import   as   from  lodash
import   Talent   from        models talent model
import   User   from        models user model
import   WorkFlow   from        shared models work flow model
import   DeclinedOffer   from        shared models work states declined offer model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   declinedOfferMockDataJSON   from     mock data declined offer api service mock data
import   DeclinedOfferDeserializer   from    declined offer deserializer
import   expectResolvedRelationship   from    deserializer spec helper

function deserializeDeclinedOffer overriddenIncomingData
  const deserializer   new DeclinedOfferDeserializer   merge     declinedOfferMockDataJSON  overriddenIncomingData
  return deserializer deserialize


describe  DeclinedOfferDeserializer
  it  can be instantiated with a declined offer
    expect new DeclinedOfferDeserializer declinedOfferMockDataJSON   toEqual jasmine any DeclinedOfferDeserializer


  it  returns a declined offer
    expect new DeclinedOfferDeserializer declinedOfferMockDataJSON  deserialize    toEqual jasmine any DeclinedOffer


  describe  it deserializes the
    it  id
      expect deserializeDeclinedOffer   id  toEqual 1


    it  createdAt
      expect deserializeDeclinedOffer   createdAt  toEqual new Date  2017 01 22T14 49 53 988 01 00


    it  workFlow
      expect deserializeDeclinedOffer   workFlow
         toEqual new WorkFlow parseInt declinedOfferMockDataJSON relationships workFlow data id  10


    it  reason
      expect deserializeDeclinedOffer   reason  toEqual  to expensive


    it  declinedBy
      expect deserializeDeclinedOffer   declinedBy  toBe  customer



  expectResolvedRelationship deserializeDeclinedOffer   workDescription    work   new WorkDescription
  expectResolvedRelationship deserializeDeclinedOffer   customer    user   new User
  expectResolvedRelationship deserializeDeclinedOffer   talent    talent   new Talent
  expectResolvedRelationship deserializeDeclinedOffer   offer    offer   new Offer

import   WorkFlow   from        shared models work flow model
import   DeclinedOffer   from        shared models work states declined offer model
import   DeclinedOfferApiObject  DeclinedOfferApiObjectAttributes   from     endpoints declined offer api interface

export class DeclinedOfferDeserializer
  private attr  DeclinedOfferApiObjectAttributes
  private declinedOffer  DeclinedOffer

  constructor private data  DeclinedOfferApiObject
    this declinedOffer   new DeclinedOffer
    this attr   this data attributes


  deserialize    DeclinedOffer
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    this deserializeRelationships
    return this declinedOffer


  private assignRelationships
    if  this data resolvedRelationships
      this declinedOffer workDescription   this data resolvedRelationships work
      this declinedOffer customer   this data resolvedRelationships user
      this declinedOffer talent   this data resolvedRelationships talent
      this declinedOffer offer   this data resolvedRelationships offer



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this declinedOffer id   parseInt this data id  10


  private deserializeAttributes
    this deserializeReason
    this deserializeCreatedAt
    this deserializeDeclinedBy


  private deserializeReason
    this declinedOffer reason   this attr reason


  private deserializeCreatedAt
    this declinedOffer createdAt   new Date this attr createdAt


  private deserializeDeclinedBy
    this declinedOffer declinedBy   this attr declinedBy


  private deserializeRelationships
    this deserializeWorkFlow


  private deserializeWorkFlow
    this declinedOffer workFlow   new WorkFlow parseInt this data relationships workFlow data id  10


import   parseFloatOrNumber   from    deserializer helper

describe  parseFloatOrNumber
  it  parses a number
    expect parseFloatOrNumber 1   toEqual 1


  it  parses a string as a number
    expect parseFloatOrNumber  1 222223    toBeCloseTo 1 222223


export function parseFloatOrNumber input  string   number
  return typeof input      number    parseFloat input    input

export function expectResolvedRelationship deserialize   overriddenIncomingData          any
                                           propertyName  string  apiPropertyName  string  resolvedRelationship  any
                                           expectedRelationship  any   resolvedRelationship
  describe propertyName
    it  does also work if not passed in
      const deserializedObject  any   deserialize
      expect deserializedObject propertyName   toBeUndefined


    it  deserializes the   propertyName  if was passed in as a resolved relationship by the api mapping
      const additional  any    resolvedRelationships
      additional resolvedRelationships apiPropertyName    resolvedRelationship
      const deserializedObject  any   deserialize additional
      expect deserializedObject propertyName   toEqual expectedRelationship



import   as   from  lodash
import   linkUrlMockJSON   from     mock data link url api service mock data
import   LinkUrlDeserializer   from    link url deserializer

function deserializeLinkUrl overriddenIncomingData
  const deserializer   new LinkUrlDeserializer   merge     linkUrlMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  LinkUrlDeserializer
  describe  it deserializes the
    it  linkUrl
      expect deserializeLinkUrl    toEqual linkUrlMockJSON attributes



import   LinkUrlApiObject  LinkUrlApiObjectAttributes   from     endpoints link url api interface

export interface LinkUrl
  linkUrl  string


export class LinkUrlDeserializer
  private attr  LinkUrlApiObjectAttributes

  constructor private data  LinkUrlApiObject
    this attr   this data attributes


  deserialize    LinkUrl
    return this attr


import   as   from  lodash
import   notificationSettingsMockJSON   from     mock data notification settings mock data
import   NotificationSettingsDeserializer   from    notification settings deserializer

function deserializeNotificationSettings overriddenIncomingData
  const deserializer   new NotificationSettingsDeserializer   merge     notificationSettingsMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  NotificationSettingsDeserializer
  describe  it deserializes the
    it  notificationSettings
      expect deserializeNotificationSettings    toEqual notificationSettingsMockJSON attributes notificationSettings


    it  eventNotifications
      expect deserializeNotificationSettings   eventNotifications newInvitation email  toBe false
      expect deserializeNotificationSettings   eventNotifications newOffer email  toBe true
      expect deserializeNotificationSettings   eventNotifications customerDeclinedOffer email  toBe false
      expect deserializeNotificationSettings   eventNotifications newContract email  toBe true
      expect deserializeNotificationSettings   eventNotifications newBill email  toBe false
      expect deserializeNotificationSettings   eventNotifications billPaid email  toBe true
      expect deserializeNotificationSettings   eventNotifications billReminder email  toBe false
      expect deserializeNotificationSettings   eventNotifications newMessage email  toBe true
      expect deserializeNotificationSettings   eventNotifications workStartReminder email  toBe true


    describe  customNotifications
      it  workSuggestions
        expect deserializeNotificationSettings   customNotifications workSuggestions email  toBe true
        expect deserializeNotificationSettings   customNotifications workSuggestions sms  toBe false
        expect deserializeNotificationSettings   customNotifications workSuggestions subcategories  toEqual  1  3  5
        expect deserializeNotificationSettings   customNotifications workSuggestions interval  toEqual  daily


      it  dailySummary
        expect deserializeNotificationSettings   customNotifications dailySummary interval  toEqual  daily




import
  NotificationSettings  NotificationSettingsApiObject  NotificationSettingsApiObjectAttributes
  from     endpoints notification settings api interface

export class NotificationSettingsDeserializer
  private attr  NotificationSettingsApiObjectAttributes

  constructor private data  NotificationSettingsApiObject
    this attr   this data attributes


  deserialize    NotificationSettings
    return this attr notificationSettings


import   as   from  lodash
import   Talent   from        models talent model
import   User   from        models user model
import   WorkFlow   from        shared models work flow model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   offerMockDataJson   from     mock data offer api service mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   OfferDeserializer   from    offer deserializer

function deserializeOffer overriddenIncomingData
  const deserializer   new OfferDeserializer   merge     offerMockDataJson  overriddenIncomingData
  return deserializer deserialize


describe  OfferDeserializer
  it  can be instantiated with an offer
    expect new OfferDeserializer offerMockDataJson   toEqual jasmine any OfferDeserializer


  it  returns an offer
    expect new OfferDeserializer offerMockDataJson  deserialize    toEqual jasmine any Offer


  describe  it deserializes the
    it  cost
      expect deserializeOffer   cost  toEqual offerMockDataJson attributes cost


    it  offerText
      expect deserializeOffer   offerText  toEqual  Bringen Sie ihr Fahrrad um 18 00 vorbei


    it  chosenTimes
      const chosenTimes   deserializeOffer   chosenTimes
      expect chosenTimes length  toEqual 1
      expect chosenTimes 0  serialize    toEqual  from   2017 02 02T17 00 00 000Z


    it  answers
      const answers   deserializeOffer   answers
      expect answers length  toEqual 2
      expect answers 0   toEqual  question   Erste Frage   answer   Erste Antwort
      expect answers 1   toEqual  question   Zweite Frage   answer   Zweite Antwort


    it  workFlow
      expect deserializeOffer   workFlow  toEqual new WorkFlow parseInt offerMockDataJson relationships workFlow data id  10


    it  archivedAt
      const expected  Date   new Date  2017 01 23T14 49 53 814 01 00
      expect deserializeOffer   archivedAt  toEqual expected


    it  archivedAt should be undefined when it is not archived
      expect deserializeOffer  attributes   archivedAt  null    archivedAt  toBeUndefined


       TODO  FIX if serializer is merged  remove comments
    expectResolvedRelationship deserializeOffer   workDescription    work   new WorkDescription
    expectResolvedRelationship deserializeOffer   customer    user   new User
    expectResolvedRelationship deserializeOffer   talent    talent   new Talent


import   Geolocation   from        models geolocation model
import   PossibleTime   from        shared models possible time model
import   WorkFlow   from        shared models work flow model
import   Offer   from        shared models work states offer model
import   OfferApiObject  OfferApiObjectAttributes   from     endpoints offer api interface

export class OfferDeserializer
  private attr  OfferApiObjectAttributes
  private offer  Offer

  constructor private data  OfferApiObject
    this offer   new Offer
    this attr   this data attributes


  deserialize    Offer
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    this deserializeRelationships
    return this offer


  private assignRelationships
    if  this data resolvedRelationships
      this offer workDescription   this data resolvedRelationships work
      this offer customer   this data resolvedRelationships user
      this offer talent   this data resolvedRelationships talent



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this offer id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeObjects


  private deserializeSimpleTypes
    this deserializeOfferText
    this deserializeCreatedAt
    this deserializeArchivedAt
    this deserializeAnswers


  private deserializeOfferText
    this offer offerText   this attr offerText


  private deserializeCreatedAt
    this offer createdAt   new Date this attr createdAt


  private deserializeArchivedAt
    if  this attr archivedAt
      this offer archivedAt   new Date this attr archivedAt



  private deserializeAnswers
    this offer answers   this attr answers


  private deserializeObjects
    this deserializeChosenTimes
    this deserializeWorkPlace
    this deserializeCost


  private deserializeChosenTimes
    this offer chosenTimes   this attr chosenTimes map time    new PossibleTime new Date time from


  private deserializeWorkPlace
    this offer workPlace   new Geolocation
      zip  this attr zip  city  this attr city  country  this attr country
      latitude  this attr workPlaceLat  longitude  this attr workPlaceLng



  private deserializeCost
    this offer cost   this attr cost


  private deserializeRelationships
    this deserializeWorkFlow


  private deserializeWorkFlow
    this offer workFlow   new WorkFlow parseInt this data relationships workFlow data id  10


import   PaymentMethod   from        payment payment method model
import   paymentMethodCreateMockDataJSON   from     mock data payment method api service mock data
import   PaymentMethodDeserializer   from    payment method deserializer

function deserializePaymentMethod
  const deserializer   new PaymentMethodDeserializer paymentMethodCreateMockDataJSON data
  return deserializer deserialize


describe  PaymentDeserializer
  it  returns a payment method
    expect new PaymentMethodDeserializer paymentMethodCreateMockDataJSON data  deserialize    toEqual jasmine any PaymentMethod


  describe  it deserializes the
    it  id
      expect deserializePaymentMethod   id  toEqual 74


    it  creditCardDetails
      expect deserializePaymentMethod   creditCardDetails last4  toEqual  4242


    it  stripeCustomerId
      expect deserializePaymentMethod   stripeCustomerId  toEqual  cus 9tjEI9fZK14dn6


    it  stripeCustomerId
      expect deserializePaymentMethod   visibleInProfile  toBeTruthy



import   PaymentMethod   from        payment payment method model
import   PaymentMethodsApiObject  PaymentMethodsApiObjectAttributes   from     endpoints payment methods api interface

export class PaymentMethodDeserializer
  private attr  PaymentMethodsApiObjectAttributes

  constructor private responseJson  PaymentMethodsApiObject
    this attr   this responseJson attributes


  deserialize    PaymentMethod
    return new PaymentMethod
      this id
      this attr stripeCustomerId
      this attr visibleInProfile
      this attr creditCardDetails



  private id
    return parseInt this responseJson id  10


import   as   from  lodash
import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   DeclinedInvitation   from        shared models work states declined invitation model
import   DeclinedOffer   from        shared models work states declined offer model
import   Offer   from        shared models work states offer model
import   PendingWork   from        shared models work states pending work model
import   Receipt   from        shared models work states receipt
import   pendingWorkMockJSON   from     mock data pending work mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   PendingWorkDeserializer   from    pending work deserializer

function deserializePendingWork overriddenIncomingData        PendingWork
  const deserializer   new PendingWorkDeserializer   merge     pendingWorkMockJSON 34   overriddenIncomingData
  return deserializer deserialize


describe  PendingWorkDeserializer
  it  returns a pending work
    expect new PendingWorkDeserializer pendingWorkMockJSON 34   deserialize    toEqual jasmine any PendingWork


  describe  it deserializes the
    describe  workDescription
      it  deseserializes the workDescription  testing some of all values
        expect deserializePendingWork   workDescription id  toEqual 34
        expect deserializePendingWork   workDescription title  toEqual  My work

      expectResolvedRelationship deserializePendingWork   offers    offers    new Offer
      expectResolvedRelationship deserializePendingWork   declinedInvitations    declinedInvitations    new DeclinedInvitation
      expectResolvedRelationship deserializePendingWork   declinedOffers    declinedOffers    new DeclinedOffer
      expectResolvedRelationship deserializePendingWork   contract    contracts    new Contract     new Contract
      expectResolvedRelationship deserializePendingWork   bill    bills    new Bill     new Bill
      expectResolvedRelationship deserializePendingWork   receipt    receipts    new Receipt     new Receipt



import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   PendingWork   from        shared models work states pending work model
import   Receipt   from        shared models work states receipt
import   PendingWorkApiObject  PendingWorkApiObjectAttributes   from     endpoints work api interface
import   WorkDescriptionDeserializer   from    work description deserializer

export class PendingWorkDeserializer
  private attr  PendingWorkApiObjectAttributes
  private pendingWork  PendingWork
  private data  PendingWorkApiObject

  constructor data  PendingWorkApiObject
    this attr   data attributes
    this pendingWork   new PendingWork
    this data   data


  deserialize    PendingWork
    this assignRelationships
    this deserializeWorkDescription
    return this pendingWork


  private assignRelationships
    if  this data resolvedRelationships
      this pendingWork offers   this data resolvedRelationships offers
      this pendingWork contract   this getFirstOrUndefined Contract  this data resolvedRelationships contracts
      this pendingWork bill   this getFirstOrUndefined Bill  this data resolvedRelationships bills
      this pendingWork receipt   this getFirstOrUndefined Receipt  this data resolvedRelationships receipts
      this pendingWork workInvitations   this data resolvedRelationships workInvitations
      this pendingWork declinedInvitations   this data resolvedRelationships declinedInvitations
      this pendingWork declinedOffers   this data resolvedRelationships declinedOffers



  private deserializeWorkDescription
    this pendingWork workDescription   new WorkDescriptionDeserializer this data  deserialize


  private getFirstOrUndefined T  resolvedRelationship  T     T   undefined
    if    resolvedRelationship
      return resolvedRelationship 0



import   as   from  lodash
import   User   from        models user model
import   Contract   from        shared models contract model
import   WorkFlow   from        shared models work flow model
import   Bill   from        shared models work states bill
import   Offer   from        shared models work states offer model
import   Receipt   from        shared models work states receipt
import   WorkDescription   from        shared models work states work description model
import   receiptMockJSON   from     mock data receipt api service mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   ReceiptDeserializer   from    receipt deserializer

function deserializeReceipt overriddenIncomingData
  const deserializer   new ReceiptDeserializer   merge     receiptMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  ReceiptDeserializer
  it  returns a receipt
    expect deserializeReceipt    toEqual jasmine any Receipt


  describe  it deserializes the
    it  id
      expect deserializeReceipt   id  toEqual 1


    it  createdAt
      const expected   new Date  2017 01 23T16 50 34 982 01 00
      expect deserializeReceipt   createdAt  toEqual expected


    it  workFlow
      expect deserializeReceipt   workFlow  toEqual new WorkFlow parseInt receiptMockJSON relationships workFlow data id  10


    describe  archivedAt
      it  serializes if archived at is given
        const expected   new Date  2017 01 24T16 50 34 982 01 00
        expect deserializeReceipt   archivedAt  toEqual expected


      it  must return undefined if date is null to avoid invalid date object
        expect deserializeReceipt  attributes   archivedAt  null    archivedAt  toBeUndefined



    expectResolvedRelationship deserializeReceipt   bill    bill   new Bill
    expectResolvedRelationship deserializeReceipt   contract    contract   new Contract
    expectResolvedRelationship deserializeReceipt   offer    offer   new Offer
    expectResolvedRelationship deserializeReceipt   workDescription    work   new WorkDescription
    expectResolvedRelationship deserializeReceipt   customer    user   new User


import   WorkFlow   from        shared models work flow model
import   Receipt   from        shared models work states receipt
import   ReceiptApiObject  ReceiptApiObjectAttributes   from     endpoints receipt api interface

export class ReceiptDeserializer
  private attr  ReceiptApiObjectAttributes
  private receipt  Receipt

  constructor private data  ReceiptApiObject
    this receipt   new Receipt
    this attr   this data attributes


  deserialize    Receipt
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    this deserializeRelationships
    return this receipt


  private assignRelationships
    if  this data resolvedRelationships
      this receipt bill   this data resolvedRelationships bill
      this receipt contract   this data resolvedRelationships contract
      this receipt offer   this data resolvedRelationships offer
      this receipt workDescription   this data resolvedRelationships work
      this receipt talent   this data resolvedRelationships talent
      this receipt customer   this data resolvedRelationships user



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this receipt id   parseInt this data id  10


  private deserializeAttributes
    this deserializeCreatedAt
    this deserializeArchivedAt


  private deserializeCreatedAt
    this receipt createdAt   new Date this attr createdAt


  private deserializeArchivedAt
    if  this attr archivedAt
      this receipt archivedAt   new Date this attr archivedAt



  private deserializeRelationships
    this deserializeWorkFlow


  private deserializeWorkFlow
    this receipt workFlow   new WorkFlow parseInt this data relationships workFlow data id  10


import   as   from  lodash
import   Subcategory   from        categories shared subcategory model
import   subcategoryMockDataJSON   from     mock data subcategory api service mock data
import   SubcategoryDeserializer   from    subcategory deserializer

function incomingData
  return   cloneDeep subcategoryMockDataJSON 1  2


function deserializeSubcategory
  const deserializer   new SubcategoryDeserializer incomingData
  return deserializer deserialize


describe  SubcategoryDeserializer
  it  can be instantiated with a Subcategory
    expect new SubcategoryDeserializer incomingData     toEqual jasmine any SubcategoryDeserializer


  it  returns a subcategory
    expect new SubcategoryDeserializer incomingData    deserialize    toEqual jasmine any Subcategory


  describe  it deserializes the
    it  id
      expect deserializeSubcategory   id  toEqual 1


    it  name
      expect deserializeSubcategory   name  toEqual  Automechaniker   Carrosserie   Lack


    it  categoryId
      expect deserializeSubcategory   categoryId  toEqual 2



import   Subcategory   from        categories shared subcategory model
import   SubcategoryApiObject   from     endpoints subcategory api interface

export class SubcategoryDeserializer
  private subcategory  Subcategory

  constructor private data  SubcategoryApiObject

  deserialize    Subcategory
    this subcategory   new Subcategory
    this subcategory id   parseInt this data id  10
    this subcategory name   this data attributes name
    this subcategory categoryId   this deserializeCategoryId
    return this subcategory


  private deserializeCategoryId
    return parseInt this data relationships category data id  10


import   as   from  lodash
import   Subcategory   from        categories shared subcategory model
import   Talent   from        models talent model
import   User   from        models user model
import   talentUserApiObject   from     mock data talent api service mock data
import   TalentDeserializer   from    talent deserializer

function deserializeTalent overriddenIncomingData        Talent
  return new TalentDeserializer   merge     talentUserApiObject  overriddenIncomingData   deserialize


describe  TalentDeserializer
  it  returns a talent
    expect deserializeTalent    toEqual jasmine any Talent


  describe  it deserializes the
    it  about
      expect deserializeTalent   about  toEqual  Ich repariere Ihr Fahrrad


    it  companyName
      expect deserializeTalent   companyName  toEqual  Wunsch Bike


    it  companyName
      expect deserializeTalent   companyUidRegisterNumber  toEqual  CHE 409 950 039


    it  website
      expect deserializeTalent   website  toEqual  google com


    it  serviceTitle
      expect deserializeTalent   serviceTitle  toEqual  Fahrradmechaniker


    it  serviceDescription
      expect deserializeTalent   serviceDescription  toEqual  flicken  reparieren


    it  professionalExperience
      expect deserializeTalent   professionalExperience  toEqual  Abschluss des Fahrradmechaniker EFZ


    it  projectPortfolio
      expect deserializeTalent   projectPortfolio  toEqual


    it  netHourlyRate
      expect deserializeTalent   netHourlyRate  toEqual 80


    it  mobileNumber
      expect deserializeTalent   mobileNumber  toEqual   41 79 777 55 44


    it  vatRate
      expect deserializeTalent   vatRate  toEqual 0 08


    it  vatNumber
      expect deserializeTalent   vatNumber  toEqual  CHE 101 010 101 MWST


    it  rating
      expect deserializeTalent   rating  toBeCloseTo 2 86666666  2


    it  ratingQuantity
      expect deserializeTalent   ratingQuantity  toEqual 15


    it  isProfessional
      expect deserializeTalent   qualification isProfessional  toEqual true


    it  isConnectedToTalentBankAccount
      expect deserializeTalent   isConnectedToTalentBankAccount  toEqual false


    it  isHidden
      expect deserializeTalent   visibility isHidden  toEqual true


    it  iban
      expect deserializeTalent   iban  toEqual null
      expect deserializeTalent  attributes   iban   CH123     iban  toEqual  CH123


    it  accountHolderName
      expect deserializeTalent   accountHolderName  toEqual null
      expect deserializeTalent  attributes   accountHolderName   Peter Muster     accountHolderName  toEqual  Peter Muster


    it  deserializeAddress
      expect deserializeTalent   address city  toEqual  ZÃ¼rich
      expect deserializeTalent   address country  toEqual  Schweiz
      expect deserializeTalent   address street  toEqual  Oetlisbergstrasse 60a
      expect deserializeTalent   address zip  toEqual  8053


    describe  user
      it  does also work if not passed in
        expect deserializeTalent   user  toBeUndefined


      it  deserializes the user if was passed in as a resolved relationship by api mapping
        const user   new User
        const additional    resolvedRelationships   user
        expect deserializeTalent additional  user  toEqual user



    describe  subcategory
      it  does also work if not passed in
        expect deserializeTalent   subcategory  toBeUndefined


      it  deserializes the subcategory if was passed in as a resolved relationship by api mapping
        const subcategory   new Subcategory
        const additional    resolvedRelationships   subcategory
        expect deserializeTalent additional  subcategory  toEqual subcategory




import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model
import   TalentVisibility   from        models talent visibility model
import   Talent   from        models talent model
import   TalentUserApiObject  TalentUserApiObjectAttributes   from     endpoints talent api interface
import   parseFloatOrNumber   from    deserializer helper

   TODO  it s not always a talent user that is passed in  but if its a TalentApiObject it will just have less attributes
export class TalentDeserializer
  private attr  TalentUserApiObjectAttributes
  private talent  Talent

  constructor private data  TalentUserApiObject
    this talent   new Talent
    this attr   this data attributes


  deserialize    Talent
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this talent


  private assignRelationships
    if  this data resolvedRelationships
      this talent user   this data resolvedRelationships user
      this talent subcategory   this data resolvedRelationships subcategory



  private deserializeNonAttributes
    this talent id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeObjects


  private deserializeSimpleTypes
    this deserializeTextAttributes
    this deserializeBooleanAttributes
    this deserializeNumericAttributes


  private deserializeTextAttributes
    this talent about   this attr about
    this talent companyName   this attr companyName
    this talent companyUidRegisterNumber   this attr companyUidRegisterNumber
    this talent website   this attr website
    this talent education   this attr education
    this talent serviceTitle   this attr serviceTitle
    this talent serviceDescription   this attr serviceDescription
    this talent professionalExperience   this attr professionalExperience
    this talent profilePictureUrl   this attr profilePictureUrl
    this talent projectPortfolio   this attr projectPortfolio
    this talent vatNumber   this attr vatNumber
    this talent mobileNumber   this attr mobileNumber
    this talent iban   this attr iban
    this talent accountHolderName   this attr accountHolderName


  private deserializeBooleanAttributes
    this talent isConnectedToTalentBankAccount   this attr isConnectedToTalentBankAccount


  private deserializeNumericAttributes
    this talent netHourlyRate   parseFloatOrNumber this attr netHourlyRate
    this talent vatRate   parseFloatOrNumber this attr vatRate
    this talent rating   parseFloatOrNumber this attr rating
    this talent ratingQuantity   this attr ratingQuantity


  private deserializeObjects
    this talent qualification   new TalentQualification  isProfessional  this attr isProfessional
    this talent visibility   new TalentVisibility  isHidden   this attr visible
    this deserializeAddress


  private deserializeAddress
    const addressData   new Geolocation
      city  this attr city
      country  this attr country
      street  this attr address
      zip  this attr zip

    this talent address   addressData


import   as   from  lodash
import   TalentRating   from        models talent rating model
import   User   from        models user model
import   talentRatingMockJSON   from     mock data talent rating api mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   TalentRatingDeserializer   from    talent rating deserializer

function deserializeTalentRating overriddenIncomingData
  const deserializer   new TalentRatingDeserializer   merge     talentRatingMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  TalentRatingDeserializer
  it  returns a talent rating
    expect new TalentRatingDeserializer talentRatingMockJSON  deserialize    toEqual jasmine any TalentRating


  describe  it deserializes the
    it  id
      expect deserializeTalentRating   id  toEqual 4


    it  value
      expect deserializeTalentRating   value  toEqual 3


    it  comment
      expect deserializeTalentRating   comment  toEqual  Es war super


    it  createdAt
      const expected   new Date  2017 01 21T19 33 21 742 01 00
      expect deserializeTalentRating   createdAt  toEqual expected


    expectResolvedRelationship deserializeTalentRating   customer    user   new User


import   TalentRating   from        models talent rating model
import   TalentRatingApiObject  TalentRatingApiObjectAttributes   from     endpoints talent rating api interface

export class TalentRatingDeserializer
  private attr  TalentRatingApiObjectAttributes
  private talentRating  TalentRating

  constructor private data  TalentRatingApiObject
    this attr   data attributes
    this talentRating   new TalentRating


  deserialize
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this talentRating


  private assignRelationships
    if  this data resolvedRelationships
      this talentRating customer   this data resolvedRelationships user



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this talentRating id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeCreatedAt


  private deserializeSimpleTypes
    this deserializeValue
    this deserializeComment


  private deserializeValue
    this talentRating value   this attr value


  private deserializeComment
    this talentRating comment   this attr comment


  private deserializeCreatedAt
    this talentRating createdAt   new Date this attr createdAt


import   User   from        models user model
import   userMockJSON   from     mock data user api service mock data
import   UserDeserializer   from    user deserializer

function deserializeCustomer
  const deserializer   new UserDeserializer userMockJSON 44
  return deserializer deserialize


describe  UserDeserializer
  it  can be instantiated with a customer
    expect new UserDeserializer userMockJSON 44    toEqual jasmine any UserDeserializer


  it  returns a customer
    expect new UserDeserializer userMockJSON 44   deserialize    toEqual jasmine any User


  describe  it deserializes the
    it  id
      expect deserializeCustomer   id  toEqual 44


    it  firstName
      expect deserializeCustomer   firstName  toEqual  Donald


    it  lastName
      expect deserializeCustomer   lastName  toEqual  Wunsch


    it  phoneNumber
      expect deserializeCustomer   phoneNumber  toEqual   41 29 785 66 64


    it  email
      expect deserializeCustomer   email  toEqual  donald example com


    it  admin
      expect deserializeCustomer   isAdmin  toEqual true


    it  isCustomer
      expect deserializeCustomer   isCustomer  toEqual true


    it  language
      expect deserializeCustomer   language  toEqual  de CH


    it  hasApp
      expect deserializeCustomer   hasApp  toEqual false


    it  deserializeAddress
      expect deserializeCustomer   address city  toEqual  ZÃ¼rich
      expect deserializeCustomer   address country  toEqual  Schweiz
      expect deserializeCustomer   address street  toEqual  Sonnenbergstrasse 123
      expect deserializeCustomer   address zip  toEqual  8032



import   Geolocation   from        models geolocation model
import   User   from        models user model
import   UserApiObject  UserApiObjectAttributes   from     endpoints user api interface

export class UserDeserializer
  private attr  UserApiObjectAttributes
  private user  User

  constructor private data  UserApiObject
    this user   new User
    this attr   data attributes


  deserialize    User
    this deserializeNonAttributes
    this deserializeAttributes
    return this user


  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this user id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeObjects


  private deserializeSimpleTypes
    this deserializeFirstName
    this deserializeLastName
    this deserializePhoneNumber
    this deserializeEmail
    this deserializeAdmin
    this deserializeIsCustomer
    this deserializeLanguage
    this deserializeHasApp


  private deserializeFirstName
    this user firstName   this attr firstName


  private deserializeLastName
    this user lastName   this attr lastName


  private deserializePhoneNumber
    this user phoneNumber   this attr phoneNumber


  private deserializeEmail
    this user email   this attr email


  private deserializeAdmin
    this user isAdmin   this attr admin


  private deserializeIsCustomer
    this user isCustomer   this attr customer


  private deserializeLanguage
    this user language   this attr language


  private deserializeHasApp
    this user hasApp   this attr hasApp


  private deserializeObjects
    this deserializeAddress


  private deserializeAddress
    const addressData   new Geolocation
      city  this attr city
      country  this attr country
      street  this attr address
      zip  this attr zip

    this user address   addressData


import   as   from  lodash
import   Category   from        categories shared category model
import   Subcategory   from        categories shared subcategory model
import   User   from        models user model
import   WorkDescription   from        shared models work states work description model
import   workMockJSON   from     mock data works api mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   WorkDescriptionDeserializer   from    work description deserializer

function deserializeWorkDecription overriddenIncomingData
  const deserializer   new WorkDescriptionDeserializer   merge     workMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  WorkDescriptionDeserializer
  it  returns a work description
       TODO  work description mock data
    expect new WorkDescriptionDeserializer workMockJSON  deserialize    toEqual jasmine any WorkDescription


  describe  it deserializes the
    it  title
      expect deserializeWorkDecription   title  toEqual  Ich mÃ¶chte einen Kontrollservice fÃ¼r mein Fahrrad


    it  description
      expect deserializeWorkDecription   description  toEqual  Ich mÃ¶chte einfach sicher gehen  dass bei meinem Fahrrad alles gut ist


    it  estimatedWorkMinutes
      expect deserializeWorkDecription   estimatedWorkMinutes  toEqual 300


    it  isPublic
      expect deserializeWorkDecription   isPublic  toEqual true


    it  files
      const work   deserializeWorkDecription
      expect work files 0   toEqual  https   placehold it 300x300 png
      expect work files 1   toEqual  https   placehold it 300x300 png


    it  possibleTimes
      const work   deserializeWorkDecription
      expect work possibleTimes 0  serialize    toEqual  from   2017 01 22T07 11 01 000Z
      expect work possibleTimes 1  serialize    toEqual  from   2017 01 27T11 00 45 000Z


    it  questions
      const work   deserializeWorkDecription
      expect work questions 0  question  toEqual  Wie fÃ¼hren Sie eine solche Kontrolle durch
      expect work questions 0  answer  toEqual undefined
      expect work questions 1  question  toEqual  Schaffen Sie es vor MÃ¤rz fertig zu sein
      expect work questions 1  answer  toEqual undefined


    describe  workPlace
      it  returns a workPlace only with city  zip and country
        const work   deserializeWorkDecription
        expect work workPlace city  toEqual  ZÃ¼rich
        expect work workPlace zip  toEqual  8052
        expect work workPlace country  toEqual  Schweiz
        expect work workPlace street  toEqual  Industriestrasse
        expect work workPlace longitude  toEqual 37 0
        expect work workPlace latitude  toEqual 45 0


      it  returns nothing if no workPlace was set
        const work   deserializeWorkDecription  attributes   city      zip      country
        expect work workPlace  toBeUndefined



    it  status
      expect deserializeWorkDecription   status  toEqual  offering


    expectResolvedRelationship deserializeWorkDecription   category    category   new Category
    expectResolvedRelationship deserializeWorkDecription   subcategory    subcategory   new Subcategory
    expectResolvedRelationship deserializeWorkDecription   customer    user   new User


import   QuestionStruct   from        api endpoints work state api interface
import   Geolocation   from        models
import   PossibleTime   from        shared models possible time model
import   Question   from        shared models question model
import   WorkDescription   from        shared models work states work description model
import   PendingWorkApiObject  WorkApiObject  WorkApiObjectAttributes   from     endpoints work api interface

export class WorkDescriptionDeserializer
  private attr  WorkApiObjectAttributes
  private work  WorkDescription
  private data  WorkApiObject   PendingWorkApiObject

  constructor data  WorkApiObject   PendingWorkApiObject
    this attr   data attributes
    this work   new WorkDescription
    this data   data


  deserialize
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this work


  private assignRelationships
    if  this data resolvedRelationships
      this work customer   this data resolvedRelationships user
      this work category   this data resolvedRelationships category
      this work subcategory   this data resolvedRelationships subcategory



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this work id   parseInt this data id  10


  private deserializeAttributes
    this deserializeSimpleTypes
    this deserializeObjects
    this deserializeArrays


  private deserializeSimpleTypes
    this deserializeTitle
    this deserializeDescription
    this deserializeEstimatedWorkMinutes
    this deserializeStatus
    this deserializeIsPublic


  private deserializeTitle
    this work title   this attr title


  private deserializeDescription
    this work description   this attr description


  private deserializeEstimatedWorkMinutes
    this work estimatedWorkMinutes   this attr estimatedWorkMinutes


  private deserializeStatus
    this work status   this attr status


  private deserializeObjects
    this deserializeWorkPlace
    this deserializeCreatedAt


  private deserializeIsPublic
    this work isPublic   this attr public


  private deserializeWorkPlace
    if  this isWorkPlaceGiven
      this work workPlace   new Geolocation
        zip  this attr zip  city  this attr city  country  this attr country
        street  this attr address  latitude  this attr workPlaceLat  longitude  this attr workPlaceLng




  private isWorkPlaceGiven    boolean
    return this attr zip length   0    this attr city length   0    this attr country length   0


  private deserializeCreatedAt
    this work createdAt   new Date this attr createdAt


  private deserializeArrays
    this deserializeFiles
    this deserializeTimeSuggestions
    this deserializeQuestions


  private deserializeFiles
    this work files   this attr files


  private deserializeTimeSuggestions
    this work possibleTimes   this attr timeSuggestions map timeData    new PossibleTime new Date timeData from


  private deserializeQuestions
    this work questions   this attr questions map  question  QuestionStruct     new Question   deserialize question


import   as   from  lodash
import   Talent   from        models talent model
import   User   from        models user model
import   WorkFlow   from        shared models work flow model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   workFlowMockJSON   from     mock data work flow api service mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   WorkFlowDeserializer   from    work flow deserializer

function deserializeWorkFlow overriddenIncomingData
  const deserializer   new WorkFlowDeserializer   merge     workFlowMockJSON  overriddenIncomingData
  return deserializer deserialize


describe  WorkFlowDeserializer
  it  returns a workFlow
    expect deserializeWorkFlow    toEqual jasmine any WorkFlow


  describe  it deserializes the
    it  id
      expect deserializeWorkFlow   id  toEqual 4


    it  latestType
      expect deserializeWorkFlow   latestType  toEqual  offer


    it  latestId
      expect deserializeWorkFlow   latestId  toEqual 6


    expectResolvedRelationship deserializeWorkFlow   talent    talent   new Talent
    expectResolvedRelationship deserializeWorkFlow   offer    offer   new Offer
    expectResolvedRelationship deserializeWorkFlow   workDescription    work   new WorkDescription
    expectResolvedRelationship deserializeWorkFlow   customer    user   new User


import   WorkFlow   from        shared models work flow model
import   WorkFlowStatus   from        shared models work flow types
import   WorkFlowApiObject   from     endpoints work flow api interface
import   WorkFlowApiObjectAttributes   from     endpoints work flow api interface

export class WorkFlowDeserializer
  private attr  WorkFlowApiObjectAttributes
  private workFlow  WorkFlow
  private data  WorkFlowApiObject

  constructor data  WorkFlowApiObject
    this attr   data attributes
    this workFlow   new WorkFlow
    this data   data


  deserialize    WorkFlow
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this workFlow


  private assignRelationships
    if  this data resolvedRelationships
      this workFlow offer   this data resolvedRelationships offer
      this workFlow contract   this data resolvedRelationships contract
      this workFlow bill   this data resolvedRelationships bill
      this workFlow receipt   this data resolvedRelationships receipt
      this workFlow workInvitation   this data resolvedRelationships workInvitation
      this workFlow declinedInvitation   this data resolvedRelationships declinedInvitation
      this workFlow declinedOffer   this data resolvedRelationships declinedOffer
      this workFlow workDescription   this data resolvedRelationships work
      this workFlow talent   this data resolvedRelationships talent
      this workFlow customer   this data resolvedRelationships user



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this workFlow id   parseInt this data id  10


  private deserializeAttributes
    this deserializeLatestType
    this deserializeLatestId


  private deserializeLatestType
    const type   this attr latestType
    this workFlow latestType    WorkFlowStatus   type charAt 0  toLowerCase     type slice 1


  private deserializeLatestId
    this workFlow latestId   this attr latestId


import   as   from  lodash
import   Talent   from        models talent model
import   WorkFlow   from        shared models work flow model
import   DeclinedInvitation   from        shared models work states declined invitation model
import   WorkInvitation   from        shared models work states work invitation model
import   workInvitationMockDataJSON   from     mock data work invitation api service mock data
import   expectResolvedRelationship   from    deserializer spec helper
import   WorkInvitationDeserializer   from    work invitation deserializer

function deserializeWorkInvitation overriddenIncomingData
  const deserializer   new WorkInvitationDeserializer   merge     workInvitationMockDataJSON  overriddenIncomingData
  return deserializer deserialize


describe  WorkInvitationDeserializer
  it  can be instantiated with a work invitation
    expect new WorkInvitationDeserializer workInvitationMockDataJSON   toEqual jasmine any WorkInvitationDeserializer


  it  returns a work invitation
    expect new WorkInvitationDeserializer workInvitationMockDataJSON  deserialize    toEqual jasmine any WorkInvitation


  describe  it deserializes the
    it  id
      expect deserializeWorkInvitation   id  toEqual 21


    it  createdAt
      expect deserializeWorkInvitation   createdAt  toEqual new Date  2017 09 18T17 26 51 737 02 00


    describe  archivedAt
      it  returns the date if is set
        expect deserializeWorkInvitation  attributes   archivedAt   2017 10 18T17 26 51 737 02 00     archivedAt
           toEqual new Date  2017 10 18T17 26 51 737 02 00


      it  archivedAt should be undefined when it is not archived
        expect deserializeWorkInvitation  attributes   archivedAt  null    archivedAt  toBeUndefined




  expectResolvedRelationship deserializeWorkInvitation   workDescription    work   new WorkFlow 1
  expectResolvedRelationship deserializeWorkInvitation   talent    talent   new Talent
  expectResolvedRelationship deserializeWorkInvitation   declinedInvitation    declinedInvitation   new DeclinedInvitation

import   WorkInvitation   from        shared models work states work invitation model
import   WorkInvitationApiObject  WorkInvitationApiObjectAttributes   from     endpoints work invitation api interface

export class WorkInvitationDeserializer
  private attr  WorkInvitationApiObjectAttributes
  private workInvitation  WorkInvitation

  constructor private data  WorkInvitationApiObject
    this workInvitation   new WorkInvitation
    this attr   this data attributes


  deserialize    WorkInvitation
    this assignRelationships
    this deserializeNonAttributes
    this deserializeAttributes
    return this workInvitation


  private assignRelationships
    if  this data resolvedRelationships
      this workInvitation workDescription   this data resolvedRelationships work
      this workInvitation talent   this data resolvedRelationships talent
      this workInvitation declinedInvitation   this data resolvedRelationships declinedInvitation



  private deserializeNonAttributes
    this deserializeId


  private deserializeId
    this workInvitation id   parseInt this data id  10


  private deserializeAttributes
    this deserializeCreatedAt
    this deserializeArchivedAt


  private deserializeCreatedAt
    this workInvitation createdAt   new Date this attr createdAt


  private deserializeArchivedAt
    if  this attr archivedAt
      this workInvitation archivedAt   new Date this attr archivedAt



import   User   from        models user model
import   userIndexMockDataJSON   from     mock data user api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   AdminUsersApi   from    admin users api service

describe  AdminUsersApi
  const http  any   new LawoonHttpMock
  const api   new AdminUsersApi http

  describe  all
    it  calls the deserializer   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse userIndexMockDataJSON
      api all   subscribe user
        expect user length  toBe 1
        expect user 0   toEqual jasmine any User
        done



    it  gets the users with the correct route   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse userIndexMockDataJSON
      api all   subscribe
        expect spy  toHaveBeenCalledWith  admin users
        done




  describe  get
    it  gets a specific user by id   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse
      api get 3  subscribe  data
        expect spy  toHaveBeenCalledWith  admin users 3
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   User   from        models user model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   UserApiObject   from    user api interface

 Injectable
export class AdminUsersApi
  constructor private http  LawoonHttp

  all    Observable User
    return this http get  admin users
       map data    new Api UserApiObject  User  data  deserializeArray


  get id  number   Observable void
    return this http get  admin users   id    map  data    undefined


import   Talent   from        models talent model
import   User   from        models user model
import   PaymentMethod   from        payment payment method model
import   Contract   from        shared models contract model
import   Cost   from        shared models cost cost model
import   Offer   from        shared models work states offer model
import   Receipt   from        shared models work states receipt
import   WorkDescription   from        shared models work states work description model
import   ApiNoRelationship  ApiTypedRelationship   from     api types
import   ContractApiObject   from    contract api interface
import   CostApiRequestObject   from    cost api interface
import   OfferApiObject   from    offer api interface
import   PaymentMethodsApiObject   from    payment methods api interface
import   TalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface
import   WorkApiObject   from    work api interface

export interface BillApiObject
  id  string
  type   bills
  attributes  BillApiObjectAttributes
  relationships
    contract  ApiTypedRelationship  contracts
    offer  ApiTypedRelationship  offers
    work  ApiTypedRelationship  works
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users
    paymentMethod  ApiTypedRelationship  paymentPaymentMethods
    receipt  ApiTypedRelationship  receipts     ApiNoRelationship
    workFlow  ApiTypedRelationship  workFlows

  resolvedRelationships
    contract  Contract
    offer  Offer
    work  WorkDescription
    talent  Talent
    user  User
    paymentMethod  PaymentMethod
    receipt  Receipt



export interface BillApiObjectAttributes
  cost  Cost
  createdAt  string
  archivedAt  string


type WorkStateType   WorkApiObject   ContractApiObject   OfferApiObject
export type BillApiObjectIncludedType    WorkStateType   TalentApiObject   UserApiObject   PaymentMethodsApiObject

export interface BillApiObjectShowResponse
  data  BillApiObject
  included  BillApiObjectIncludedType


export interface BillApiObjectCreateRequest
  data
    type   bills
    attributes
      cost  CostApiRequestObject




export interface BillApiObjectUpdateRequest
  data
    type   bills
    attributes
      cost  CostApiRequestObject



import   Bill   from        shared models work states bill
import   billCreateMockDataJSON  billShowMockDataJSON   from     mock data bill api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   BillApi   from    bill api service

describe  BillApi
  const http  any   new LawoonHttpMock
  const api   new BillApi http      maybe the name of the variable should be api

  describe  create
    it  creates a bill by contract id   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse billShowMockDataJSON
      api create 3  billCreateMockDataJSON  subscribe bill
        expect bill  toEqual jasmine any Bill
        expect spy  toHaveBeenCalledWith  work state contracts 3 bills   billCreateMockDataJSON
        done




  describe  update
    it  updates a bill by bill id   done
      const spy   spyOn http   patch
      spy and callThrough
      http mockResponse billShowMockDataJSON
      api update 3  billCreateMockDataJSON  subscribe bill
        expect bill  toEqual jasmine any Bill
        expect spy  toHaveBeenCalledWith  work state bills 3   billCreateMockDataJSON
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Bill   from        shared models work states bill
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   BillApiObject  BillApiObjectCreateRequest  BillApiObjectUpdateRequest   from    bill api interface

 Injectable
export class BillApi
  constructor private http  LawoonHttp

  create id  number  data  BillApiObjectCreateRequest   Observable Bill
    return this http post  work state contracts   id  bills   data
       map response    new Api BillApiObject  Bill  response  deserializeObject


  update id  number  data  BillApiObjectUpdateRequest   Observable Bill
    return this http patch  work state bills   id    data
       map response    new Api BillApiObject  Bill  response  deserializeObject


import   Subcategory   from        categories shared subcategory model
import   ApiTypedRelationshipArray   from     api types
import   SubcategoryApiObject   from    subcategory api interface

export interface CategoryApiObject
  id  string
  type   categories
  attributes  CategoryApiObjectAttributes
  relationships
    subcategories  ApiTypedRelationshipArray  subcategories

  resolvedRelationships
    subcategories  Subcategory

  included   SubcategoryApiObject


export interface CategoryApiObjectAttributes
  name  string
  iconUrl  string


export interface CategoryApiObjectIndexResponse
  data  CategoryApiObject
  included  SubcategoryApiObject

export interface ChatHashApiObject
  id  string
  type   chatHashes
  attributes  ChatHashApiObjectAttributes


export interface ChatHashApiObjectAttributes
  chatHash  string


export interface ChatHashApiObjectIndexResponse
  data  ChatHashApiObject

import   chatHashIndexMockDataJSON   from     mock data chat hash api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   ChatHashApi   from    chat hash api service

describe  ChatHashApi
  const http  any   new LawoonHttpMock
  const api   new ChatHashApi http

  describe  getPublicChatHash
    it  calls the api to return the public chat hash   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse chatHashIndexMockDataJSON
      api getPublicChatHash 3  subscribe chatHash
        expect chatHash  toEqual  xyz
        expect spy  toHaveBeenCalledWith  works 3 chat hash public true
        done




  describe  getPrivateChatHash
    it  calls the api to return the private chat hash   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse chatHashIndexMockDataJSON
      api getPrivateChatHash 3  5  subscribe chatHash
        expect chatHash  toEqual  xyz
        expect spy  toHaveBeenCalledWith  works 3 chat hash other user id 5
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Api   from     api
import   ChatHash   from     deserializers chat hash deserializer
import   LawoonHttp   from     utils lawoon http service
import   ChatHashApiObject   from    chat hash api interface

 Injectable
export class ChatHashApi
  constructor private http  LawoonHttp

  getPublicChatHash workId  number   Observable string
    return this http get  works   workId  chat hash public true
       map response    new Api ChatHashApiObject  ChatHash  response  deserializeObject   chatHash


  getPrivateChatHash workId  number  otherUserId  number   Observable string
    return this http get  works   workId  chat hash other user id   otherUserId
       map response    new Api ChatHashApiObject  ChatHash  response  deserializeObject   chatHash


import   Talent   from        models talent model
import   User   from        models user model
import   PaymentMethod   from        payment payment method model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   ApiNoRelationship  ApiTypedRelationship   from     api types
import   OfferApiObject   from    offer api interface
import   PaymentMethodsApiObject   from    payment methods api interface
import   TalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface
import   WorkApiObject   from    work api interface
import   TimeStruct   from    work state api interface

export interface ContractApiObject
  id  string
  type   contracts
  attributes  ContractApiObjectAttributes
  relationships
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users
    work  ApiTypedRelationship  works
    offer  ApiTypedRelationship  offers
    paymentMethod  ApiTypedRelationship  paymentPaymentMethods
    bill  ApiTypedRelationship  bills     ApiNoRelationship
    workFlow  ApiTypedRelationship  workFlows

  resolvedRelationships
    talent  Talent
    user  User
    work  WorkDescription
    offer  Offer
    paymentMethod  PaymentMethod



export interface ContractApiObjectAttributes
  createdAt  string
  chosenTime  TimeStruct


type ContractApiIncludedType   TalentApiObject   UserApiObject   WorkApiObject   OfferApiObject   PaymentMethodsApiObject

export interface ContractApiObjectShowResponse
  data  ContractApiObject
  included  ContractApiIncludedType


export interface ContractApiObjectCreateRequest
  data
    type   work state contracts
    attributes
      payment method id  number
      chosen time   TimeStruct



import   Contract   from        shared models contract model
import   contractShowMockDataJSON   from     mock data contract api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   ContractApiObjectCreateRequest   from    contract api interface
import   ContractApi   from    contract api service

describe  ContractAPI
  const http  any   new LawoonHttpMock
  const api   new ContractApi http      maybe the name of the variable should be api

  describe  create
    it  creates contract by offer id and returns a contract   done
      const spy   spyOn http   post
      const mockPostData  ContractApiObjectCreateRequest
        data
          type   work state contracts
          attributes
            payment method id  3
            chosen time    from   2017 01 22T14 49 53 988 01 00



      spy and callThrough
      http mockResponse contractShowMockDataJSON
      api create 3  mockPostData  subscribe contract
        expect contract  toEqual jasmine any Contract
        expect spy  toHaveBeenCalledWith  work state offers 3 contracts   mockPostData
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Contract   from        shared models contract model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   ContractApiObject  ContractApiObjectCreateRequest   from    contract api interface

 Injectable
export class ContractApi
  constructor private http  LawoonHttp

  create id  number  data  ContractApiObjectCreateRequest   Observable Contract
    return this http post  work state offers   id  contracts   data
       map response    new Api ContractApiObject  Contract  response  deserializeObject


import   Cost  WorkCost   from        shared models cost cost model

export interface CostApiObject
  id  string
  type   costCalculations
  attributes  CostApiObjectAttributes


export interface CostApiObjectAttributes
  cost  Cost


export interface CostApiObjectShowResponse
  data  CostApiObject


export interface CostApiObjectCreateRequest
  data
    type   costCalculations
    attributes
      cost
        work  WorkCost
        items
          description  string
          price  number
          amount  number






export interface CostApiRequestObject
  work  WorkCost
  items
    description  string
    price  number
    amount  number


import   costCreateMockDataJSON  costShowMockDataJSON   from     mock data cost api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   CostApi   from    cost api service

describe  CostApi
  const http  any   new LawoonHttpMock
  const api   new CostApi http

  describe  create
    it  calls the api to return the cost calculations   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse costShowMockDataJSON
      api create costCreateMockDataJSON  subscribe  cost
           TODO  Test cost agains Cost Interface
           expect cost  toEqual Cost
        expect spy  toHaveBeenCalledWith  cost calculations   costCreateMockDataJSON
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Cost   from        shared models cost cost model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   CostApiObject  CostApiObjectCreateRequest   from    cost api interface

 Injectable
export class CostApi
  constructor private http  LawoonHttp

  create data  CostApiObjectCreateRequest   Observable Cost
    return this http post  cost calculations   data
       map response    new Api CostApiObject  Cost  response  deserializeObject


import   Talent   from        models talent model
import   User   from        models user model
import   WorkFlow   from        shared models work flow model
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model
import   ApiTypedRelationship   from     api types

export interface DeclinedInvitationApiObject
  id  string
  type   declinedInvitations
  attributes  DeclinedInvitationApiObjectAttributes
  relationships
    workInvitation  ApiTypedRelationship  workInvitations
    work  ApiTypedRelationship  works
    workFlow  ApiTypedRelationship  workFlows
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users

  resolvedRelationships
    workInvitation  WorkInvitation
    work  WorkDescription
    workFlow  WorkFlow
    talent  Talent
    user  User



export interface DeclinedInvitationApiObjectAttributes
  createdAt  string
  declinedBy   customer     talent

import   Talent   from        models talent model
import   User   from        models user model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   ApiTypedRelationship   from     api types
import   OfferApiObject   from    offer api interface
import   TalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface
import   WorkApiObject   from    work api interface

export interface DeclinedOfferApiObject
  id  string
  type   declinedOffers
  attributes  DeclinedOfferApiObjectAttributes
  relationships
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users
    work  ApiTypedRelationship  works
    offer  ApiTypedRelationship  offers
    workFlow  ApiTypedRelationship  workFlows

  resolvedRelationships
    talent  Talent
    user  User
    work  WorkDescription
    offer  Offer



export interface DeclinedOfferApiObjectAttributes
  reason  string
  createdAt  string
  declinedBy   customer     talent


type DeclinedOfferApiIncludedType   TalentApiObject   UserApiObject   WorkApiObject   OfferApiObject

export interface DeclinedOfferApiObjectShowResponse
  data  DeclinedOfferApiObject
  included  DeclinedOfferApiIncludedType


export interface DeclinedOfferApiObjectCreateRequest
  data
    type   declinedOffers
    attributes
      reason  string



import   DeclinedOffer   from        shared models work states declined offer model
import   declinedOfferShowMockDataJSON   from     mock data declined offer api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   DeclinedOfferApi   from    declined offer api service

describe  DeclinedOfferAPI
  const http  any   new LawoonHttpMock
  const api   new DeclinedOfferApi http

  describe  create
    it  creates a declinedOffer by offer id   done
      const spy   spyOn http   post
      const expectedPostData    data   type   declinedOffers   attributes   reason   test
      spy and callThrough
      http mockResponse declinedOfferShowMockDataJSON
      api create 3   test   subscribe declinedOffer
        expect declinedOffer  toEqual jasmine any DeclinedOffer
        expect spy  toHaveBeenCalledWith  work state offers 3 declined offers   expectedPostData
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   DeclinedOffer   from        shared models work states declined offer model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   DeclinedOfferApiObject  DeclinedOfferApiObjectCreateRequest   from    declined offer api interface

 Injectable
export class DeclinedOfferApi
  constructor private http  LawoonHttp

  create id  number  reason  string   Observable DeclinedOffer
    const postData  DeclinedOfferApiObjectCreateRequest    data   type   declinedOffers   attributes   reason
    return this http post  work state offers   id  declined offers   postData
       map response    new Api DeclinedOfferApiObject  DeclinedOffer  response  deserializeObject


export interface LinkUrlApiObject
  id  string
  type   linkUrls
  attributes  LinkUrlApiObjectAttributes


export interface LinkUrlApiObjectAttributes
  linkUrl  string


export interface LinkUrlApiObjectIndexResponse
  data  LinkUrlApiObject

import   linkUrlIndexMockDataJSON   from     mock data link url api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   LinkUrlApi   from    link url api service

describe  LinkUrlApi
  const http  any   new LawoonHttpMock
  const api   new LinkUrlApi http

  describe  getPublicLinkUrl
    it  calls the api to return the link url   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse linkUrlIndexMockDataJSON
      api getLinkUrl 3  subscribe linkUrl
        expect linkUrl  toEqual  xyz
        expect spy  toHaveBeenCalledWith  work flows 3 link url
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   Api   from     api
import   LinkUrl   from     deserializers link url deserializer
import   LawoonHttp   from     utils lawoon http service
import   LinkUrlApiObject   from    link url api interface

 Injectable
export class LinkUrlApi
  constructor private http  LawoonHttp

  getLinkUrl workFlowId  number   Observable string
    return this http get  work flows   workFlowId  link url
       map response    new Api LinkUrlApiObject  LinkUrl  response  deserializeObject   linkUrl


export interface MessageApiObject
  id  string
  type   messages
  attributes  MessageApiObjectAttributes


export interface MessageApiObjectAttributes
  message  string
  chatHash  string


export interface MessageApiObjectCreateRequest
  data
    type   messages
    attributes  MessageApiObjectAttributes


import   messageCreateMockDataAttributesJSON  messageCreateMockDataJSON   from     mock data message api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   MessageApi   from    message api service

describe  MessageApi
  const http  any   new LawoonHttpMock
  const api   new MessageApi http

  describe  create
    it  calls the api to create a message   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse     201
      api create messageCreateMockDataAttributesJSON  subscribe  response
        expect spy  toHaveBeenCalledWith  messages   messageCreateMockDataJSON
        done




import   Injectable   from   angular core
import   Response   from   angular http
import   Observable   from  rxjs Observable
import   LawoonHttp   from     utils lawoon http service
import   MessageApiObjectAttributes   from    message api interface

 Injectable
export class MessageApi
  constructor private http  LawoonHttp

  create data  MessageApiObjectAttributes   Observable Response
    return this http post  messages    data   type   messages   attributes  data


export interface SendTypes
  email  boolean
  sms  boolean
  push  boolean

export type DailySummarySendingInterval    daily     never
export type WorkSuggestionsSendingInterval    immediate     daily     never

export interface NotificationSettings
  eventNotifications  EventNotificationSettings
  customNotifications  CustomNotificationSettings


export interface EventNotificationSettings
   index  string   SendTypes
  newInvitation  SendTypes
  newOffer  SendTypes
  customerDeclinedOffer  SendTypes
  newContract  SendTypes
  newBill  SendTypes
  billPaid  SendTypes
  billReminder  SendTypes
  newMessage  SendTypes
  workStartReminder  SendTypes


export interface CustomNotificationSettings
  dailySummary
    interval  DailySummarySendingInterval

  workSuggestions  WorkSuggestions


export interface WorkSuggestions
  subcategories  number
  interval  WorkSuggestionsSendingInterval
  email  boolean
  sms  boolean
  push  boolean


export interface NotificationSettingsApiObject
  id  string
  type   notificationSettings
  attributes  NotificationSettingsApiObjectAttributes


export interface NotificationSettingsApiObjectAttributes
  notificationSettings  NotificationSettings


export interface NotificationSettingsApiObjectCreateRequest
  data
    type   notificationSettings
    attributes
      notification settings
        event notifications  EventNotificationSettings
        custom notifications  CustomNotificationSettings




import
  notificationSettingsCreateMockDataJSON
  notificationSettingsMockJSON
  from     mock data notification settings mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   NotificationSettingsApi   from    notification settings api

describe  NotificationSettingsApi
  const http  any   new LawoonHttpMock
  const api   new NotificationSettingsApi http

  describe  create
    it  calls the api to update the notification settings   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse  data  notificationSettingsMockJSON
      api create notificationSettingsCreateMockDataJSON  3  subscribe
        expect spy  toHaveBeenCalledWith  users 3 notification settings   notificationSettingsCreateMockDataJSON
        done




  describe  get
    it  calls the api to get the notification settings   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse  data  notificationSettingsMockJSON
      api get 3  subscribe  settings
        expect spy  toHaveBeenCalledWith  users 3 notification settings
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import
  NotificationSettings  NotificationSettingsApiObject  NotificationSettingsApiObjectCreateRequest
  from    notification settings api interface

 Injectable
export class NotificationSettingsApi
  constructor private http  LawoonHttp

  create data  NotificationSettingsApiObjectCreateRequest  userId  number   Observable NotificationSettings
    return this http post  users   userId  notification settings   data
       map response    new Api NotificationSettingsApiObject  NotificationSettings  response  deserializeObject


  get userId  number   Observable NotificationSettings
    return this http get  users   userId  notification settings
       map response    new Api NotificationSettingsApiObject  NotificationSettings  response  deserializeObject


import   Talent   from        models talent model
import   User   from        models user model
import   Cost   from        shared models cost cost model
import   DeclinedOffer   from        shared models work states declined offer model
import   WorkDescription   from        shared models work states work description model
import   ApiNoRelationship  ApiTypedRelationship   from     api types
import   CostApiRequestObject   from    cost api interface
import   TalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface
import   WorkApiObject   from    work api interface
import   AnswerStruct  TimeStruct   from    work state api interface

export interface OfferApiObject
  id  string
  type   offers
  attributes  OfferApiObjectAttributes
  relationships
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users
    work  ApiTypedRelationship  works
    contract  ApiTypedRelationship  contracts
    declinedOffer  ApiTypedRelationship  declinedOffers     ApiNoRelationship
    workFlow  ApiTypedRelationship  workFlows

  resolvedRelationships
    talent  Talent
    user  User
    work  WorkDescription
    declinedOffer  DeclinedOffer



export interface OfferApiObjectAttributes
  chosenTimes  TimeStruct
  offerText  string
  answers  AnswerStruct
  cost  Cost
  createdAt  string
  archivedAt  string
  city  string
  country  string
  zip  string
  workPlaceLat  number
  workPlaceLng  number


type OfferApiObjectIncludeType   TalentApiObject   UserApiObject   WorkApiObject
export interface OfferApiObjectShowResponse
  data  OfferApiObject
  included  OfferApiObjectIncludeType


export interface OfferApiObjectIndexResponse
  data  OfferApiObject
  included  OfferApiObjectIncludeType


export interface OfferApiObjectCreateRequest
  data
    type   offers
    attributes  OfferApiObjectCreateRequestAttributes



export interface OfferApiObjectCreateRequestAttributesWithoutWorkPlace
  chosenTimes  TimeStruct
  answers  AnswerStruct
  offerText  string
  cost  CostApiRequestObject


export interface OfferApiObjectCreateRequestAttributesWithWorkPlace extends OfferApiObjectCreateRequestAttributesWithoutWorkPlace
  address   string
  work place lat  number
  work place lng  number
  city  string
  country  string
  zip  string


export type OfferApiObjectCreateRequestAttributes   OfferApiObjectCreateRequestAttributesWithoutWorkPlace
  OfferApiObjectCreateRequestAttributesWithWorkPlace
import   Offer   from        shared models work states offer model
import   offerIndexMockDataJSON  offerShowMockDataJSON   from     mock data offer api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   OfferApi   from    offer api service

describe  OfferApi
  const http  any   new LawoonHttpMock
  const api   new OfferApi http

  describe  update
    it  updates a specific offer by id   done
      const spy   spyOn http   patch
      spy and callThrough
      http mockResponse offerShowMockDataJSON
      api update  any   data   test    1  subscribe offer
        expect offer  toEqual jasmine any Offer
        expect spy  toHaveBeenCalledWith  work state offers 1    data   test
        done




  describe  create
    it  creates an offer   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse offerShowMockDataJSON
      api create  any   data   test    1  subscribe offer
        expect offer  toEqual jasmine any Offer
        expect spy  toHaveBeenCalledWith  works 1 offers    data   test
        done




  describe  allForWork
    let spy  any

    beforeAll
      spy   spyOn http   get
      spy and callThrough
      http mockResponse offerIndexMockDataJSON


    it  calls the deserializer   done
      api allForWork 3  subscribe offers
        expect offers length  toBe 1
        expect offers 0   toEqual jasmine any Offer
        expect offers 0  id  toEqual 1
        done



    it  gets the offers of talent   done
      api allForWork 3  subscribe
        expect spy  toHaveBeenCalledWith  works 3 offers
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Offer   from        shared models work states offer model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   OfferApiObject  OfferApiObjectCreateRequest   from    offer api interface

 Injectable
export class OfferApi
  constructor private http  LawoonHttp

  update postData  OfferApiObjectCreateRequest  offerId  number   Observable Offer
    return this http patch  work state offers   offerId    postData
       map data    new Api OfferApiObject  Offer  data  deserializeObject


  allForWork workId  number   Observable Offer
    return this http get  works   workId  offers   map data    new Api OfferApiObject  Offer  data  deserializeArray


  create postData  OfferApiObjectCreateRequest  workId  number   Observable Offer
    return this http post  works   workId  offers   postData
       map data    new Api OfferApiObject  Offer  data  deserializeObject


import   CreditCardDetails   from        payment payment method model

export interface PaymentMethodsApiCreateByTokenRequest
  stripe token  string
  visible in profile  boolean


export interface PaymentMethodsApiCreateByCustomerRequest
  stripe customer id  string
  visible in profile  boolean


export type PaymentMethodsApiCreateRequest   PaymentMethodsApiCreateByTokenRequest   PaymentMethodsApiCreateByCustomerRequest

export interface PaymentMethodsApiObject
  id  string
  type   paymentPaymentMethods
  attributes  PaymentMethodsApiObjectAttributes
  relationships
    user
      data
        id  string
        type   users





export interface PaymentMethodsApiObjectAttributes
  stripeCustomerId  string
  visibleInProfile  boolean
  creditCardDetails  CreditCardDetails
  createdAt  string


export interface PaymentMethodsApiCreateResponse
  data  PaymentMethodsApiObject


export interface PaymentMethodsApiIndexResponse
  data  PaymentMethodsApiObject

import   paymentMethodCreateMockDataJSON  paymentMethodIndexMockDataJSON   from     mock data payment method api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   PaymentMethodsApi   from    payment methods api service

describe  PaymentMethodsApi
  const http  LawoonHttpMock   new LawoonHttpMock
  const service  PaymentMethodsApi   new PaymentMethodsApi  any  http

  describe  index
    it  lists the payment methods   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse paymentMethodIndexMockDataJSON
      service index   subscribe paymentMethods
        expect paymentMethods length  toEqual 2
        expect paymentMethods 0  id  toEqual 15
        expect paymentMethods 1  id  toEqual 20
        done

      expect spy  toHaveBeenCalledWith  payment payment methods



  describe  createByToken
    it  creates the payment method   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse paymentMethodCreateMockDataJSON
      const data    stripeToken   abc   visibleInProfile  true
      service createByToken data stripeToken  data visibleInProfile  subscribe paymentMethod
        expect paymentMethod id  toEqual 74
        done

      expect spy  toHaveBeenCalledWith  payment payment methods
         stripe token  data stripeToken  visible in profile  data visibleInProfile



  describe  createByStripeCustomerId
    it  creates the payment method   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse paymentMethodCreateMockDataJSON
      const data    stripeCustomerId   abc   visibleInProfile  false
      service createByStripeCustomerId data stripeCustomerId  data visibleInProfile  subscribe paymentMethod
        expect paymentMethod id  toEqual 74
        done

      expect spy  toHaveBeenCalledWith  payment payment methods
         stripe customer id  data stripeCustomerId  visible in profile  data visibleInProfile



  describe  delete
    it  deletes the payment method   done
      const spy   spyOn http   delete
      spy and callThrough
      http mockResponse
      service delete 12  subscribe         done
      expect spy  toHaveBeenCalledWith  payment payment methods 12



import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   PaymentMethod   from        payment payment method model
import   PaymentMethodDeserializer   from     deserializers payment method deserializer
import   LawoonHttp   from     utils lawoon http service
import
  PaymentMethodsApiCreateRequest
  PaymentMethodsApiCreateResponse
  PaymentMethodsApiIndexResponse
  PaymentMethodsApiObject
  from    payment methods api interface

 Injectable
export class PaymentMethodsApi
  constructor private http  LawoonHttp

  index    Observable PaymentMethod
    return this http get  payment payment methods
       map response    response json
       map  json  PaymentMethodsApiIndexResponse     this deserializePaymentMethods json


  private deserializePaymentMethods json  PaymentMethodsApiIndexResponse   PaymentMethod
    return json data map data    this deserializePaymentMethod data


  createByToken stripeToken  string  visibleInProfile  boolean   Observable PaymentMethod
    return this create
      stripe token  stripeToken
      visible in profile  visibleInProfile



  createByStripeCustomerId stripeCustomerId  string  visibleInProfile  boolean   Observable PaymentMethod
    return this create
      stripe customer id  stripeCustomerId
      visible in profile  visibleInProfile



  private create data  PaymentMethodsApiCreateRequest
    return this http post  payment payment methods   data
       map response    response json
       map  json  PaymentMethodsApiCreateResponse     this deserializePaymentMethod json data


  private deserializePaymentMethod data  PaymentMethodsApiObject
    return new PaymentMethodDeserializer data  deserialize


  delete id  number   Observable void
    return this http delete  payment payment methods   id    map       undefined


import   Talent   from        models talent model
import   User   from        models user model
import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   ApiTypedRelationship   from     api types
import   BillApiObject   from    bill api interface
import   ContractApiObject   from    contract api interface
import   OfferApiObject   from    offer api interface
import   PaymentMethodsApiObject   from    payment methods api interface
import   TalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface
import   WorkApiObject   from    work api interface

export interface ReceiptApiObject
  id  string
  type   receipts
  attributes  ReceiptApiObjectAttributes
  relationships
    bill  ApiTypedRelationship  bills
    contract  ApiTypedRelationship  contracts
    offer  ApiTypedRelationship  offers
    work  ApiTypedRelationship  works
    talent  ApiTypedRelationship  talents
    user  ApiTypedRelationship  users
    workFlow  ApiTypedRelationship  workFlows

  resolvedRelationships
    bill  Bill
    contract  Contract
    offer  Offer
    work  WorkDescription
    talent  Talent
    user  User



export interface ReceiptApiObjectAttributes
  createdAt  string
  archivedAt  string


type WorkStateType   WorkApiObject   ContractApiObject   OfferApiObject   BillApiObject
export type ReceiptApiObjectIncludedType    WorkStateType   TalentApiObject   UserApiObject   PaymentMethodsApiObject

export interface ReceiptApiObjectShowResponse
  data  ReceiptApiObject
  included  ReceiptApiObjectIncludedType


export interface ReceiptApiObjectIndexResponse
  data  ReceiptApiObject
  included  ReceiptApiObjectIncludedType


export interface ReceiptApiObjectCreateRequest
  payment method id  number

import   Receipt   from        shared models work states receipt
import   receiptIndexMockDataJSON  receiptShowMockDataJSON   from     mock data receipt api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   ReceiptApi   from    receipt api service

describe  ReceiptApi
  const http  any   new LawoonHttpMock
  const api   new ReceiptApi http

  describe  all
    it  calls the deserializer   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse receiptIndexMockDataJSON
      api all  user   2  25  subscribe receipts
        expect receipts data length  toBe 1
           instead of checking the whole object  we expect the serializer was called
        expect receipts data 0   toEqual jasmine any Receipt
        expect receipts data 0  id  toEqual 1
        expect http get  toHaveBeenCalledWith encodeURI  work state receipts profile user page 2 size 25
        done



    it  gets the receipts of user customer if role is passed   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse receiptIndexMockDataJSON
      api all  user   1  5  subscribe
        expect http get  toHaveBeenCalledWith encodeURI  work state receipts profile user page 1 size 5
        done



    it  gets the receipts of talent if role is passed   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse receiptIndexMockDataJSON
      api all  talent   1  5  subscribe
        expect http get  toHaveBeenCalledWith encodeURI  work state receipts profile talent page 1 size 5
        done




  describe  get
    it  gets a specific receipt by id   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse receiptShowMockDataJSON
      api get 1  subscribe receipt
        expect receipt  toEqual jasmine any Receipt
        expect receipt id  toEqual 1
        expect spy  toHaveBeenCalledWith  work state receipts 1
        done




  describe  create
    it  creates a receipt by bill id   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse receiptShowMockDataJSON

      const data     payment method id  5
      api create 3  data  subscribe receipt
        expect receipt  toEqual jasmine any Receipt
        expect spy  toHaveBeenCalledWith  work state bills 3 receipts   data
        done




import   Injectable   from   angular core
import   URLSearchParams   from   angular http
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Receipt   from        shared models work states receipt
import   Api   from     api
import   Paginated   from     api types
import   LawoonHttp   from     utils lawoon http service
import   ReceiptApiObject  ReceiptApiObjectCreateRequest   from    receipt api interface

 Injectable
export class ReceiptApi
  constructor private http  LawoonHttp

  all role   talent     user   page  number  size  number   Observable Paginated Receipt
    const params   new URLSearchParams
    params set  profile   role
    params set  page   page toString
    params set  size   size toString
    return this http get  work state receipts   params toString
       map data    new Api ReceiptApiObject  Receipt  data  deserializeForPagination


  get id  number   Observable Receipt
    return this http get  work state receipts   id
       map data    new Api ReceiptApiObject  Receipt  data  deserializeObject


  create billId  number  data  ReceiptApiObjectCreateRequest   Observable Receipt
    return this http post  work state bills   billId  receipts   data
       map response    new Api ReceiptApiObject  Receipt  response  deserializeObject


import   ApiTypedRelationship   from     api types

export interface SubcategoryApiObject
  id  string
  type   subcategories
  attributes  SubcategoryApiObjectAttributes
  relationships
    category  ApiTypedRelationship  categories



export interface SubcategoryApiObjectAttributes
  name  string


export interface SubcategoryApiObjectShowResponse
  data  SubcategoryApiObject

import   Subcategory   from        categories shared subcategory model
import   User   from        models user model
import   ApiPagination  ApiTypedRelationship   from     api types
import   SubcategoryApiObject   from    subcategory api interface
import   UserApiObject   from    user api interface

export interface PublicTalentApiObject
  id  string
  type   talents
  attributes  PublicTalentApiObjectAttributes
  relationships
    user  ApiTypedRelationship  users

  resolvedRelationships
    user  User



export interface TalentApiObject
  id  string
  type   talents
  attributes  TalentApiObjectAttributes
  relationships
    user  ApiTypedRelationship  users

  resolvedRelationships
    user  User



export interface TalentUserApiObject
  id  string
  type   talents
  attributes  TalentUserApiObjectAttributes
  relationships
    user  ApiTypedRelationship  users
    subcategory  ApiTypedRelationship  subcategories

  resolvedRelationships
    user  User
    subcategory  Subcategory



export interface PublicTalentApiIndexResponse
  data  PublicTalentApiObject
  included   UserApiObject
  links    key  string   string
  meta  ApiPagination


export interface PublicTalentApiShowResponse
  data  PublicTalentApiObject
  included    UserApiObject


export interface TalentUserApiIndexResponse
  data  TalentUserApiObject
  included    UserApiObject   SubcategoryApiObject


export interface TalentUserApiCreateResponse
  data
    type   talents
    attributes  TalentUserApiCreateTalentAttributes

  included
    id  string
    type   users
    attributes  TalentUserApiCreateCustomerAttributes



export interface TalentUserApiUpdateResponse
  data
    type   talents
    attributes  TalentUserApiCreateTalentAttributes



export interface TalentUserApiCreateCustomerAttributes
  first name  string
  last name  string


export interface TalentUserApiCreateTalentAttributes
  about  string
  company name  string
  company uid register number  string
  website  string
  is professional  boolean
  visible  boolean
  service description  string
  latitude  number
  longitude  number
  education  string
  mobile number  string
  professional experience  string
  profile picture url  string
  project portfolio  string
  user id  string
  vat number  string
  vat rate  number
  zip  string
  city  string
  address  string
  country  string


export interface TalentUserApiObjectAttributes extends TalentApiObjectAttributes
  companyName  string
  companyUidRegisterNumber  string
  website  string
  isConnectedToTalentBankAccount  boolean
  iban  string
  accountHolderName  string
  latitude  string   number
  longitude  string   number
  vatNumber  string
  vatRate  string   number


export interface TalentApiObjectAttributes extends PublicTalentApiObjectAttributes
  address  string
  mobileNumber  string
  visible  boolean


export interface PublicTalentApiObjectAttributes
  about  string
  city  string
  country  string
  education  string
  isProfessional  true
  serviceTitle  string
  serviceDescription  string
  netHourlyRate  string   number
  professionalExperience  string
  profilePictureUrl  string
  projectPortfolio  string
  rating  string   number
  ratingQuantity  number
  zip  string

export interface TalentBankAccountApiCreateRequest
  authorization code  string


export interface TalentBankAccountApiCreateWithBankDataRequest
  iban  string
  account holder name  string

import   Talent   from        models talent model
import   publicTalentShowMockDataJson   from     mock data talent api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   TalentBankAccountApi   from    talent bank account api service

describe  TalentBankAccountApi
  let service  TalentBankAccountApi
  const http  any   new LawoonHttpMock

  beforeEach
    service   new TalentBankAccountApi http


  describe  create
    it  creates a talent bank account   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse publicTalentShowMockDataJson
      const data    authorization code   code
      service create data  subscribe talent
        expect talent  toEqual jasmine any Talent
        done

      expect spy  toHaveBeenCalledWith  payment talent bank accounts   data



  describe  createWithBankData
    it  creates a talent bank account   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse publicTalentShowMockDataJson
      const data    iban   my iban   account holder name   Peter Muster
      service createWithBankData data  subscribe talent
        expect talent  toEqual jasmine any Talent
        done

      expect spy  toHaveBeenCalledWith  payment talent bank accounts   data



import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Talent   from        models talent model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   TalentApiObject   from    talent api interface
import
  TalentBankAccountApiCreateRequest
  TalentBankAccountApiCreateWithBankDataRequest
  from    talent bank account api interface

 Injectable
export class TalentBankAccountApi
  constructor private http  LawoonHttp

  create data  TalentBankAccountApiCreateRequest   Observable Talent
    return this http post  payment talent bank accounts   data
       map response    new Api TalentApiObject  Talent  response  deserializeObject


  createWithBankData data  TalentBankAccountApiCreateWithBankDataRequest   Observable Talent
    return this http post  payment talent bank accounts   data
       map response    new Api TalentApiObject  Talent  response  deserializeObject


import   User   from        models user model
import   ApiTypedRelationship   from     api types
import   PublicUserApiObject   from    user api interface

export interface TalentRatingApiObjectCreateRequest
  data
    type   talent rating
    attributes
      comment  string
      value  number




export interface TalentRatingApiObject
  id  string
  type   talentRatings
  attributes  TalentRatingApiObjectAttributes
  relationships
    user  ApiTypedRelationship  users

  resolvedRelationships
    user  User



export interface TalentRatingApiObjectAttributes
  value  number
  comment  string
  createdAt  string


export type TalentRatingApiObjectIncludedType    PublicUserApiObject

export interface TalentRatingApiObjectIndexResponse
  data  TalentRatingApiObject
  included  TalentRatingApiObjectIncludedType

import   TalentRating   from        models talent rating model
import   talentRatingArrayMockDataJSON   from     mock data talent rating api mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   TalentRatingApi   from    talent rating api service

describe  TalentRatingApi
  const http  LawoonHttpMock   new LawoonHttpMock
  const service  TalentRatingApi   new TalentRatingApi  any  http
  const data
    data
      type    talent rating    talent rating
      attributes   comment   test   value  5



  describe  create
    it  creates a talent rating   done
      const spy   spyOn http   post
      spy and callThrough
      http mockResponse  nothing
      service create 10  data  subscribe       done
      expect spy  toHaveBeenCalledWith  work state receipts 10 talent ratings   data



  describe  all
    it  calls the deserializer   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse talentRatingArrayMockDataJSON
      service all 3  subscribe talentRatings
        expect talentRatings length  toBe 2
           instead of checking the whole object  we expect the serializer was called
        expect talentRatings 0   toEqual jasmine any TalentRating
        expect talentRatings 0  value  toEqual 3
        done



    it  gets the talent ratings   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse talentRatingArrayMockDataJSON
      service all 5  subscribe
        expect spy  toHaveBeenCalledWith  talents 5 talent ratings
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   TalentRating   from        models talent rating model
import   Api   from     api
import   LawoonHttp   from     utils lawoon http service
import   TalentRatingApiObject  TalentRatingApiObjectCreateRequest   from    talent rating api interface

 Injectable
export class TalentRatingApi
  constructor private http  LawoonHttp

  create receiptId  number  data  TalentRatingApiObjectCreateRequest   Observable void
    return this http post  work state receipts   receiptId  talent ratings   data  map


  all talentId  number   Observable TalentRating
    return this http get  talents   talentId  talent ratings
       map data    new Api TalentRatingApiObject  TalentRating  data  deserializeArray


export interface UserApiObject
  id  string
  type   users
  attributes  UserApiObjectAttributes


export interface UserApiObjectAttributes
  firstName  string
  lastName  string
  email  string
  zip  string
  city  string
  address  string
  country  string
  phoneNumber  string
  admin  boolean
  customer  boolean
  language  string
  hasApp  boolean


export interface UserApiObjectShowResponse
  data  UserApiObject


export interface UserApiObjectIndexResponse
  data  UserApiObject


export interface PublicUserApiObject
  id  string
  type   users
  attributes  PublicUserApiObjectAttributes


export interface PublicUserApiObjectAttributes
  firstName  string
  lastName  string
  zip  string
  city  string
  country  string

import   User   from        models user model
import   UserDeserializer   from     deserializers user deserializer
import   userMockDataJSON   from     mock data user api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   UserApi   from    user api service

describe  UserApi
  const http  LawoonHttpMock   new LawoonHttpMock
  const service   new UserApi  any  http

  describe  current
    it  gets the current user customer if logged in   done
      const expectedCustomer   new UserDeserializer userMockDataJSON data  deserialize
      http mockResponse userMockDataJSON
      spyOn http   get   and callThrough
      service current   subscribe customer
        expect http get  toHaveBeenCalledWith  current users
        expect customer  toEqual expectedCustomer
        done



    it  can also handle the empty response if not logged in   done
      http mockResponse     204
      spyOn http   get   and callThrough
      service current   subscribe customer
        expect http get  toHaveBeenCalledWith  current users
        expect customer  toEqual undefined
        done




  describe  update
    it  updates a user customer   done
      spyOn http   patch   and callThrough
      http mockResponse userMockDataJSON
      const expectedCustomer   new UserDeserializer userMockDataJSON data  deserialize
      const userMock  User    any   id  3  serialize         mockSerialized
      service update userMock  subscribe customer
        expect http patch  toHaveBeenCalledWith  users 3    data   mockSerialized
        expect customer  toEqual expectedCustomer
        done




import   Injectable   from   angular core
import   Response   from   angular http
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   User   from        models user model
import   UserDeserializer   from     deserializers user deserializer
import   LawoonHttp   from     utils lawoon http service

 Injectable
export class UserApi
  constructor private http  LawoonHttp

  current    Observable User
    return this http get  current users
       map response
        if  response status     204    return
        return this deserializeUser response



  private deserializeUser response  Response
    return new UserDeserializer response json   data  deserialize


  update user  User   Observable User
    return this http patch  users   user id     data  user serialize
       map response    this deserializeUser response


import   Category   from        categories shared category model
import   Subcategory   from        categories shared subcategory model
import   User   from        models user model
import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   DeclinedInvitation   from        shared models work states declined invitation model
import   DeclinedOffer   from        shared models work states declined offer model
import   Offer   from        shared models work states offer model
import   Receipt   from        shared models work states receipt
import   WorkInvitation   from        shared models work states work invitation model
import   WorkStatus   from        shared models work states work types
import   ApiTypedRelationship  ApiTypedRelationshipArray   from     api types
import   CategoryApiObject   from    category api interface
import   SubcategoryApiObject   from    subcategory api interface
import   PublicUserApiObject  UserApiObject   from    user api interface
import   QuestionStruct  TimeStruct   from    work state api interface

export interface WorkApiObject
  id  string
  type   works
  attributes  WorkApiObjectAttributes
  relationships
    subcategory  ApiTypedRelationship  subcategories
    category  ApiTypedRelationship  categories
    user  ApiTypedRelationship  users

  resolvedRelationships
    subcategory  Subcategory
    category  Category
    user  User



export interface WorkApiObjectAttributes
  title  string
  description  string
  public  boolean
  timeSuggestions  TimeStruct
  questions  QuestionStruct
  files  string
  zip  string
  city  string
  country  string
  address   string
  workPlaceLng   number
  workPlaceLat   number
  category  Category
  subcategory  Subcategory
  createdAt  string
  estimatedWorkMinutes  number
  status  WorkStatus


export interface WorkApiObjectShowResponse
  data  WorkApiObject
  included   CategoryApiObject   SubcategoryApiObject   PublicUserApiObject


export interface WorkApiObjectCreateResponse
  data  WorkApiObject
  included   CategoryApiObject   SubcategoryApiObject   PublicUserApiObject


export interface WorkApiObjectIndexResponse
  data  WorkApiObject
  included   CategoryApiObject   SubcategoryApiObject   PublicUserApiObject


export interface WorkApiObjectUpdateRequest
  data
    type   works
    attributes  WorkApiObjectUpdateRequestAttributes



export interface WorkApiObjectCreateRequest
  data
    type   works
    attributes  WorkApiObjectCreateRequestAttributes



export interface WorkApiObjectUpdateRequestAttributes
  address   string
  description  string
  files  string
  questions  QuestionStruct
  subcategory id  number
  status  string
  time suggestions  TimeStruct
  title  string
  work place lat   number
  work place lng   number
  city   string
  country   string
  zip   string
  public  boolean
  estimated work minutes  number


export interface WorkApiObjectCreateRequestAttributes extends WorkApiObjectUpdateRequestAttributes
  talents  number


export interface PendingWorkApiObject
  id  string
  type   pendingWorks
  attributes  PendingWorkApiObjectAttributes
  relationships
    subcategory  ApiTypedRelationship  subcategories
    category  ApiTypedRelationship  categories
    user  ApiTypedRelationship  users
    workInvitations  ApiTypedRelationshipArray  workInvitations
    offers  ApiTypedRelationshipArray  offers
    contracts  ApiTypedRelationshipArray  contracts
    bills  ApiTypedRelationshipArray  bills
    receipts  ApiTypedRelationshipArray  receipts
    declinedInvitations  ApiTypedRelationshipArray  declinedInvitations
    declinedOffers  ApiTypedRelationshipArray  declinedOffers

  resolvedRelationships
    subcategory  Subcategory
    category  Category
    user  User
    workInvitations  WorkInvitation
    offers  Offer
    contracts  Contract
    bills  Bill
    receipts  Receipt
    declinedInvitations  DeclinedInvitation
    declinedOffers  DeclinedOffer



export interface PendingWorkApiObjectAttributes extends WorkApiObjectAttributes
  offersCount  number
  chosenTime  TimeStruct


export interface PendingWorkApiIndexResponse
  data  PendingWorkApiObject
  included   CategoryApiObject   SubcategoryApiObject   UserApiObject


export interface PendingWorkApiObjectShowResponse
  data  PendingWorkApiObject
  included   CategoryApiObject   SubcategoryApiObject   UserApiObject

import   WorkFilter   from        public browse public work work filter model
import   DeclinedInvitation   from        shared models work states declined invitation model
import   PendingWork   from        shared models work states pending work model
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model
import   draftWorkMockDataShowJSON   from     mock data draft work mock data
import   pendingWorkMockDataJSON  pendingWorkMockDataShowJSON   from     mock data pending work mock data
import   declinedWorkInvitationMockDataJSON  workInvitationShowResponse   from     mock data work invitation api service mock data
import
  publicWorkCreateMockDataJSON
  publicWorkIndexMockDataJSON
  publicWorkShowMockDataJSON
  workCreateMockDataJSON
  workUpdateMockDataJSON
  from     mock data works api mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   WorkApi   from    work api service
import   WorkInvitationApiObjectCreateRequest   from    work invitation api interface

describe  WorkApi
  const http  any   new LawoonHttpMock
  const api   new WorkApi http

  describe  get
    it  gets a specific public work by id   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse publicWorkShowMockDataJSON
      api get 4  subscribe workDescription
        expect workDescription  toEqual jasmine any WorkDescription
        expect workDescription id  toEqual 4
        expect spy  toHaveBeenCalledWith  works 4
        done




  describe  all
    beforeEach
      http mockResponse publicWorkIndexMockDataJSON


    it  returns the five elements and page one if page and size of pages are given   done
      const filter  WorkFilter   new WorkFilter
      filter page   2
      filter size   5
      const spy   spyOn http   get
      spy and callThrough
      api all filter  subscribe
        expect http lastMethod  toEqual  get
        expect http lastPath  toContain encodeURI  sort desc page number  2 page size  5
        done



    it  returns the 25 page size and page 1 if no page and size of pages are given   done
      const spy   spyOn http   get
      spy and callThrough
      api all   subscribe
        expect http lastMethod  toEqual  get
        expect http lastPath  toContain encodeURI   sort desc page number  1 page size  25
        done



    describe  subcategories
      it  sets the subcategory filter with two ids   done
        const filter  WorkFilter   new WorkFilter
        filter subcategoryIds    743  998
        const spy   spyOn http   get
        spy and callThrough
        api all filter  subscribe
          expect http lastMethod  toEqual  get
          const expected    filter subcategories    743 filter subcategories    998
          expect http lastPath  toContain encodeURI expected
          done





  describe  addWorkInvitation
    it  adds a workInvitation for the given talent   done
      spyOn http   post   and callThrough
      http mockResponse workInvitationShowResponse
      const request  WorkInvitationApiObjectCreateRequest
        data
          type   workInvitations
          attributes
            talent id  6



      api addWorkInvitation 3  request  subscribe workInvitation
        expect workInvitation  toEqual jasmine any WorkInvitation
        expect http post  toHaveBeenCalledWith  works 3 work invitations   request
        done




  describe  deleteWorkInvitation
    it  deletes a workInvitation of a given work   done
      spyOn http   delete   and callThrough
      http mockResponse declinedWorkInvitationMockDataJSON
      api deleteWorkInvitation 3  6  subscribe workInvitation
        expect http delete  toHaveBeenCalledWith  works 3 work invitations 6
        expect workInvitation  toEqual jasmine any WorkInvitation
        expect workInvitation declinedInvitation  toEqual jasmine any DeclinedInvitation
        expect workInvitation declinedInvitation id  toEqual 3
        done




  describe  update
    it  updates a work description by id   done
      spyOn http   patch   and callThrough
      http mockResponse publicWorkCreateMockDataJSON
      const id   5
      api update workUpdateMockDataJSON  id  subscribe response
        expect response  toEqual jasmine any WorkDescription
        expect http patch  toHaveBeenCalledWith  works   id    workUpdateMockDataJSON
        done




  describe  publishDraft
    it  updates a work description by id   done
      spyOn http   post   and callThrough
      http mockResponse publicWorkCreateMockDataJSON
      const id   5
      api publishDraft id  subscribe response
        expect response  toEqual jasmine any WorkDescription
        expect http post  toHaveBeenCalledWith  work state drafts   id  works   null
        done




  describe  saveDraft
    it  updates a work description by id   done
      spyOn http   patch   and callThrough
      http mockResponse publicWorkCreateMockDataJSON
      const id   5
      api saveDraft workUpdateMockDataJSON  id  subscribe response
        expect response  toEqual jasmine any WorkDescription
        expect http patch  toHaveBeenCalledWith  admin works   id    workUpdateMockDataJSON
        done




  describe  allWorks
    beforeEach
      http mockResponse publicWorkIndexMockDataJSON


    it  gets the works   done
      const filter  WorkFilter   new WorkFilter
      const spy   spyOn http   get
      spy and callThrough
      api allWorks filter  subscribe
        expect http lastMethod  toEqual  get
        done




  describe  create
    it  creates a work   done
      spyOn http   post   and callThrough
      http mockResponse publicWorkCreateMockDataJSON
      api create workCreateMockDataJSON  subscribe workDescription
        expect workDescription  toEqual jasmine any WorkDescription
        expect http post  toHaveBeenCalledWith  works   workCreateMockDataJSON
        done




  describe  pendingByUserID
    it  gets pending works by user id   done
      spyOn http   get   and callThrough
      http mockResponse pendingWorkMockDataJSON
      const id   5
      api pendingByUserID 5  subscribe pendingWorks
           instead of checking the whole object  we expect the serializer was called
        expect pendingWorks 0   toEqual jasmine any PendingWork
        expect pendingWorks 0  workDescription id  toEqual 30
        expect pendingWorks 1  workDescription id  toEqual 31
        expect http get  toHaveBeenCalledWith  users   id  works
        done




  describe  archivedByUserID
    it  gets archived works by user id   done
      spyOn http   get   and callThrough
      http mockResponse pendingWorkMockDataJSON
      const id   5
      api archivedByUserID 5  3  subscribe
        expect http get  toHaveBeenCalledWith  users   id  works archived true page 3
        done




  describe  getPendingWork
    it  gets a pending work by work id   done
      spyOn http   get   and callThrough
      http mockResponse pendingWorkMockDataShowJSON
      const id   5
      api getPendingWork 5  30  subscribe pendingWork
           instead of checking the whole object  we expect the serializer was called
        expect pendingWork  toEqual jasmine any PendingWork
        expect pendingWork workDescription id  toEqual 30
        expect http get  toHaveBeenCalledWith  users   id  works   30
        done




  describe  getDraftWork
    it  gets a draft work by work id   done
      spyOn http   get   and callThrough
      http mockResponse draftWorkMockDataShowJSON
      api getDraftWork 5  30  subscribe draftWork
        expect draftWork  toEqual jasmine any PendingWork
        expect draftWork workDescription id  toEqual 30
        expect http get  toHaveBeenCalledWith  admin works   30
        done




  describe  destroy
    it  destroy a specific invitation   done
      const spy   spyOn http   delete
      spy and callThrough
      http mockResponse null
      api delete 42  subscribe  response
        expect spy  toHaveBeenCalledWith  works 42
        done




  describe  deleteDraft
    it  destroy a specific invitation   done
      const spy   spyOn http   delete
      spy and callThrough
      http mockResponse null
      api deleteDraft 42  subscribe  response
        expect spy  toHaveBeenCalledWith  admin works 42
        done




import   Injectable   from   angular core
import   URLSearchParams   from   angular http
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   WorkFilter   from        public browse public work work filter model
import   PendingWork   from        shared models work states pending work model
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model
import   Api   from     api
import   Paginated   from     api types
import   LawoonHttp   from     utils lawoon http service
import   PendingWorkApiObject  WorkApiObject  WorkApiObjectCreateRequest  WorkApiObjectUpdateRequest   from    work api interface
import   WorkInvitationApiObject  WorkInvitationApiObjectCreateRequest   from    work invitation api interface

 Injectable
export class WorkApi
  constructor private http  LawoonHttp

  get id  number   Observable WorkDescription
    return this http get  works   id
       map data    new Api WorkApiObject  WorkDescription  data  deserializeObject


  all filter  WorkFilter   new WorkFilter     Observable Paginated WorkDescription
    const params   this workParams filter
    return this http get  works   params toString
       map data    new Api WorkApiObject  WorkDescription  data  deserializeForPagination


  private workParams filter  WorkFilter   URLSearchParams
    const params   new URLSearchParams
    this setSort params  filter
    this setFilter params  filter
    return params


  private setSort params  URLSearchParams  filter  WorkFilter
    params set  sort   filter sort


  private setFilter params  URLSearchParams  filter  WorkFilter
    filter serialize params


  addWorkInvitation workId  number  requestData  WorkInvitationApiObjectCreateRequest
    return this http post  works   workId  work invitations   requestData
       map data    new Api WorkInvitationApiObject  WorkInvitation  data  deserializeObject


  deleteWorkInvitation workId  number  workInvitationId  number
    return this http delete  works   workId  work invitations   workInvitationId
       map data    new Api WorkInvitationApiObject  WorkInvitation  data  deserializeObject


  update data  WorkApiObjectUpdateRequest  id  number   Observable WorkDescription
    return this http patch  works   id    data
       map responseData    new Api WorkApiObject  WorkDescription  responseData  deserializeObject


  publishDraft id  number   Observable WorkDescription
    return this http post  work state drafts   id  works   null
       map responseData    new Api WorkApiObject  WorkDescription  responseData  deserializeObject


  saveDraft data  WorkApiObjectUpdateRequest  id  number   Observable WorkDescription
    return this http patch  admin works   id    data
       map responseData    new Api WorkApiObject  WorkDescription  responseData  deserializeObject


  allWorks filter  WorkFilter   new WorkFilter     Observable WorkDescription
    const params   this workParams filter
    return this http get  admin works   params toString
       map data    new Api WorkApiObject  WorkDescription  data  deserializeArray


  archivedByUserID userId  number  page  number   Observable Paginated PendingWork
    const url    users   userId  works archived true page   page
    return this http get url  map data    new Api PendingWorkApiObject  PendingWork  data  deserializeForPagination


  pendingByUserID userId  number   Observable PendingWork
    return this http get  users   userId  works   map data    new Api PendingWorkApiObject  PendingWork  data  deserializeArray


  getPendingWork userId  number  workId  number   Observable PendingWork
    return this http get  users   userId  works   workId
       map data    new Api PendingWorkApiObject  PendingWork  data  deserializeObject


  getDraftWork userId  number  workId  number   Observable PendingWork
    userId   userId
    return this http get  admin works   workId
       map data    new Api PendingWorkApiObject  PendingWork  data  deserializeObject


  create data  WorkApiObjectCreateRequest   Observable WorkDescription
    return this http post  works   data
       map responseData    new Api WorkApiObject  WorkDescription  responseData  deserializeObject


  delete id  number   Observable void
    return this http delete  works   id    map  data    undefined


  deleteDraft id  number   Observable void
    return this http delete  admin works   id    map  data    undefined


import   Talent   from        models talent model
import   User   from        models user model
import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   DeclinedInvitation   from        shared models work states declined invitation model
import   DeclinedOffer   from        shared models work states declined offer model
import   Offer   from        shared models work states offer model
import   Receipt   from        shared models work states receipt
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model
import   ApiTypedRelationship   from     api types
import   BillApiObject   from    bill api interface
import   ContractApiObject   from    contract api interface
import   DeclinedInvitationApiObject   from    declined invitation api interface
import   DeclinedOfferApiObject   from    declined offer api interface
import   OfferApiObject   from    offer api interface
import   ReceiptApiObject   from    receipt api interface
import   TalentApiObject   from    talent api interface
import   PublicUserApiObject   from    user api interface
import   WorkApiObject   from    work api interface
import   WorkInvitationApiObject   from    work invitation api interface

export interface WorkFlowApiObject
  id  string
  type   workFlows
  attributes  WorkFlowApiObjectAttributes
  relationships
    user  ApiTypedRelationship  users
    work  ApiTypedRelationship  works
    workInvitation   ApiTypedRelationship  workInvitations
    offer   ApiTypedRelationship  offers
    contract   ApiTypedRelationship  contracts
    bill   ApiTypedRelationship  bills
    receipt   ApiTypedRelationship  receipts
    declinedInvitation   ApiTypedRelationship  declinedInvitations
    declinedOffer   ApiTypedRelationship  declinedOffers
    talent  ApiTypedRelationship  talents

  resolvedRelationships
    user  User
    talent  Talent
    work  WorkDescription
    workInvitation  WorkInvitation
    offer  Offer
    contract  Contract
    bill  Bill
    receipt  Receipt
    declinedInvitation  DeclinedInvitation
    declinedOffer  DeclinedOffer



export interface WorkFlowApiObjectAttributes
  latestType  string
  latestId  number


type WorkStateType   WorkApiObject   ContractApiObject   OfferApiObject   WorkInvitationApiObject   DeclinedInvitationApiObject
  DeclinedOfferApiObject   BillApiObject   ReceiptApiObject
export type WorkFlowApiObjectIncludedType    WorkStateType   TalentApiObject   PublicUserApiObject

export interface WorkFlowApiObjectShowResponse
  data  WorkFlowApiObject
  included  WorkFlowApiObjectIncludedType


export interface WorkFlowApiObjectIndexResponse
  data  WorkFlowApiObject
  included  WorkFlowApiObjectIncludedType

import   WorkFlow   from        shared models work flow model
import   workFlowIndexMockDataJSON  workFlowShowMockDataJSON   from     mock data work flow api service mock data
import   LawoonHttpMock   from     utils lawoon http service mock
import   WorkFlowApi   from    work flow api service

describe  WorkFlowApi
  const http  any   new LawoonHttpMock
  const api   new WorkFlowApi http

  describe  get
    it  gets a specific work flow by id   done
      const spy   spyOn http   get
      spy and callThrough
      http mockResponse workFlowShowMockDataJSON
      api get 4  subscribe workFlow
        expect workFlow  toEqual jasmine any WorkFlow
        expect workFlow id  toEqual 4
        expect spy  toHaveBeenCalledWith  work flows 4
        done




  describe  allPending
    it  gets all work flows   done
      spyOn http   get   and callThrough
      http mockResponse workFlowIndexMockDataJSON
      api allPending   subscribe workFlows
        expect workFlows 0   toEqual jasmine any WorkFlow
        expect http get  toHaveBeenCalledWith  work flows
        done




  describe  allArchived
    it  gets all work flows   done
      spyOn http   get   and callThrough
      http mockResponse workFlowIndexMockDataJSON
      api allArchived 2  subscribe
        expect http get  toHaveBeenCalledWith  work flows archived true page 2
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   WorkFlow   from        shared models work flow model
import   Api   from     api
import   Paginated   from     api types
import   LawoonHttp   from     utils lawoon http service
import   WorkFlowApiObject   from    work flow api interface

 Injectable
export class WorkFlowApi
  constructor private http  LawoonHttp

  get workFlowId  number   Observable WorkFlow
    return this http get  work flows   workFlowId
       map data    new Api WorkFlowApiObject  WorkFlow  data  deserializeObject


  allPending    Observable WorkFlow
    return this http get  work flows   map data    new Api WorkFlowApiObject  WorkFlow  data  deserializeArray


  allArchived page  number   Observable Paginated WorkFlow
    const url    work flows archived true page   page
    return this http get url  map data    new Api WorkFlowApiObject  WorkFlow  data  deserializeForPagination


import   Talent   from        models talent model
import   User   from        models user model
import   DeclinedInvitation   from        shared models work states declined invitation model
import   WorkDescription   from        shared models work states work description model
import   ApiTypedRelationship   from     api types
import   DeclinedInvitationApiObject   from    declined invitation api interface
import   PublicTalentApiObject   from    talent api interface
import   UserApiObject   from    user api interface

export interface WorkInvitationApiObject
  id  string
  type   workInvitations
  attributes  WorkInvitationApiObjectAttributes
  relationships
    work  ApiTypedRelationship  works
    talent  ApiTypedRelationship  talents
    declinedInvitation   ApiTypedRelationship  declinedInvitations

  resolvedRelationships
    work  WorkDescription
    talent  Talent
    user  User
    declinedInvitation  DeclinedInvitation



export interface WorkInvitationApiObjectAttributes
  createdAt  string
  archivedAt  string


export interface WorkInvitationApiObjectCreateRequest
  data
    type   workInvitations
    attributes
      talent id  number




export interface WorkInvitationApiObjectShowResponse
  data  WorkInvitationApiObject
  included   PublicTalentApiObject   UserApiObject


export interface WorkInvitationApiObjectDeleteResponse
  data  WorkInvitationApiObject
  included   DeclinedInvitationApiObject   PublicTalentApiObject   UserApiObject

export interface QuestionStruct
  question  string


export interface AnswerStruct
  question  string
  answer  string


export interface TimeStruct
  from  string
  to   string

import   Category   from     categories shared category model
import   Subcategory   from     categories shared subcategory model
import   TalentRating   from     models talent rating model
import   Talent   from     models talent model
import   User   from     models user model
import   PaymentMethod   from     payment payment method model
import   Contract   from     shared models contract model
import   Cost   from     shared models cost cost model
import   WorkFlow   from     shared models work flow model
import   Bill   from     shared models work states bill
import   DeclinedInvitation   from     shared models work states declined invitation model
import   DeclinedOffer   from     shared models work states declined offer model
import   Offer   from     shared models work states offer model
import   PendingWork   from     shared models work states pending work model
import   Receipt   from     shared models work states receipt
import   WorkDescription   from     shared models work states work description model
import   WorkInvitation   from     shared models work states work invitation model
import   DeserializerConstructor   from    api types
import   BillDeserializer   from    deserializers bill deserializer
import   CategoryDeserializer   from    deserializers category deserializer
import   ChatHash  ChatHashDeserializer   from    deserializers chat hash deserializer
import   ContractDeserializer   from    deserializers contract deserializer
import   CostDeserializer   from    deserializers cost deserializer
import   DeclinedInvitationDeserializer   from    deserializers declined invitation deserializer
import   DeclinedOfferDeserializer   from    deserializers declined offer deserializer
import   LinkUrl  LinkUrlDeserializer   from    deserializers link url deserializer
import   NotificationSettingsDeserializer   from    deserializers notification settings deserializer
import   OfferDeserializer   from    deserializers offer deserializer
import   PaymentMethodDeserializer   from    deserializers payment method deserializer
import   PendingWorkDeserializer   from    deserializers pending work deserializer
import   ReceiptDeserializer   from    deserializers receipt deserializer
import   SubcategoryDeserializer   from    deserializers subcategory deserializer
import   TalentDeserializer   from    deserializers talent deserializer
import   TalentRatingDeserializer   from    deserializers talent rating deserializer
import   UserDeserializer   from    deserializers user deserializer
import   WorkDescriptionDeserializer   from    deserializers work description deserializer
import   WorkFlowDeserializer   from    deserializers work flow deserializer
import   WorkInvitationDeserializer   from    deserializers work invitation deserializer
import   NotificationSettings   from    endpoints notification settings api interface

   All the models where we want to use deserialization by type should be listed here
export const modelMappings  any

type workStateType   WorkDescription   WorkInvitation   WorkInvitation   Offer   Contract
  Bill   Receipt   DeclinedInvitation   DeclinedOffer   PendingWork   WorkFlow
type mappingType   workStateType   Category   Subcategory   User   Talent   PaymentMethod   Cost   ChatHash   TalentRating
  LinkUrl   NotificationSettings

export const deserializerMappings     key  string   DeserializerConstructor mappingType
  bills  BillDeserializer
  categories  CategoryDeserializer
  chatHashes  ChatHashDeserializer
  contracts  ContractDeserializer
  costCalculations  CostDeserializer
  declinedInvitations  DeclinedInvitationDeserializer
  declinedOffers  DeclinedOfferDeserializer
  linkUrls  LinkUrlDeserializer
  notificationSettings  NotificationSettingsDeserializer
  offers  OfferDeserializer
  paymentPaymentMethods  PaymentMethodDeserializer
  pendingWorks  PendingWorkDeserializer
  receipts  ReceiptDeserializer
  subcategories  SubcategoryDeserializer
  talentRatings  TalentRatingDeserializer
  talents  TalentDeserializer
  users  UserDeserializer
  workInvitations  WorkInvitationDeserializer
  works  WorkDescriptionDeserializer
  workFlows  WorkFlowDeserializer


export const modelMappingsSortStrategy     paymentPaymentMethods    subcategories    categories    users    talents    works
   declinedInvitations    workInvitations    declinedOffers    offers    contracts    bills    receipts
   costCalculations    notificationSettings    talentRatings    workFlows
export const validateTokenValidMockDataJSON
  success  true
  data
    id  3
    first name   Donald
    last name   Mitchell
    email   donald example com
    password   any  null
    mobile number    41 79 451 33 35
    zip   8001
    city   ZÃ¼rich
    address   Torgasse 7
    country   Schweiz
    phone number    41 71 414 67 14
    provider   email
    uid   donald example com
    type   user


import
  BillApiObject
  BillApiObjectCreateRequest
  BillApiObjectIncludedType
  BillApiObjectShowResponse
  from     endpoints bill api interface
import   contractMockDataJSON   from    contract api service mock data
import   offerMockDataJson   from    offer api service mock data
import   talentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data
import   workMockJSON   from    works api mock data

export const billMockJSON  BillApiObject
  id   1
  type   bills
  attributes
    cost
      currency   chf
      work
        duration  420
        hourlyRate  8000
        calculatedHourlyRate
          feeRate  0 2
          fee  1275
          costExcludingFee  5125
          costIncludingFee  6400


      items
        description   Description
        price  3000
        amount  1
        calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
        totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

      totals
        items   fee  0  costExcludingFee  0  costIncludingFee  0
        work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
        lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
        payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02


    createdAt   2017 01 23T16 50 34 982 01 00
    archivedAt   2017 01 23T16 50 34 982 01 00

  relationships
    contract
      data
        id   2
        type   contracts


    offer
      data
        id   1
        type   offers


    work
      data
        id   2
        type   works


    talent
      data
        id   2
        type   talents


    user
      data
        id   44
        type   users


    paymentMethod
      data
        id   6
        type   paymentPaymentMethods


    receipt
      data  null

    workFlow
      data
        id   2
        type   workFlows





const billIncludedMockDataJSON  BillApiObjectIncludedType
  contractMockDataJSON
  offerMockDataJson
  workMockJSON
  talentMockDataJSON
  userMockJSON 44

    id   118
    type   paymentPaymentMethods
    attributes
      stripeCustomerId   cus 4 9tipSRjKD2mNtu
      visibleInProfile  false
      creditCardDetails
        id   card 22219ZvNqBdMN3eV9TWQxQQNaPA14
        object   card
        addressCity  null
        addressCountry  null
        addressLine1  null
        addressLine1Check  null
        addressLine2  null
        addressState  null
        addressZip  null
        addressZipCheck  null
        brand   Visa
        country   US
        customer   cus 9tipSRjKD2mNtu4
        cvcCheck   pass
        dynamicLast4  null
        expMonth  1
        expYear  2019
        fingerprint   6zmi6vvkpHqXGx2j4
        funding   credit
        last4   4242
        metadata
        name   ena example com
        tokenizationMethod  null

      createdAt   2017 01 23T16 50 32 131 01 00

    relationships
      user
        data
          id   4
          type   users






export const billShowMockDataJSON  BillApiObjectShowResponse
  data  billMockJSON
  included  billIncludedMockDataJSON


export const billCreateMockDataJSON  BillApiObjectCreateRequest
  data
    type   bills
    attributes
      cost
        work
          duration  150
          hourlyRate  5000

        items

            description   Fahrradkette
            price  2000
            amount  1


            description   Bremsen
            price  3250
            amount  2






import   CategoryApiObject   from     endpoints category api interface
import   subcategoryMockDataJSON   from    subcategory api service mock data

export const categoryMockDataJSON  CategoryApiObject
  id   23
  type   categories
  attributes
    name   Category One
    iconUrl   this icon svg

  relationships
    subcategories
      data

          id   1
          type   subcategories


          id   2
          type   subcategories




  included
    subcategoryMockDataJSON 1  1
    subcategoryMockDataJSON 2  1


import   ChatHashApiObject  ChatHashApiObjectIndexResponse   from     endpoints chat hash api interface

export const chatHashMockJSON  ChatHashApiObject
  id   chathash
  type   chatHashes
  attributes
    chatHash   xyz



export const chatHashIndexMockDataJSON  ChatHashApiObjectIndexResponse
  data  chatHashMockJSON

import   ContractApiObject  ContractApiObjectShowResponse   from     endpoints contract api interface
import   talentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data

export const contractMockDataJSON  ContractApiObject
  id   1
  type   contracts
  attributes
    createdAt   2017 01 22T14 49 53 988 01 00
    chosenTime    from   2017 02 22T14 49 53 988 01 00

  relationships
    paymentMethod
      data
        id   118
        type   paymentPaymentMethods


    offer
      data
        id   1
        type   offers


    work
      data
        id   2
        type   works


    talent
      data
        id   28
        type   talents


    user
      data
        id   2
        type   users


    bill
      data  null

    workFlow
      data
        id   2
        type   workFlows





export const contractShowMockDataJSON  ContractApiObjectShowResponse
  data  contractMockDataJSON
  included

      id   118
      type   paymentPaymentMethods
      attributes
        stripeCustomerId   cus 2 9tipSRjKD2mNtu
        visibleInProfile  false
        creditCardDetails
          id   card 22219ZvNqBdMN3eV9TWQxQQNaPA12
          object   card
          addressCity  null
          addressCountry  null
          addressLine1  null
          addressLine1Check  null
          addressLine2  null
          addressState  null
          addressZip  null
          addressZipCheck  null
          brand   Visa
          country   US
          customer   cus 9tipSRjKD2mNtu2
          cvcCheck   pass
          dynamicLast4  null
          expMonth  1
          expYear  2019
          fingerprint   6zmi6vvkpHqXGx2j2
          funding   credit
          last4   4242
          metadata
          name   humberto example com
          tokenizationMethod  null

        createdAt   2017 01 22T14 49 51 388 01 00

      relationships
        user
          data
            id   2
            type   users





      id   1
      type   offers
      attributes
        city   Chur
        country   Schweiz
        zip   7000
        workPlaceLat  47 35874829999999
        workPlaceLng  8 551713899999982
        chosenTimes

            from   2017 02 02T18 00 00 000Z   to   2017 02 02T21 00 00 000Z


        offerText   Bringen Sie ihr Fahrrad um 18 00 vorbei
        answers
        createdAt   2017 01 22T14 49 53 848 01 00
        archivedAt   2017 01 22T14 49 53 848 01 00
        cost
          currency   chf
          work
            duration  120
            hourlyRate  8000
            calculatedHourlyRate
              feeRate  0 2
              fee  1275
              costExcludingFee  5125
              costIncludingFee  6400


          items
            description   Description
            price  3000
            amount  1
            calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
            totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

          totals
            items   fee  0  costExcludingFee  0  costIncludingFee  0
            work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
            subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
            talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
            lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
            payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02



      relationships
        talent
          data
            id   28
            type   talents


        work
          data
            id   2
            type   works


        user
          data
            id   2
            type   users


        contract
          data
            id   1
            type   contracts


        declinedOffer
          data  null

        workFlow
          data
            id   2
            type   workFlows





      id   2
      type   works
      attributes
        title   Ich brauche ein neues Rad fÃ¼r mein Fahrrad
        description   Als ich mit meinem Rad stÃ¼rzte  verbog sich das Rad meines Fahrrads
        public  true
        category  null
        subcategory  null
        timeSuggestions
           from   2017 02 01T18 00 00 000Z   to   2017 02 01T21 00 00 000Z
           from   2017 02 02T18 00 00 000Z   to   2017 02 02T21 00 00 000Z
           from   2017 02 03T18 00 00 000Z   to   2017 02 03T21 00 00 000Z
           from   2017 02 04T18 00 00 000Z   to   2017 02 04T21 00 00 000Z
           from   2017 02 05T18 00 00 000Z   to   2017 02 05T21 00 00 000Z

        questions
        files
           https   cdn pixabay com photo 2016 02 28 15 51 bike 1227145 1280 jpg

        zip   8052
        city   ZÃ¼rich
        createdAt   2017 01 22T14 49 51 735 01 00
        country   Schweiz
        estimatedWorkMinutes  300
        status   running

      relationships
        subcategory
          data
            id   12
            type   subcategories


        category
          data
            id   1
            type   categories


        user
          data
            id   2
            type   users




    talentMockDataJSON
    userMockJSON 44
    userMockJSON 2


import   CostApiObject  CostApiObjectCreateRequest  CostApiObjectShowResponse   from     endpoints cost api interface

export const costMockJSON  CostApiObject
  id   1
  type   costCalculations
  attributes
    cost
      currency   chf
      work
        duration  420
        hourlyRate  8000
        calculatedHourlyRate
          feeRate  0 2
          fee  1275
          costExcludingFee  5125
          costIncludingFee  6400


      items
        description   Description
        price  3000
        amount  1
        calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
        totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

      totals
        items   fee  0  costExcludingFee  0  costIncludingFee  0
        work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
        lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
        payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02





export const costShowMockDataJSON  CostApiObjectShowResponse
  data  costMockJSON


export const costCreateMockDataJSON  CostApiObjectCreateRequest
  data
    type   costCalculations
    attributes
      cost
        work
          duration  150
          hourlyRate  5000

        items

            description   Fahrradkette
            price  2000
            amount  1


            description   Bremsen
            price  3250
            amount  2






import   DeclinedInvitationApiObject   from     endpoints declined invitation api interface

export const declinedInvitationMockDataJSON  DeclinedInvitationApiObject
  id   3
  type   declinedInvitations
  attributes
    createdAt   2017 06 29T17 25 12 078 02 00
    declinedBy   customer

  relationships
    workInvitation
      data
        id   20
        type   workInvitations


    work
      data
        id   76
        type   works


    workFlow
      data
        id   115
        type   workFlows


    talent
      data
        id   28
        type   talents


    user
      data
        id   44
        type   users




import
  DeclinedOfferApiObject
  DeclinedOfferApiObjectShowResponse
  from     endpoints declined offer api interface
import   talentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data
import   workMockJSON   from    works api mock data

export const declinedOfferMockDataJSON  DeclinedOfferApiObject
  id   1
  type   declinedOffers
  attributes
    reason   to expensive
    createdAt   2017 01 22T14 49 53 988 01 00
    declinedBy   customer

  relationships
    offer
      data
        id   1
        type   offers


    work
      data
        id   2
        type   works


    talent
      data
        id   28
        type   talents


    user
      data
        id   2
        type   users


    workFlow
      data
        id   2
        type   workFlows





export const declinedOfferShowMockDataJSON  DeclinedOfferApiObjectShowResponse
  data  declinedOfferMockDataJSON
  included

      id   1
      type   offers
      attributes
        city   Chur
        country   Schweiz
        zip   7000
        workPlaceLat  47 35874829999999
        workPlaceLng  8 551713899999982
        chosenTimes

            from   2017 02 02T18 00 00 000Z   to   2017 02 02T21 00 00 000Z


        offerText   Bringen Sie ihr Fahrrad um 18 00 vorbei
        answers
        createdAt   2017 01 22T14 49 53 848 01 00
        archivedAt   2017 01 22T14 49 53 848 01 00
        cost
          currency   chf
          work
            duration  120
            hourlyRate  8000
            calculatedHourlyRate
              feeRate  0 2
              fee  1275
              costExcludingFee  5125
              costIncludingFee  6400


          items
            description   Description
            price  3000
            amount  1
            calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
            totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

          totals
            items   fee  0  costExcludingFee  0  costIncludingFee  0
            work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
            subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
            talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
            lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
            payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02



      relationships
        talent
          data
            id   28
            type   talents


        work
          data
            id   2
            type   works


        user
          data
            id   2
            type   users


        contract
          data
            id   1
            type   contracts


        declinedOffer
          data  null

        workFlow
          data
            id   2
            type   workFlows




    workMockJSON
    talentMockDataJSON
    userMockJSON 44
    userMockJSON 2


import   PendingWorkApiIndexResponse  PendingWorkApiObject  PendingWorkApiObjectShowResponse   from     endpoints work api interface
import   categoryMockDataJSON   from    category api service mock data
import   subcategoryMockDataJSON   from    subcategory api service mock data
import   userMockJSON   from    user api service mock data

export function draftWorkMockJSON id  number   PendingWorkApiObject
  return
    id  id toString
    type   pendingWorks
    attributes
      title   My work
      description   My description
      public  false
      timeSuggestions
      questions
      files
      category  null
      subcategory  null
      zip   8005
      city   ZÃ¼rich
      createdAt   2017 06 27T14 40 01 242 02 00
      country   Schweiz
      estimatedWorkMinutes  60
      status   draft
      offersCount  2
      chosenTime

    relationships
      subcategory
        data
          id   1
          type   subcategories


      category
        data
          id   23
          type   categories


      user
        data
          id   44
          type   users


      workInvitations
        data

      offers
        data
          id   44
          type   offers


      contracts
        data
          id   44
          type   contracts


      bills
        data
          id   44
          type   bills


      receipts
        data
          id   44
          type   receipts


      declinedInvitations
        data

      declinedOffers
        data





export const draftWorkMockDataJSON  PendingWorkApiIndexResponse
  data   draftWorkMockJSON 30   draftWorkMockJSON 31
  included
    subcategoryMockDataJSON 1  3
    categoryMockDataJSON
    userMockJSON 44



export const draftWorkMockDataShowJSON  PendingWorkApiObjectShowResponse
  data  draftWorkMockJSON 30
  included
    subcategoryMockDataJSON 1  3
    categoryMockDataJSON
    userMockJSON 44


import   LinkUrlApiObject  LinkUrlApiObjectIndexResponse   from     endpoints link url api interface

export const linkUrlMockJSON  LinkUrlApiObject
  id   linkurl
  type   linkUrls
  attributes
    linkUrl   xyz



export const linkUrlIndexMockDataJSON  LinkUrlApiObjectIndexResponse
  data  linkUrlMockJSON

import   MessageApiObject  MessageApiObjectAttributes  MessageApiObjectCreateRequest   from     endpoints message api interface

export const messageMockJSON  MessageApiObject
  id   1
  type   messages
  attributes
    message   blubedi blub
    chatHash   xyz



export const messageCreateMockDataJSON  MessageApiObjectCreateRequest
  data
    type   messages
    attributes
      message   blubedi blub
      chatHash   xyz




export const messageCreateMockDataAttributesJSON  MessageApiObjectAttributes
  message   blubedi blub
  chatHash   xyz

import
  DailySummarySendingInterval
  EventNotificationSettings  NotificationSettings  NotificationSettingsApiObject  NotificationSettingsApiObjectCreateRequest
  WorkSuggestionsSendingInterval
  from     endpoints notification settings api interface

export const eventNotificationSettingsMockData  EventNotificationSettings
  newInvitation   email  false  sms  false  push  true
  newOffer   email  true  sms  false  push  true
  customerDeclinedOffer   email  false  sms  false  push  true
  newContract   email  true  sms  false  push  true
  newBill   email  false  sms  false  push  true
  billPaid   email  true  sms  false  push  true
  billReminder   email  false  sms  false  push  true
  newMessage   email  true  sms  false  push  true
  workStartReminder   email  true  sms  false  push  true


export const customNotificationsSettingsMockData
  dailySummary
    interval   DailySummarySendingInterval   daily

  workSuggestions
    subcategories   1  3  5
    interval   WorkSuggestionsSendingInterval   daily
    email  true
    sms  false
    push  true



export const notificationSettingsCreateMockDataJSON  NotificationSettingsApiObjectCreateRequest
  data
    type   notificationSettings
    attributes
      notification settings
        event notifications  eventNotificationSettingsMockData
        custom notifications  customNotificationsSettingsMockData





export const notificationSettingsDataMockJSON  NotificationSettings
  eventNotifications  eventNotificationSettingsMockData
  customNotifications  customNotificationsSettingsMockData


export const notificationSettingsMockJSON  NotificationSettingsApiObject
  id   1
  type   notificationSettings
  attributes
    notificationSettings  notificationSettingsDataMockJSON


import   OfferApiObject  OfferApiObjectIndexResponse  OfferApiObjectShowResponse   from     endpoints offer api interface
import   talentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data
import   workMockJSON   from    works api mock data

export const offerMockDataJson  OfferApiObject
  id   1
  type   offers
  attributes
    city   Chur
    country   Schweiz
    zip   7000
    workPlaceLat  47 35874829999999
    workPlaceLng  8 551713899999982
    chosenTimes    from   2017 02 02T17 00 00 000Z   to   2017 02 02T20 00 00 000Z
    offerText   Bringen Sie ihr Fahrrad um 18 00 vorbei
    answers    question   Erste Frage   answer   Erste Antwort     question   Zweite Frage   answer   Zweite Antwort
    createdAt   2017 01 21T19 33 24 416 01 00
    archivedAt   2017 01 23T14 49 53 814 01 00
    cost
      currency   chf
      work
        duration  120
        hourlyRate  8000
        calculatedHourlyRate
          feeRate  0 2
          fee  1275
          costExcludingFee  5125
          costIncludingFee  6400


      items
        description   Description
        price  3000
        amount  1
        calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
        totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

      totals
        items   fee  0  costExcludingFee  0  costIncludingFee  0
        work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
        talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
        lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
        payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02



  relationships
    talent
      data
        id   28
        type   talents


    work
      data
        id   2
        type   works


    user
      data
        id   2
        type   users


    contract
      data
        id   1
        type   contracts


    declinedOffer
      data  null

    workFlow
      data
        id   2
        type   workFlows





export const offerShowMockDataJSON  OfferApiObjectShowResponse
  data  offerMockDataJson
  included
    userMockJSON 44      relation to talents user
    talentMockDataJSON
    userMockJSON 2      customer
    workMockJSON



export const offerIndexMockDataJSON  OfferApiObjectIndexResponse
  data   offerMockDataJson
  included
    userMockJSON 44      relation to talents user
    talentMockDataJSON
    userMockJSON 2      customer
    workMockJSON


import
  PaymentMethodsApiCreateResponse
  PaymentMethodsApiIndexResponse
  PaymentMethodsApiObject
  from     endpoints payment methods api interface

export function paymentMethodMockDataJSON id  string   PaymentMethodsApiObject
  return
    id
    type   paymentPaymentMethods
    attributes
      stripeCustomerId   cus 9tjEI9fZK14dn6
      visibleInProfile  true
      creditCardDetails
        id   card 19ZvlyBdMN3eV9TW7n7zJL7s
        object   card
        addressCity  null
        addressCountry  null
        addressLine1  null
        addressLine1Check  null
        addressLine2  null
        addressState  null
        addressZip  null
        addressZipCheck  null
        brand   Visa
        country   US
        customer   cus 9tjEI9fZK14dn6
        cvcCheck   pass
        dynamicLast4  null
        expMonth  9
        expYear  2019
        fingerprint   6zmi6vvkpHqXGx2j
        funding   credit
        last4   4242
        metadata
        name   test example com
        tokenizationMethod  null

      createdAt   2017 01 09T06 32 50 225 01 00

    relationships
      user
        data
          id   1
          type   users






export const paymentMethodCreateMockDataJSON  PaymentMethodsApiCreateResponse
  data  paymentMethodMockDataJSON  74


export const paymentMethodIndexMockDataJSON  PaymentMethodsApiIndexResponse
  data   paymentMethodMockDataJSON  15    paymentMethodMockDataJSON  20

import   PendingWorkApiIndexResponse  PendingWorkApiObject  PendingWorkApiObjectShowResponse   from     endpoints work api interface
import   categoryMockDataJSON   from    category api service mock data
import   subcategoryMockDataJSON   from    subcategory api service mock data
import   userMockJSON   from    user api service mock data

export function pendingWorkMockJSON id  number   PendingWorkApiObject
  return
    id  id toString
    type   pendingWorks
    attributes
      title   My work
      description   My description
      public  false
      timeSuggestions
      questions
      files
      category  null
      subcategory  null
      zip   8005
      city   ZÃ¼rich
      createdAt   2017 06 27T14 40 01 242 02 00
      country   Schweiz
      estimatedWorkMinutes  60
      status   offering
      offersCount  2
      chosenTime

    relationships
      subcategory
        data
          id   1
          type   subcategories


      category
        data
          id   23
          type   categories


      user
        data
          id   44
          type   users


      workInvitations
        data

      offers
        data
          id   44
          type   offers


      contracts
        data
          id   44
          type   contracts


      bills
        data
          id   44
          type   bills


      receipts
        data
          id   44
          type   receipts


      declinedInvitations
        data

      declinedOffers
        data





export const pendingWorkMockDataJSON  PendingWorkApiIndexResponse
  data   pendingWorkMockJSON 30   pendingWorkMockJSON 31
  included
    subcategoryMockDataJSON 1  3
    categoryMockDataJSON
    userMockJSON 44



export const pendingWorkMockDataShowJSON  PendingWorkApiObjectShowResponse
  data  pendingWorkMockJSON 30
  included
    subcategoryMockDataJSON 1  3
    categoryMockDataJSON
    userMockJSON 44


import
  ReceiptApiObject
  ReceiptApiObjectIncludedType
  ReceiptApiObjectIndexResponse
  ReceiptApiObjectShowResponse
  from     endpoints receipt api interface
import   contractMockDataJSON   from    contract api service mock data
import   offerMockDataJson   from    offer api service mock data
import   userMockJSON   from    user api service mock data
import   workMockJSON   from    works api mock data

export const receiptMockJSON  ReceiptApiObject
  id   1
  type   receipts
  attributes
    createdAt   2017 01 23T16 50 34 982 01 00
    archivedAt   2017 01 24T16 50 34 982 01 00

  relationships
    bill
      data
        id   12
        type   bills


    contract
      data
        id   2
        type   contracts


    offer
      data
        id   3
        type   offers


    work
      data
        id   4
        type   works


    talent
      data
        id   28
        type   talents


    user
      data
        id   44
        type   users


    workFlow
      data
        id   2
        type   workFlows





const receiptIncludedMockDataJSON  ReceiptApiObjectIncludedType

    id   12
    type   bills
    attributes
      cost
        currency   chf
        work
          duration  120
          hourlyRate  8000
          calculatedHourlyRate
            feeRate  0 2
            fee  1275
            costExcludingFee  5125
            costIncludingFee  6400


        items
          description   Description
          price  3000
          amount  1
          calculatedPrice   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0
          totals   feeRate  0 2  fee  0  costExcludingFee  0  costIncludingFee  0

        totals
          items   fee  0  costExcludingFee  0  costIncludingFee  0
          work   fee  3200  costExcludingFee  16000  costIncludingFee  19200
          subtotal   fee  3200  costExcludingFee  16000  costIncludingFee  19200
          talentVat   vatRate  0 08  vatNumber   CHE 456 433 322   vat  605
          lawoon   workServiceFee  0 2  itemServiceFee  0 2  fee  1505  vatRate  0 08  vat  120  vatNumber   CHE 492 117 729
          payment   customer  8145  talent  6520  lawoon  1625  actualFeeRate  0 02


      createdAt   2017 01 23T16 50 34 920 01 00
      archivedAt   2017 01 23T16 50 34 982 01 00

    relationships
      paymentMethod
        data
          id   6
          type   paymentPaymentMethods


      contract
        data
          id   2
          type   contracts


      offer
        data
          id   3
          type   offers


      work
        data
          id   4
          type   works


      talent
        data
          id   28
          type   talents


      user
        data
          id   4
          type   users


      receipt
        data
          id   1
          type   receipts


      workFlow
        data
          id   2
          type   workFlows




  contractMockDataJSON
  offerMockDataJson
  workMockJSON

    id   28
    type   talents
    attributes
      profilePictureUrl   https   randomuser me api portraits men 28 jpg
      serviceTitle   Fahrradmechaniker
      serviceDescription   flicken  reparieren
      about   Ich repariere Ihr Fahrrad
      professionalExperience   Abschluss des Fahrradmechaniker EFZ
      projectPortfolio
      netHourlyRate   80 0
      rating   2 866666666666666667
      ratingQuantity  15
      isProfessional  true
      visible  false
      education
      zip   8032
      city   ZÃ¼rich
      address   Sonnenbergstrasse 123
      country   Schweiz
      mobileNumber    41 78 611 78 60

    relationships
      user
        data
          id   44
          type   users




  userMockJSON 44

    id   6
    type   users
    attributes
      firstName   Donald
      lastName   Wunsch
      email   donald example com
      zip   8032
      city   ZÃ¼rich
      address   Sonnenbergstrasse 123
      country   Schweiz
      phoneNumber    41 29 785 66 64
      admin  false
      customer  true
      language   de CH
      hasApp  false




export const receiptIndexMockDataJSON  ReceiptApiObjectIndexResponse
  data   receiptMockJSON
  included  receiptIncludedMockDataJSON


export const receiptShowMockDataJSON  ReceiptApiObjectShowResponse
  data  receiptMockJSON
  included  receiptIncludedMockDataJSON

import   SubcategoryApiObject  SubcategoryApiObjectShowResponse   from     endpoints subcategory api interface

export function subcategoryMockDataJSON id  number  categoryId  number   SubcategoryApiObject
  return
    id  id toString
    type   subcategories
    attributes
      name   Automechaniker   Carrosserie   Lack

    relationships

      category
        data
          id  categoryId toString
          type   categories






export const subcategoryShowMockDataJSON  SubcategoryApiObjectShowResponse
  data  subcategoryMockDataJSON 1  1

import
  PublicTalentApiIndexResponse
  PublicTalentApiObject
  PublicTalentApiShowResponse
  TalentApiObject
  TalentUserApiIndexResponse
  TalentUserApiObject
  from     endpoints talent api interface
import   userMockJSON   from    user api service mock data

export const publicTalentMockDataJSON  PublicTalentApiObject
  id   1
  type   talents
  attributes
    about   Ich designe Ihre Webseite und implementiere auch das Design  Auch Implementationen von schon vorhandenem Design sind mÃ¶glich
    city   ZÃ¼rich
    country   Schweiz
    education
    isProfessional  true
    serviceTitle   Mediamatik und Webdesign
    serviceDescription   programmieren  designen  konzeptionierne
    netHourlyRate   120 0
    professionalExperience   Nach Abschluss meiner Lehre als Mediamatiker
    profilePictureUrl   https   randomuser me api portraits women 1 jpg
    projectPortfolio
    rating  0
    ratingQuantity  0
    zip   8053

  relationships
    user
      data
        id   71
        type   users





export const talentMockDataJSON  TalentApiObject
  id   28
  type   talents
  attributes
    profilePictureUrl   https   randomuser me api portraits men 28 jpg
    serviceTitle   Fahrradmechaniker
    serviceDescription   flicken  reparieren
    about   Ich repariere Ihr Fahrrad
    professionalExperience   Abschluss des Fahrradmechaniker EFZ
    projectPortfolio
    netHourlyRate   80 0
    rating   2 866666666666666667
    ratingQuantity  15
    isProfessional  true
    visible  false
    education
    mobileNumber    41797775544
    zip   8053
    city   ZÃ¼rich
    address   Oetlisbergstrasse 60a
    country   Schweiz

  relationships
    user
      data
        id   44
        type   users





export const publicTalentIndexMockDataJson  PublicTalentApiIndexResponse
  data   publicTalentMockDataJSON
  included   userMockJSON 44
  links
    self   http   lawoon api localhost 3001 v1 talents page 5Bnumber 5D 1 u0026page 5Bsize 5D 25
    next   http   lawoon api localhost 3001 v1 talents page 5Bnumber 5D 2 u0026page 5Bsize 5D 25
    last   http   lawoon api localhost 3001 v1 talents page 5Bnumber 5D 3 u0026page 5Bsize 5D 25

  meta
    currentPage  1
    nextPage  2
    prevPage  null
    totalPages  3
    totalCount  52



export const publicTalentShowMockDataJson  PublicTalentApiShowResponse
  data  publicTalentMockDataJSON
  included   userMockJSON 44


export const talentUserApiObject  TalentUserApiObject
  id   28
  type   talents
  attributes
    profilePictureUrl   https   randomuser me api portraits men 28 jpg
    serviceTitle   Fahrradmechaniker
    serviceDescription   flicken  reparieren
    companyName   Wunsch Bike
    companyUidRegisterNumber   CHE 409 950 039
    website   google com
    about   Ich repariere Ihr Fahrrad
    professionalExperience   Abschluss des Fahrradmechaniker EFZ
    projectPortfolio
    netHourlyRate   80 0
    mobileNumber    41 79 777 55 44
    vatRate   0 08
    vatNumber   CHE 101 010 101 MWST
    latitude  47 37156
    longitude  8 57031
    rating   2 866666666666666667
    ratingQuantity  15
    education
    isProfessional  true
    visible  false
    isConnectedToTalentBankAccount  false
    iban  null
    accountHolderName  null
    zip   8053
    city   ZÃ¼rich
    address   Oetlisbergstrasse 60a
    country   Schweiz

  relationships
    user
      data
        id   44
        type   users


    subcategory
      data
        id   1
        type   subcategories





   the talents profile data
export const talentUserApiIndexResponse  TalentUserApiIndexResponse
  data  talentUserApiObject
  included
    userMockJSON 44

      id   1
      type   subcategories
      attributes   name   cool subcategory
      relationships   category   data   id   1   type   categories



import   TalentRatingApiObject  TalentRatingApiObjectIndexResponse   from     endpoints talent rating api interface
import   publicUserMockJSON   from    user api service mock data

export const talentRatingMockJSON  TalentRatingApiObject
  id   4
  type   talentRatings
  attributes
    value  3
    comment   Es war super
    createdAt   2017 01 21T19 33 21 742 01 00

  relationships
    user
      data
        id   6
        type   users





export const talentRatingArrayMockDataJSON  TalentRatingApiObjectIndexResponse
  data
    talentRatingMockJSON
    talentRatingMockJSON

  included
    publicUserMockJSON 6
    publicUserMockJSON 4


import
  PublicUserApiObject  UserApiObject  UserApiObjectIndexResponse
  UserApiObjectShowResponse
  from     endpoints user api interface

export function userMockJSON id  number   UserApiObject
  return
    id  id toString
    type   users
    attributes
      firstName   Donald
      lastName   Wunsch
      email   donald example com
      zip   8032
      city   ZÃ¼rich
      address   Sonnenbergstrasse 123
      country   Schweiz
      phoneNumber    41 29 785 66 64
      admin  true
      customer  true
      language   de CH
      hasApp  false




export function publicUserMockJSON id  number   PublicUserApiObject
  return
    id  id toString
    type   users
    attributes
      firstName   Donald
      lastName   Wunsch
      zip   8032
      city   ZÃ¼rich
      country   Schweiz




export const userMockDataJSON  UserApiObjectShowResponse
  data  userMockJSON 44


export const userIndexMockDataJSON  UserApiObjectIndexResponse
  data   userMockJSON 44

import
  WorkFlowApiObject
  WorkFlowApiObjectIncludedType
  WorkFlowApiObjectIndexResponse
  WorkFlowApiObjectShowResponse
  from     endpoints work flow api interface
import   offerMockDataJson   from    offer api service mock data
import   talentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data
import   workMockJSON   from    works api mock data

export const workFlowMockJSON  WorkFlowApiObject
  id   4
  type   workFlows
  attributes
    latestType   Offer
    latestId  6

  relationships
    offer
      data
        id   1
        type   offers


    work
      data
        id   2
        type   works


    talent
      data
        id   2
        type   talents


    user
      data
        id   44
        type   users





const workFlowIncludedMockDataJSON  WorkFlowApiObjectIncludedType
  offerMockDataJson
  workMockJSON
  talentMockDataJSON
  userMockJSON 44


export const workFlowIndexMockDataJSON  WorkFlowApiObjectIndexResponse
  data   workFlowMockJSON
  included  workFlowIncludedMockDataJSON


export const workFlowShowMockDataJSON  WorkFlowApiObjectShowResponse
  data  workFlowMockJSON
  included  workFlowIncludedMockDataJSON

import
  WorkInvitationApiObject  WorkInvitationApiObjectDeleteResponse
  WorkInvitationApiObjectShowResponse
  from     endpoints work invitation api interface
import   declinedInvitationMockDataJSON   from    declined invitation api service mock data
import   publicTalentMockDataJSON   from    talent api service mock data
import   userMockJSON   from    user api service mock data

export const workInvitationMockDataJSON  WorkInvitationApiObject
  id   21
  type   workInvitations
  attributes
    createdAt   2017 09 18T17 26 51 737 02 00
    archivedAt  null

  relationships
    work
      data
        id   77
        type   works


    talent
      data
        id   28
        type   talents


    declinedInvitation
      data  null




export const workInvitationShowResponse  WorkInvitationApiObjectShowResponse
  data  workInvitationMockDataJSON
  included   publicTalentMockDataJSON  userMockJSON 71


export const declinedWorkInvitationMockDataJSON  WorkInvitationApiObjectDeleteResponse
  data
    id   21
    type   workInvitations
    attributes
      createdAt   2017 09 18T17 26 51 737 02 00
      archivedAt  null

    relationships
      work
        data
          id   77
          type   works


      talent
        data
          id   28
          type   talents


      declinedInvitation
        data
          id   3
          type   declinedInvitations




  included   declinedInvitationMockDataJSON  publicTalentMockDataJSON  userMockJSON 71

import
  WorkApiObject  WorkApiObjectCreateRequest  WorkApiObjectCreateResponse  WorkApiObjectIndexResponse  WorkApiObjectShowResponse
  WorkApiObjectUpdateRequest
  from     endpoints work api interface
import   categoryMockDataJSON   from    category api service mock data
import   subcategoryMockDataJSON   from    subcategory api service mock data
import   publicUserMockJSON   from    user api service mock data

export const workMockJSON  WorkApiObject
  id   4
  type   works
  attributes
    title   Ich mÃ¶chte einen Kontrollservice fÃ¼r mein Fahrrad
    description   Ich mÃ¶chte einfach sicher gehen  dass bei meinem Fahrrad alles gut ist
    public  true
    timeSuggestions
       from   2017 01 22T07 11 01 000Z   to   2017 01 22T16 02 22 000Z
       from   2017 01 27T11 00 45 000Z   to   2017 01 27T13 16 45 000Z

    questions
      question   Wie fÃ¼hren Sie eine solche Kontrolle durch

      question   Schaffen Sie es vor MÃ¤rz fertig zu sein

    files    https   placehold it 300x300 png    https   placehold it 300x300 png
    zip   8052
    city   ZÃ¼rich
    createdAt   2017 01 21T19 33 21 742 01 00
    country   Schweiz
    category  null
    subcategory  null
    address   Industriestrasse
    workPlaceLat  45 0
    workPlaceLng  37 0
    estimatedWorkMinutes  300
    status   offering

  relationships
    user
      data
        id   6
        type   users


    subcategory
      data
        id   12
        type   subcategories


    category
      data
        id   23
        type   categories





export function workDraftMockJSON id  number   WorkApiObject
  return
    id  id toString
    type   works
    attributes
         workMockJSON attributes
      status   draft

    relationships
      user
        data
          id   6
          type   users


      subcategory
        data
          id   12
          type   subcategories


      category
        data
          id   23
          type   categories






export const workUpdateMockDataJSON  WorkApiObjectUpdateRequest
  data
    type   works
    attributes
      address   Dufourstrasse
      description   adfa
      files
      public  false
      status   draft
      questions
      subcategory id  20
      time suggestions
      title   adsf
      work place lat  47 35874829999999
      work place lng  8 551713899999982
      city   ZÃ¼rich
      country   Schweiz
      zip   8008
      estimated work minutes  210




export const workCreateMockDataJSON  WorkApiObjectCreateRequest
  data
    type   works
    attributes
         workUpdateMockDataJSON data attributes
      talents   1  2  3




export const publicWorkShowMockDataJSON  WorkApiObjectShowResponse
  data  workMockJSON
  included
    categoryMockDataJSON
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6



export const publicWorkCreateMockDataJSON  WorkApiObjectCreateResponse
  data  workMockJSON
  included
    categoryMockDataJSON
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6



export const publicWorkIndexMockDataJSON  WorkApiObjectIndexResponse
  data   workMockJSON  workMockJSON
  included
    categoryMockDataJSON
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6



export const draftWorkIndexMockDataJSON  WorkApiObjectIndexResponse
  data   workDraftMockJSON 5   workDraftMockJSON 6
  included
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6



export const draftWorkShowMockDataJSON  WorkApiObjectShowResponse
  data  workDraftMockJSON 7
  included
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6



export const draftWorkCreateMockDataJSON  WorkApiObjectCreateResponse
  data  workDraftMockJSON 7
  included
    subcategoryMockDataJSON 23  1
    publicUserMockJSON 6


import   Injectable   from   angular core
import   Headers  Response  ResponseOptions   from   angular http
import   Angular2TokenOptions   from  angular2 token angular2 token model
import   Observable   from  rxjs Observable

 Injectable
export class Angular2TokenServiceMock
  lastMethod   get     post     delete     patch     validateToken     userSignedIn
  lastPath  string
  lastData  any

  private response  Response

  constructor
    this mockResponse  mock


  init  options   Angular2TokenOptions   void   return

  get path  string   Observable Response
    this lastPath   path
    this lastMethod    get
    return Observable of this response


  post path  string  data  any   Observable Response
    this lastPath   path
    this lastData   data
    this lastMethod    post
    return Observable of this response


  patch path  string  data  any   Observable Response
    this lastPath   path
    this lastData   data
    this lastMethod    patch
    return Observable of this response


  delete path  string   Observable Response
    this lastPath   path
    this lastMethod    delete
    return Observable of this response


  validateToken    Observable Response
    this lastMethod    validateToken
    return Observable of this response


  userSignedIn    boolean
    this lastMethod    userSignedIn
    return true


  signIn

  registerAccount

  signOut

  updatePassword

  resetPassword

  mockResponse body  any  status  number   200
    const headers  Headers   new Headers
    this response   new Response new ResponseOptions  status  body  headers


import   IncludesSorter   from    includes sorter

describe  IncludesSorter
  describe  sort
    const obj1    name   obj1   type   type 1
    const obj2    name   obj2   type   type 2
    const obj3    name   obj3   type   type 3
    const obj4    name   obj4   type   type 1
    const obj5    name   obj5   type   type 2
    const obj6    name   obj6   type   type 3

    it  accepts an array of included objects which have at least a type and an array of a type order
      expect new IncludesSorter  any   obj1  obj2  obj3  obj4  obj5  obj6     type 1    type 3    type 2    sort
         toEqual  any   obj1  obj4  obj3  obj6  obj2  obj5
      expect new IncludesSorter  any   obj5  obj6  obj3  obj4  obj1  obj2     type 2    type 1    type 3    sort
         toEqual  any   obj5  obj2  obj4  obj1  obj6  obj3


    it  puts objects not in the sort order definition to the back
      const obj    type   type 4
      expect new IncludesSorter  any   obj1  obj2  obj     type 1    type 3    type 2    sort
         toEqual  any   obj1  obj2  obj
      expect new IncludesSorter  any   obj1  obj2  obj     type 2    type 3    type 1    sort
         toEqual  any   obj2  obj1  obj



import   ApiResponseObject   from     api types
import   modelMappingsSortStrategy   from     mappings

export class IncludesSorter
  constructor private includedObjectArray  ApiResponseObject    private typeOrder  string     modelMappingsSortStrategy

  sort    ApiResponseObject
    return this includedObjectArray sort  a  b     this sortIndex a    this sortIndex b


  private sortIndex includedObject  ApiResponseObject
    const sortIndex   this typeOrder indexOf includedObject type
    return sortIndex      1   this typeOrder length   sortIndex


import   Injectable   from   angular core
import   Headers  RequestOptionsArgs  Response  ResponseOptions   from   angular http
import   Angular2TokenOptions   from  angular2 token angular2 token model
import   Observable   from  rxjs Observable
import   LawoonHttp   from    lawoon http service

 Injectable
export class LawoonHttpMock
  static getProviders
    return  provide  LawoonHttp  useClass  this


  lastMethod   get     post     delete     patch
  lastData  any
  lastPath  string

  private response  Response

  constructor
    this mockResponse  mock


  init  options   Angular2TokenOptions   void   return

  get path  string  options   RequestOptionsArgs   Observable Response
    this checkPath path
    this lastMethod    get
    this lastPath   path
    this lastData   options
    return Observable of this response


  post path  string  data  any   Observable Response
    this checkPath path
    this lastMethod    post
    this lastPath   path
    this lastData   data
    return Observable of this response


  patch path  string  data  any   Observable Response
    this lastMethod    patch
    this lastPath   path
    this lastData   data
    return Observable of this response


  delete path  string
    this checkPath path
    this lastMethod    delete
    this lastPath   path
    return Observable of this response


  mockResponse body  any  status  number   200
    const headers  Headers   new Headers
    this response   new Response new ResponseOptions  status  body  headers


  private checkPath path  string
    if  path startsWith         path includes  v1
      throw new Error  your path must not start with   and must not include v1



import   Headers  Response  ResponseOptions   from   angular http
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   LawoonHttp   from    lawoon http service

describe  LawoonHttp
  let service  LawoonHttp
  let tokenService  any
  let router  any

  function mockResponse body  any  status  number   200
    const headers  Headers   new Headers
    return Observable of new Response new ResponseOptions  status  body  headers


  beforeEach
    tokenService   jasmine createSpyObj  tokenService     init    get    post    patch    delete
    router   jasmine createSpyObj  router     navigateByUrl
    service   new LawoonHttp tokenService  router


  describe  get
    it  creates a get request and appends options   done
      tokenService get and returnValue mockResponse  MockGet
      const options    params   test
      service get  some path   options  subscribe response
        expect response text    toEqual  MockGet
        expect response status  toEqual 200
        done

      expect tokenService get  toHaveBeenCalledWith  v1 some path   options


    describe  if not authorized
      beforeEach
        tokenService get and returnValue Observable throw  any   status  403


      it  redirets to forbidden page   done
        service get  some path   subscribe
          expect tokenService get  toHaveBeenCalledWith  v1 some path   undefined
          expect router navigateByUrl  toHaveBeenCalledWith   403
          done



      it  throws a checked error exception
        tokenService get and returnValue Observable throw  any   status  403
        expect         service get  some path   subscribe               toThrow new Error  CheckedError



    describe  if page not found
      it  redirects to not found page    done
        tokenService get and returnValue Observable throw  any   status  404
        service get  some path   subscribe
          expect tokenService get  toHaveBeenCalledWith  v1 some path   undefined
          expect router navigateByUrl  toHaveBeenCalledWith   404
          done



      it  throws a checked error exception
        tokenService get and returnValue Observable throw  any   status  404
        expect         service get  some path   subscribe               toThrow new Error  CheckedError




  describe  post
    it  creates a post request   done
      tokenService post and returnValue mockResponse  MockPost
      service post  some path    x   y    subscribe response
        expect response text    toEqual  MockPost
        expect response status  toEqual 200
        done

      expect tokenService post  toHaveBeenCalledWith  v1 some path    x   y



  describe  patch
    it  creates a patch request   done
      tokenService patch and returnValue mockResponse  MockPatch
      service patch  some path    x   y    subscribe response
        expect response text    toEqual  MockPatch
        expect response status  toEqual 200
        done

      expect tokenService patch  toHaveBeenCalledWith  v1 some path    x   y



  describe  delete
    it  creates a delete request   done
      tokenService delete and returnValue mockResponse  MockDelete
      service delete  some path   subscribe response
        expect response text    toEqual  MockDelete
        expect response status  toEqual 200
        done

      expect tokenService delete  toHaveBeenCalledWith  v1 some path



import   Injectable   from   angular core
import   RequestOptionsArgs  Response   from   angular http
import   Router   from   angular router
import   Angular2TokenService   from  angular2 token
import  rxjs add observable throw
import  rxjs add operator catch
import   Observable   from  rxjs Observable
import   AppSettings   from        app settings

 Injectable
export class LawoonHttp
  constructor private authorizedHttp  Angular2TokenService  private router  Router
    authorizedHttp init
      apiPath  AppSettings BASE BACKEND URL
      updatePasswordPath   auth password
      resetPasswordCallback  AppSettings BASE FRONTEND URL      auth password reset



  get path  string  options   RequestOptionsArgs   Observable Response
    return this authorizedHttp get  v1   path    options  catch error
      if  this isErrorHandled error
        return Observable throw new Error  CheckedError        if we don t throw an error  it does not abort the process
        else
        return Observable throw error




  private isErrorHandled error  Response
    return this handleForbidden error     this handleNotFound error


  private handleForbidden error  Response   boolean
    if  error status     403
      this router navigateByUrl   403
      return true

    return false


  private handleNotFound error  Response   boolean
    if  error status     404
      this router navigateByUrl   404
      return true

    return false


  post path  string  data  any   Observable Response
    return this authorizedHttp post  v1   path    data


  patch path  string  data  any   Observable Response
    return this authorizedHttp patch  v1   path    data


  delete path  string
    return this authorizedHttp delete  v1   path


import   LookupTable   from    lookup table

describe  LookupTable
  it  adds a value
    const table   new LookupTable
    table add  test   30   some
    expect table get  test   30   toEqual  some


  it  gets undefined if no value has been added
    const table   new LookupTable
    expect table get  test   30   toBeUndefined


  it  gets undefined if only the type has been added
    const table   new LookupTable
    table add  test   30   some
    expect table get  test   20   toBeUndefined


  it  adds multiple values
    const table   new LookupTable
    table add  x   30   a
    table add  x   10   b
    table add  y   30   c
    table add  y   10   d
    expect table get  x   30   toEqual  a
    expect table get  x   10   toEqual  b
    expect table get  y   30   toEqual  c
    expect table get  y   10   toEqual  d


export class LookupTable
  readonly table    key  string     id  number   any

  get type  string  id  number   any
    if  this table type     return this table type  id


  add type  string  id  number  value  any
    if   this table type     this table type
    this table type  id    value


import   NgModule   from   angular core
import   NavigationEnd  Router  RouterModule  Routes   from   angular router
import   I18n   from    i18n i18n
import   PageNotFoundComponent   from    page not found page not found component
import   AuthGuardService   from    services auth guard service
import   PendingWorkListResolver   from    services customer dashboard resolvers pending work list resolver
import   WorkFlowListResolver   from    services talent dashboard resolvers work flow list resolver
import   TalentRegistrationGuardService   from    services talent registration guard service
import   WorkStateRedirectService   from    services work state redirect service
import   ArchivedComponent   from    shared dashboard archived component
import   DashboardComponent   from    shared dashboard dashboard component
import   ProfileSettingsComponent   from    shared profile settings profile settings component
import   ReceiptListComponent   from    shared receipt list receipt list component
import   AboutLawoonComponent   from    static pages about lawoon about lawoon component
import   CustomerLandingpageComponent   from    static pages customer landingpage customer landingpage component
import   FaqComponent   from    static pages faq faq component
import   ForbiddenComponent   from    static pages forbidden forbidden component
import   HomeComponent   from    static pages home
import   JobsComponent   from    static pages jobs jobs component
import   PrivacyComponent   from    static pages privacy
import   SiteNoticeComponent   from    static pages site notice
import   TalentLandingpageComponent   from    static pages talent landingpage talent landingpage component
import   TermsComponent   from    static pages terms terms component
import   UnauthorizedComponent   from    static pages unauthorized unauthorized component
import   as TalentProfile from    talent profile
import   DesignExamplesComponent   from    utils design design examples component

export const routes  Routes

    path
    data  I18n t metaData default
    children
       path      component  HomeComponent
       path   design examples   component  DesignExamplesComponent
       path   faq   component  FaqComponent
       path   jobs   component  JobsComponent  data  I18n t metaData jobs
       path   privacy   component  PrivacyComponent
       path   site notice   component  SiteNoticeComponent

        path   dashboard   component  DashboardComponent  canActivate   AuthGuardService
        resolve   works  PendingWorkListResolver  workFlows  WorkFlowListResolver

       path   archived   component  ArchivedComponent  canActivate   AuthGuardService
       path   work flows  id   component  PageNotFoundComponent  canActivate   AuthGuardService  WorkStateRedirectService

        path   talent registration  step   component  TalentProfile TalentProfileCurrentStepComponent
        canActivate   TalentRegistrationGuardService
        canDeactivate   TalentRegistrationGuardService


        path   profile
        canActivate   AuthGuardService
        children
           path      redirectTo   account   pathMatch   full
           path    tab   component  ProfileSettingsComponent



        path   receipts
        canActivate   AuthGuardService
        children
           path      component  ReceiptListComponent


       path   terms   component  TermsComponent
       path   about lawoon   component  AboutLawoonComponent
         Landingpages
       path   create profile   component  TalentLandingpageComponent  data  I18n t metaData talentLandingpage
       path   place a job   component  CustomerLandingpageComponent  data  I18n t metaData customerLandingpage
       path   401   component  UnauthorizedComponent
       path   403   component  ForbiddenComponent
       path        component  PageNotFoundComponent




 NgModule
  imports   RouterModule forRoot routes
  exports   RouterModule

export class AppRoutingModule
  constructor private router  Router
    if   typeof ga       function
      this registerTrackPageview



  private registerTrackPageview
    this router events
       filter event    event instanceof NavigationEnd
       distinctUntilChanged  previousEvent  NavigationEnd  currentEvent  NavigationEnd     previousEvent url     currentEvent url
       subscribe  event  NavigationEnd
        ga  set    page   event url
        ga  send    pageview



import   AppComponent   from    app component

beforeEach
  jasmine addMatchers
    toEqualData
      return
        compare   actual  any  expected  any
             http   stackoverflow com questions 201183 how to determine equality for two javascript objects
             tslint disable next line cyclomatic complexity
          function objectEquals x  any  y  any   any
            if  x     null    x     undefined    y     null    y     undefined    return x     y
            if  x constructor     y constructor    return false
            if  x instanceof Function    return x     y
            if  x instanceof RegExp    return x     y
            if  x     y    x valueOf       y valueOf      return true
            if  Array isArray x     x length     y length    return false
            if  x instanceof Date    return false
            if    x instanceof Object     return false
            if    y instanceof Object     return false

            const p   Object keys x
            return Object keys y  every i    p indexOf i       1
              p every i    objectEquals x i   y i


          return
            pass  objectEquals actual  expected







describe  AppComponent
  let component  AppComponent
  let seoService  any
  let languageService  any
  let scrollToTopService  any

  beforeEach
    languageService   jasmine createSpyObj  languageService     setLocale
    seoService   jasmine createSpyObj  seoService     registerSetMetaDataListener
    scrollToTopService   jasmine createSpyObj  scrollToTopService     registerListener
    component   new AppComponent languageService  seoService  scrollToTopService


  it  sets the locale
    expect languageService setLocale  toHaveBeenCalled


  it  registers the meta data listener
    expect seoService registerSetMetaDataListener  toHaveBeenCalled


  it  registers the scroll to top listener
    expect scrollToTopService registerListener  toHaveBeenCalled


import   Component  ViewEncapsulation   from   angular core
import   LanguageService   from    services language service
import   ScrollToTopService   from    services scroll to top service
import   SEOService   from    services seo service

 Component
  selector   my app
  styleUrls
       scss app scss

  encapsulation  ViewEncapsulation None
  templateUrl   app component html

export class AppComponent
  constructor private languageService  LanguageService  private seoService  SEOService  private scrollToTopService  ScrollToTopService
    this languageService setLocale
    this seoService registerSetMetaDataListener
    this scrollToTopService registerListener


describe  App
  beforeEach
    browser get


     it  should have a title
       const subject   browser getTitle
       expect subject  toEqual  Lawoon


     TODO  Fix tests
     it  should have header
       let subject   element by css   navbar brand    isPresent
       expect subject  toEqual true


     it  should have  home
       let subject   element by css  main home    isPresent
       expect subject  toEqual true


import   AgmCoreModule   from   agm core
import   LAZY MAPS API CONFIG   from   agm core services
import   ErrorHandler  LOCALE ID  NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   BrowserXhr  HttpModule   from   angular http
import   BrowserModule   from   angular platform browser
import   NgxErrorsModule   from   ultimate ngxerrors
import   Angular2TokenService   from  angular2 token
import   AngularFireModule   from  angularfire2
import   AngularFireDatabaseModule   from  angularfire2 database
import   ModalModule   from  ng2 bootstrap modal
import   PaginationModule   from  ng2 bootstrap pagination
import   NgProgressCustomBrowserXhr  NgProgressModule   from  ng2 progressbar
import   ToastyModule   from  ng2 toasty
import   AdminModule   from    admin admin module
import   AdminUsersComponent   from    admin users admin users component
import   AdminWorksComponent   from    admin works admin works component
import   AdminWorksModerateComponent   from    admin works moderate admin works moderate component
import   AdminWorksModerateClientComponent   from    admin works moderate client admin works moderate client component
import   AlertService   from    alerts alerts service
import   AppRoutingModule   from    app routing module
import   AppComponent   from    app component
import   RavenErrorHandler   from    app sentry
import   AuthenticationModule   from    authentication authentication module
import   CategoryService   from    categories shared category service
import   CustomerArchivedWorkListComponent   from    customer archive customer archived work list component
import   CustomerModule   from    customer customer module
import   CustomerReceiptListComponent   from    customer receipt customer receipt list component
import   CustomerWorkListComponent   from    customer work list customer work list component
import   FirebaseConfig   from    firebase config
import   GoogleMapsConfig   from    google maps config
import   PageNotFoundComponent   from    page not found page not found component
import   PaymentModule   from    payment payment module
import   PublicBrowseModule   from    public browse public browse module
import   AdminGuardService   from    services admin guard service
import   AuthGuardService   from    services auth guard service
import   ConnectionService   from    services connection service
import   CostService   from    services cost service
import   PendingWorkListResolver   from    services customer dashboard resolvers pending work list resolver
import   EnrichErrorService   from    services enrich error service
import   GoogleAnalyticsEventsService   from    services google analytics events service
import   LanguageService   from    services language service
import   LinkUrlService   from    services link url service
import   NotificationService   from    services notification service
import   RoleStorageService   from    services role storage service
import   ScrollToTopService   from    services scroll to top service
import   SEOService   from    services seo service
import   SessionService   from    services session service
import   WorkFlowListResolver   from    services talent dashboard resolvers work flow list resolver
import   TalentGuardService   from    services talent guard service
import   TalentRegistrationGuardService   from    services talent registration guard service
import   TalentService   from    services talent service
import   UserSessionService   from    services user session service
import   WorkFlowService   from    services work flow service
import   WorkService   from    services work service
import   WorkStateRedirectService   from    services work state redirect service
import   ArchivedComponent   from    shared dashboard archived component
import   DashboardComponent   from    shared dashboard dashboard component
import   NavbarModule   from    shared navbars navbar module
import   NoConnectionComponent   from    shared no connection no connection component
import   ProfileSettingsComponent   from    shared profile settings profile settings component
import   ReceiptListComponent   from    shared receipt list receipt list component
import   TalentCustomerSharedModule   from    shared talent customer shared module
import   CustomerLandingpageComponent   from    static pages customer landingpage customer landingpage component
import   ForbiddenComponent   from    static pages forbidden forbidden component
import   HomeComponent   from    static pages home home component
import   JobsComponent   from    static pages jobs jobs component
import   PrivacyComponent   from    static pages privacy privacy component
import   SiteNoticeComponent   from    static pages site notice site notice component
import   TalentLandingpageComponent   from    static pages talent landingpage talent landingpage component
import   UnauthorizedComponent   from    static pages unauthorized unauthorized component
import   VideoComponent   from    static pages video video component
import   TalentArchivedWorkFlowListComponent   from    talent archive talent archived work flow list component
import   TalentReceiptListComponent   from    talent receipt talent receipt list component
import   TalentModule   from    talent talent module
import   TalentWorkFlowsListComponent   from    talent work flow list talent work flow list component
import   DesignExamplesComponent   from    utils design design examples component
import   FormHelper   from    utils form helper
import   ImageService   from    utils image service

const APP PROVIDERS  any
  AdminGuardService
  AlertService
  Angular2TokenService
  AuthGuardService
  CategoryService
  ConnectionService
  CostService
  EnrichErrorService
  FormHelper
  GoogleAnalyticsEventsService
  HttpModule
  ImageService
  LanguageService
  LinkUrlService
  NotificationService
  PendingWorkListResolver
  RoleStorageService
  ScrollToTopService
  SEOService
  SessionService
  TalentGuardService
  TalentRegistrationGuardService
  TalentService
  UserSessionService
  WorkFlowListResolver
  WorkFlowService
  WorkService
  WorkStateRedirectService
   provide  LOCALE ID  useValue   de CH
   provide  BrowserXhr  useClass  NgProgressCustomBrowserXhr
   provide  LAZY MAPS API CONFIG  useClass  GoogleMapsConfig
   provide  ErrorHandler  useClass  RavenErrorHandler


   tslint disable next line max classes per file
 NgModule
  imports
    AgmCoreModule forRoot
    AngularFireModule initializeApp FirebaseConfig
    AngularFireDatabaseModule
    BrowserModule
    FormsModule
    ReactiveFormsModule
    HttpModule
    ModalModule forRoot
    PaginationModule forRoot
    AuthenticationModule
    TalentCustomerSharedModule
    TalentModule     TODO  Lazy Load  remove
    CustomerModule     TODO  Lazy Load  remove
    PublicBrowseModule
    PaymentModule
    AdminModule
    NavbarModule
    AppRoutingModule
    NgProgressModule
    NgxErrorsModule
    ToastyModule forRoot

  declarations
    AdminUsersComponent
    AdminWorksComponent
    AdminWorksModerateComponent
    AdminWorksModerateClientComponent
    AppComponent
    ArchivedComponent
    CustomerArchivedWorkListComponent
    CustomerReceiptListComponent
    CustomerWorkListComponent
    DashboardComponent
    DesignExamplesComponent
    ForbiddenComponent
    JobsComponent
    HomeComponent
    TalentLandingpageComponent
    CustomerLandingpageComponent
    NoConnectionComponent
    PageNotFoundComponent
    PrivacyComponent
    ProfileSettingsComponent
    ReceiptListComponent
    SiteNoticeComponent
    TalentArchivedWorkFlowListComponent
    TalentReceiptListComponent
    TalentWorkFlowsListComponent
    UnauthorizedComponent
    VideoComponent

  providers
    APP PROVIDERS

  bootstrap   AppComponent

export class AppModule

import   as Raven from  raven js
import   RavenErrorHandler   from    app sentry

describe  RavenErrorHandler
  let handler  RavenErrorHandler
  let connectionService  any

  beforeEach
    connectionService   jasmine createSpyObj  connectionService     setOffline
    handler   new RavenErrorHandler connectionService
    spyOn Raven   captureException
    spyOn Raven   isSetup   and returnValue true


  describe  handleError
    describe  if is handled
      describe  because is a connection error
        beforeEach
          handler handleError new Error  Response with status  0 for URL  null


        it  sets the status to offline
          expect connectionService setOffline  toHaveBeenCalled


        it  does not call the raven capture error
          expect Raven captureException  not toHaveBeenCalled



      describe  handle requests with status 0
        beforeEach
          handler handleError  status  0


        it  sets the status to offline
          expect connectionService setOffline  toHaveBeenCalled


        it  does not call the raven capture error
          expect Raven captureException  not toHaveBeenCalled



      describe  because is a checked error that should not be reported to sentry
        beforeEach
          handler handleError new Error  Uncaught  in promise   Error  CheckedError


        it  does not call the raven capture error
          expect Raven captureException  not toHaveBeenCalled




    describe  if is not handeled
      beforeEach
        handler handleError  status  500


      it  calls the raven capture error
        expect Raven captureException  toHaveBeenCalled


      it  does not set the status
        expect connectionService setOffline  not toHaveBeenCalled




import   ErrorHandler  Injectable   from   angular core
import   as Raven from  raven js
import   AppSettings   from    app settings
import   ConnectionService   from    services connection service

 Injectable
export class RavenErrorHandler implements ErrorHandler
  constructor private connectionService  ConnectionService
    if  AppSettings SENTRY DSN
      Raven config AppSettings SENTRY DSN   release  AppSettings GIT REVISION   install



  handleError err  any   void
    if  this isHandled err
      return

    if  Raven isSetup
      Raven captureException err
      else
         tslint disable next line no console
      console error err



  private isHandled error  any
    return this isNoConnectionError error     this isCheckedError error


  private isNoConnectionError error  any
    if  error status     0     error message    error message startsWith  Response with status  0
      this connectionService setOffline
      return true

    return false


  private isCheckedError error  Error
    return error message    error message startsWith  Uncaught  in promise   Error  CheckedError


   Warning  if we change something here  we also need to change it in the webpack config js  Otherwise  the deployment does not work
   tslint disable next line cyclomatic complexity
export class AppSettings
  static BASE BACKEND URL  string   process env BASE BACKEND URL     http   lawoon api localhost 3001
  static BASE FRONTEND URL  string   process env BASE FRONTEND URL     http   lawoon frontend localhost 3000
  static FIREBASE API KEY  string   process env FIREBASE API KEY     xxx
  static FIREBASE APP NAME  string   process env FIREBASE APP NAME     lawoon  env   e g  development
  static GIT REVISION  string   process env GIT REVISION
  static GOOGLE MAPS API  string   process env GOOGLE MAPS API     YOUR API KEY
  static GOOGLE MAPS COUNTRY  string   process env GOOGLE MAPS COUNTRY     ch
  static RENUO UPLOAD API KEY  string   process env RENUO UPLOAD API KEY     YOUR API KEY
  static RENUO UPLOAD SIGNING URL  string   process env RENUO UPLOAD SIGNING URL
     https   renuo upload signing master renuoapp ch generate policy
  static SENTRY DSN  string   process env SENTRY DSN
  static SENTRY API KEY  string   process env SENTRY API KEY
  static SENTRY API PROJECT  string   process env SENTRY API PROJECT
  static STRIPE CLIENT ID  string   process env STRIPE CLIENT ID     ca xxxxxx
  static STRIPE PUBLISHABLE KEY  string   process env STRIPE PUBLISHABLE KEY     pk xxxxxx
  static SUPPORT BOX OPEN TIME  string   process env SUPPORT BOX OPEN TIME     28000
  static TRACKING PIXEL URL  string   process env TRACKING PIXEL URL

  static apiEndpoint
    return    AppSettings BASE BACKEND URL  v1


import   AppSettings   from    app settings

describe  AppSettings
  let appSettings  AppSettings

  beforeEach
    appSettings   new AppSettings


  it  is defined
    expect appSettings  toBeDefined


   Warning  if we change something here  we also need to change it in the webpack config js  Otherwise  the deployment does not work
   tslint disable next line cyclomatic complexity
export class AppSettings
  static BASE BACKEND URL  string   process env BASE BACKEND URL     http   lawoon api localhost 3001
  static BASE FRONTEND URL  string   process env BASE FRONTEND URL     http   lawoon frontend localhost 3000
  static FIREBASE API KEY  string   process env FIREBASE API KEY     AIzaSyDSJ5xeKUwIFGIMJVUaCN3 9fle9 TZAl4
  static FIREBASE APP NAME  string   process env FIREBASE APP NAME     lawoon development
  static GIT REVISION  string   process env GIT REVISION
  static GOOGLE MAPS API  string   process env GOOGLE MAPS API     AIzaSyCeTAgdemlU5emTSFU4jsY5jZrChSxTaJc
  static GOOGLE MAPS COUNTRY  string   process env GOOGLE MAPS COUNTRY     ch
  static RENUO UPLOAD API KEY  string   process env RENUO UPLOAD API KEY     59bff86b9041aebed5e93217e7eb4d51
  static RENUO UPLOAD SIGNING URL  string   process env RENUO UPLOAD SIGNING URL
     https   renuo upload signing master renuoapp ch generate policy
  static SENTRY DSN  string   process env SENTRY DSN
  static SENTRY API KEY  string   process env SENTRY API KEY
  static SENTRY API PROJECT  string   process env SENTRY API PROJECT
  static STRIPE CLIENT ID  string   process env STRIPE CLIENT ID     ca AGLfLR2uZqp9NKSwj6n64fxNB8T9DCq2
  static STRIPE PUBLISHABLE KEY  string   process env STRIPE PUBLISHABLE KEY     pk test 7xouCojYLHIIfCjwEUIJp8ho
  static SUPPORT BOX OPEN TIME  string   process env SUPPORT BOX OPEN TIME     123123123123
  static TRACKING PIXEL URL  string   process env TRACKING PIXEL URL

  static apiEndpoint
    return    AppSettings BASE BACKEND URL  v1


import   AuthModalHelper   from    auth modal helper

describe  AuthModalHelper
  const router   jasmine createSpyObj  router     navigate
  const helper  AuthModalHelper   new AuthModalHelper router

  describe  removeSecondaryRoute
    it  removes the outlet in the url
      helper removeSecondaryRoute
      expect router navigate  toHaveBeenCalledWith   outlets   auth  null      queryParamsHandling   preserve



import   Injectable   from   angular core
import   Router   from   angular router

 Injectable
export class AuthModalHelper
  constructor private router  Router

  removeSecondaryRoute
    this router navigate   outlets   auth  null      queryParamsHandling   preserve


import   NgModule   from   angular core
import   RouterModule   from   angular router
import   TalentRegistrationGuardService   from     services talent registration guard service
import   LoginComponent   from    login component
import   PasswordForgottenComponent   from    password forgotten component
import   PasswordResetComponent   from    password reset component
import   RegisterTalentComponent   from    register talent component
import   RegisterComponent   from    register component

 NgModule
  imports
    RouterModule forChild

        path   login
        component  LoginComponent
        outlet   auth
        canDeactivate   TalentRegistrationGuardService


        path   register
        component  RegisterComponent
        outlet   auth


        path   password forgotten
        component  PasswordForgottenComponent
        outlet   auth


        path   password reset
        component  PasswordResetComponent
        outlet   auth


        path   register talent
        component  RegisterTalentComponent
        outlet   auth
        canActivate   TalentRegistrationGuardService
        canDeactivate   TalentRegistrationGuardService


  exports   RouterModule

export class AuthenticationRoutingModule

import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   NgxErrorsModule   from   ultimate ngxerrors
import   ModalModule   from  ng2 bootstrap modal
import   CustomFormElementModule   from     shared custom form element module
import   TalentCustomerSharedModule   from     shared talent customer shared module
import   AuthModalHelper   from    auth modal helper
import   AuthenticationRoutingModule   from    authentication routing module
import   EmailEditComponent   from    email edit component
import   PasswordValidator   from    helper password validator
import   LoginComponent   from    login component
import   PasswordEditComponent   from    password edit component
import   PasswordForgottenComponent   from    password forgotten component
import   PasswordResetComponent   from    password reset component
import   RegisterTalentFormComponent   from    register talent form component
import   RegisterTalentComponent   from    register talent component
import   RegisterComponent   from    register component

 NgModule
  imports
    CommonModule
    FormsModule
    ReactiveFormsModule
    TalentCustomerSharedModule
    AuthenticationRoutingModule
    CustomFormElementModule
    NgxErrorsModule
    ModalModule forRoot

  declarations
    EmailEditComponent
    LoginComponent
    PasswordEditComponent
    PasswordForgottenComponent
    PasswordResetComponent
    RegisterComponent
    RegisterTalentComponent
    RegisterTalentFormComponent

  exports
    EmailEditComponent
    LoginComponent
    PasswordEditComponent
    RegisterComponent
    RegisterTalentComponent
    RegisterTalentFormComponent

  providers
    AuthModalHelper
    PasswordValidator


export class AuthenticationModule

import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from     i18n i18n
import   EmailEditComponent   from    email edit component

describe  EmailEditComponent
  let component  EmailEditComponent
  let sessionService  any
  let userSessionService  any
  let alertService  any
  let userService  any
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched

  beforeEach
    sessionService   jasmine createSpyObj  sessionService     updateEmail
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    alertService   jasmine createSpyObj  alertService     success    danger
    userService   jasmine createSpyObj  userService     updateCurrentUser
    component   new EmailEditComponent sessionService  userSessionService  alertService  userService  formBuilder  formHelper


  describe  ngOnInit
    beforeEach
      userSessionService currentUser and returnValue Observable of  email   m example com


    it  builds the form
      expect component emailForm  toBeUndefined
      component ngOnInit
      expect component emailForm  toEqual jasmine any FormGroup



  describe  isFormValid
    beforeEach
      component emailForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component emailForm    any   valid  false
      expect component isFormValid    toBe false



  describe  onSubmit
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   getFormValues
      spyOn formHelper   setAsTouched
      component user    any   email   m example com
      component currentPassword    password
      component emailForm    any   reset


    describe  successful
      beforeEach
        sessionService updateEmail and returnValue Observable of true
        spyOn component emailForm   reset
        component submit


      it  submits the email with password to the session service
        expect sessionService updateEmail  toHaveBeenCalledWith  m example com    password


      it  shows an alert success message
        expect alertService success  toHaveBeenCalledWith I18n t emailEdit success


      it  resets the form
        expect component emailForm reset  toHaveBeenCalledWith  email   m example com


      it  updates the current user
        expect userService updateCurrentUser  toHaveBeenCalledWith component user



    describe  unsuccessful
      beforeEach
        sessionService updateEmail and returnValue Observable throw null
        component submit


      it  submits the email with password to the session service
        expect sessionService updateEmail  toHaveBeenCalledWith  m example com    password


      it  shows an alert danger message
        expect alertService danger  toHaveBeenCalledWith I18n t emailEdit responseError


      it  does not update the current user
        expect userService updateCurrentUser  not toHaveBeenCalled




import   Component  OnDestroy  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   Subscription   from  rxjs Subscription
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   User   from     models user model
import   SessionService   from     services session service
import   UserService   from     services user service
import   UserSessionService   from     services user session service
import   FormBase   from     shared form base form base
import   FormHelper   from     utils form helper

 Component
  selector   my email edit
  templateUrl   email edit component html

export class EmailEditComponent extends FormBase implements OnInit  OnDestroy
  emailForm  FormGroup
  i18n   I18n
  currentPassword  string
  user  User
  formSent   false
  private subscription  Subscription

  constructor private sessionService  SessionService  private userSessionService  UserSessionService  private alertService  AlertService
              private userService  UserService  private formBuilder  FormBuilder  private formHelper  FormHelper
    super


  ngOnInit
    this subscription   this userSessionService currentUser   first   subscribe customer
      this user   customer
      this buildForm



  ngOnDestroy
    this subscription unsubscribe


  private buildForm
    this emailForm   this formBuilder group
      email  new FormControl this user email   Validators email
      currentPassword  new FormControl this currentPassword   Validators required  Validators minLength 8



  isFormValid    boolean
    return this emailForm valid


  submit
    this formHelper setAsTouched this emailForm
    if   this isFormValid      return
    this formSent   true
    this getFormValues
    this sessionService updateEmail this user email  this currentPassword
       subscribe       this onSuccess          this onError


  getFormValues
    this currentPassword   this emailForm value currentPassword
    this user email   this emailForm value email


  private onSuccess
    this formSent   false
    this alertService success this i18n t emailEdit success
    this emailForm reset  email  this user email
    this userService updateCurrentUser this user


  private onError
    this formSent   false
    this alertService danger this i18n t emailEdit responseError


import   I18n   from        i18n i18n
import   PasswordValidator   from    password validator

describe  PasswordValidator
  const helper  PasswordValidator   new PasswordValidator

  describe  validate
    it  returns empty array if everything is valid
      const errorMessages  string     helper validate  12345678    12345678
      expect errorMessages length  toBe 0


    it  returns message if passwords are not the same
      expect helper validate  12345678    12345679    toEqual  I18n t passwordValidator invalidConfirmation


    it  returns message if password has not the minimum length
      expect helper validate  1234567    1234567    toEqual  I18n t passwordValidator invalidLength


    it  returns all messages  if multiple errors
      expect helper validate  1234567    12345678    toEqual
         I18n t passwordValidator invalidConfirmation  I18n t passwordValidator invalidLength




import   Injectable   from   angular core
import   I18n   from        i18n i18n

 Injectable
export class PasswordValidator

  validate password  string  passwordConfirm  string   string
    const errorMessages
    if  this hasInvalidPasswordCofirmation password  passwordConfirm     errorMessages push I18n t passwordValidator invalidConfirmation
    if  this hasInvalidPasswordMinLength password     errorMessages push I18n t passwordValidator invalidLength
    return errorMessages


  private hasInvalidPasswordCofirmation password  string  passwordConfirm  string
    return password     passwordConfirm


  private hasInvalidPasswordMinLength password  string
    return password length   8


import   FormBuilder   from   angular forms
import   ActivatedRoute  Router   from   angular router
import  rxjs add observable of
import   I18n   from     i18n i18n
import   TalentRegistrationService   from     services talent registration service
import   LoginComponent   from    login component
import   Profile   from    models profile model

describe  LoginComponent
  let component  LoginComponent
  let alertService  any
  let authModalhelper  any
  let loginModal  any
  let formHelper  any
  let sessionService  any
  const router  Router    any   navigateByUrl
  const talentRegistrationService  TalentRegistrationService    any   isProcessRunning        false
  const route  ActivatedRoute    any   snapshot   params   redirect   dashboard    queryParams
  const loginForm    any   valid  true  value   profile   email   me example com   password   myPassword
  const formBuilder   new FormBuilder

  beforeEach
    formHelper   jasmine createSpyObj  formHelper     setAsTouched
    alertService   jasmine createSpyObj  alertService     success
    authModalhelper   jasmine createSpyObj  authModalhelper     removeSecondaryRoute
    loginModal   jasmine createSpyObj  loginModal     show    hide
    sessionService   jasmine createSpyObj  sessionService     login
    component   new LoginComponent router  route  sessionService  alertService  authModalhelper
      talentRegistrationService  formBuilder  formHelper
    component loginModal   loginModal
    component loginForm   loginForm


  describe  ngAfterViewInit
    it  shows the modal
      component ngAfterViewInit
      expect loginModal show  toHaveBeenCalled


    it  sets the redirectUrl
      component ngAfterViewInit
      expect component redirectUrl  toEqual  dashboard



  describe  onHidden
    it  does nothing if formSent is true
      component formSent   true
      component onHidden
      expect authModalhelper removeSecondaryRoute  not toHaveBeenCalled


    it  removes secondary route if formSent is false
      component formSent   false
      component onHidden
      expect authModalhelper removeSecondaryRoute  toHaveBeenCalled



  describe  sets default values
    it  has a isErrorMessageVisible boolean attribute which is by default false
      expect component isErrorMessageVisible  toEqual false



  describe  onSubmitLogin
    it  calls the session service login function
      const profile   new Profile
      profile email    me example com
      profile password    myPassword
      component onSubmitLogin
      expect sessionService login  toHaveBeenCalledWith profile
        jasmine any Function   jasmine any Function


    it  just marks the form as touched if it is invalid
      loginForm valid   false
      component onSubmitLogin
      expect formHelper setAsTouched  toHaveBeenCalled
      expect sessionService login  not toHaveBeenCalled



  describe  navigateToRedirectUrl
    it  navigates to the customer dashboard if redirectUrl is set and talent registration process is not running
      spyOn router   navigateByUrl
      component redirectUrl    dashboard
      component navigateToRedirectUrl
      expect router navigateByUrl  toHaveBeenCalledWith  dashboard


    it  does nothing if no redirect url is given
      spyOn router   navigateByUrl
      component navigateToRedirectUrl
      expect router navigateByUrl  not toHaveBeenCalled


    it  does nothing when talent registration process is running
      spyOn router   navigateByUrl
      spyOn talentRegistrationService   isProcessRunning   and returnValue true
      component navigateToRedirectUrl
      expect router navigateByUrl  not toHaveBeenCalled



  describe  onError
    it  sets isErrorMessageVisible to true
      expect component isErrorMessageVisible  toBeFalsy
      component onError
      expect component isErrorMessageVisible  toBeTruthy


    it  sets the error message
      expect component errorMessage  toEqual
      component onError  translated
      expect component errorMessage  toEqual  translated


    it  resets the formSent flag
      component formSent   true
      component onError
      expect component formSent  toEqual false



  describe  onLoggedIn
    it  calls the redirect function
      spyOn component   navigateToRedirectUrl
      component onLoggedIn
      expect component navigateToRedirectUrl  toHaveBeenCalled


    it  hides the modal
      component onLoggedIn
      expect component loginModal hide  toHaveBeenCalled


    it  shows success alert
      component onLoggedIn
      expect alertService success  toHaveBeenCalledWith I18n t authentication loginSuccess



  describe  isLoginFromPasswordReset
    it  returns false by default
      expect component isLoginFromPasswordReset    toBe false


    it  returns true if redirected from password reset
      route snapshot    any   queryParams   resetPassword   true
      expect component isLoginFromPasswordReset    toBe true



  describe  getRegisterLink
    it  returns normal register link if talent registration process is not running
      expect component getRegisterLink    toEqual        outlets   auth    register


    it  returns talent register link if talent registration process is running
      spyOn talentRegistrationService   isProcessRunning   and returnValue true
      expect component getRegisterLink    toEqual        outlets   auth    register talent



import   AfterViewInit  Component  OnInit  ViewChild   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   ActivatedRoute  Router   from   angular router
import   ModalDirective   from  ng2 bootstrap modal
import  rxjs add operator first
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   SessionService   from     services session service
import   TalentRegistrationService   from     services talent registration service
import   FormHelper   from     utils form helper
import   AuthModalHelper   from    auth modal helper
import   Profile   from    models profile model

 Component
  templateUrl   login component html
  styleUrls    authentication component scss

export class LoginComponent implements AfterViewInit  OnInit
   ViewChild  loginModal   loginModal  ModalDirective

  i18n   I18n
  profile  Profile   new Profile
  isErrorMessageVisible  boolean   false
  errorMessage  string
  loginForm  FormGroup
  formSent   false
  redirectUrl  string

  constructor private router  Router  private route  ActivatedRoute  private sessionService  SessionService
              private alertService  AlertService  public authModalHelper  AuthModalHelper
              public talentRegistrationService  TalentRegistrationService
              private formBuilder  FormBuilder  private formHelper  FormHelper

  ngOnInit
    this buildForm


  private buildForm
    this loginForm   this formBuilder group
      profile  this formBuilder group
        password  new FormControl      Validators required  Validators minLength 8
        email  new FormControl      Validators required  Validators email




  ngAfterViewInit
    this loginModal show
    this redirectUrl   this route snapshot params  redirect


  onSubmitLogin
    this formHelper setAsTouched this loginForm
    if   this loginForm valid    return
    this formSent   true
    this profile email   this loginForm value profile email
    this profile password   this loginForm value profile password
    this sessionService login this profile
            this onLoggedIn
      response    this onError response status     401   I18n t login notAuthorized   I18n t login error



  onHidden
    if   this formSent
      this authModalHelper removeSecondaryRoute



  onError translatedError  string
    this errorMessage   translatedError
    this formSent   false
    this isErrorMessageVisible   true


  navigateToRedirectUrl
    if  this talentRegistrationService isProcessRunning       this redirectUrl    return
    this router navigateByUrl this redirectUrl


  onLoggedIn
    this alertService success I18n t authentication loginSuccess
    this loginModal hide
    this navigateToRedirectUrl


  isLoginFromPasswordReset    boolean
    return this route snapshot queryParams  resetPassword        true


  getRegisterLink
    const authPath   this talentRegistrationService isProcessRunning      register talent     register
    return        outlets   auth   authPath


export class Profile
  email  string
  password  string

  serialize
    return
      email  this email
      password  this password



import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from     i18n i18n
import   PasswordEditComponent   from    password edit component

describe  PasswordEditComponent
  let component  PasswordEditComponent
  let sessionService  any
  let alertService  any
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched

  beforeEach
    sessionService   jasmine createSpyObj  sessionService     updatePassword
    alertService   jasmine createSpyObj  alertService     success    danger
    component   new PasswordEditComponent sessionService  alertService  formBuilder  formHelper


  describe  ngOnInit
    it  builds the form
      expect component passwordForm  toBeUndefined
      component ngOnInit
      expect component passwordForm  toEqual jasmine any FormGroup



  describe  isFormValid
    beforeEach
      component passwordForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component passwordForm    any   valid  false
      expect component isFormValid    toBe false



  describe  onSubmit
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn formHelper   setAsTouched
      component passwordForm    any   reset            value   some   value


    describe  successful
      beforeEach
        sessionService updatePassword and returnValue Observable of true
        spyOn component passwordForm   reset
        component submit


      it  submits the email with password to the session service
        expect sessionService updatePassword  toHaveBeenCalledWith component passwordForm value


      it  shows an alert success message
        expect alertService success  toHaveBeenCalledWith I18n t passwordEdit success


      it  resets the form
        expect component passwordForm reset  toHaveBeenCalled



    describe  unsuccessful
      beforeEach
        sessionService updatePassword and returnValue Observable throw null
        component submit


      it  submits the email with password to the session service
        expect sessionService updatePassword  toHaveBeenCalledWith component passwordForm value


      it  shows an alert danger message
        expect alertService danger  toHaveBeenCalledWith I18n t passwordEdit responseError




import   Component  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   SessionService   from     services session service
import   FormBase   from     shared form base form base
import   FormHelper   from     utils form helper
import   MyValidators   from     utils my validators

 Component
  selector   my password edit
  templateUrl   password edit component html

export class PasswordEditComponent extends FormBase implements OnInit
  i18n   I18n
  passwordForm  FormGroup
  formSent   false

  constructor private sessionService  SessionService  private alertService  AlertService
              private formBuilder  FormBuilder  private formHelper  FormHelper
    super


  ngOnInit
    this buildForm


  private buildForm
    this passwordForm   this formBuilder group
      passwordCurrent  new FormControl      Validators minLength 8
      password  new FormControl      Validators minLength 8
      passwordConfirmation  new FormControl      Validators minLength 8

      validator  MyValidators matchPassword



  isFormValid    boolean
    return this passwordForm valid


  submit
    this formHelper setAsTouched this passwordForm
    this submitted   true
    if   this isFormValid      return
    this formSent   true
    this sessionService updatePassword this passwordForm value
       subscribe       this onSuccess          this onError


  private onSuccess
    this formSent   false
    this submitted   false
    this alertService success this i18n t passwordEdit success
    this passwordForm reset


  private onError
    this formSent   false
    this alertService danger this i18n t passwordEdit responseError


import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   PasswordForgottenComponent   from    password forgotten component

describe  PasswordForgottenComponent
  let sessionService  any
  let component  PasswordForgottenComponent

  beforeEach
    sessionService   jasmine createSpyObj  sessionService     resetPassword
    component   new PasswordForgottenComponent  any      sessionService
    component passwordForgottenModal   jasmine createSpyObj  passwordForgottenModal     show


  describe  ngAfterViewInit
    it  shows the modal on after init
      component ngAfterViewInit
      expect component passwordForgottenModal show  toHaveBeenCalled



  describe  onSubmitLogin
    describe  if successful
      beforeEach
        sessionService resetPassword and returnValue Observable of null


      it  sets submitted to true
        expect component submitted  toBeFalsy
        component onSubmitLogin
        expect component submitted  toBeTruthy


      it  calls the reset password function in the backend
        component email    test example com
        component onSubmitLogin
        expect sessionService resetPassword  toHaveBeenCalledWith  test example com



    it  calls the reset password function in the backend
      expect component isError  toBeFalsy
      sessionService resetPassword and returnValue Observable throw null
      component onSubmitLogin
      expect component isError  toBeTruthy



import   AfterViewInit  Component  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from     i18n i18n
import   SessionService   from     services session service
import   AuthModalHelper   from    auth modal helper

 Component
  templateUrl   password forgotten component html
  styleUrls    authentication component scss

export class PasswordForgottenComponent implements AfterViewInit
   ViewChild  passwordForgottenModal   passwordForgottenModal  ModalDirective
  submitted  boolean   false
  email  string
  i18n   I18n
  isError  boolean   false

  constructor public authModalHelper  AuthModalHelper  private sessionService  SessionService

  ngAfterViewInit
    this passwordForgottenModal show


  onSubmitLogin
    this submitted   true
    this sessionService resetPassword this email  subscribe
      this isError   true



import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from     i18n i18n
import   PasswordResetComponent   from    password reset component

describe  PasswordResetComponent
  const activatedRoute    any   url     current url   snapshot   queryParams    reset token    1234
  const router   jasmine createSpyObj  router     navigate
  let passwordValidator  any
  let sessionService  any
  let component  PasswordResetComponent

  beforeEach
    sessionService   jasmine createSpyObj  sessionService     updatePassword
    passwordValidator   jasmine createSpyObj  passwordValidator     validate
    component   new PasswordResetComponent  any      sessionService  activatedRoute  router  passwordValidator
    component passwordResetModal   jasmine createSpyObj  passwordResetModal     show


  describe  ngAfterViewInit
    it  shows the modal on after init
      component ngAfterViewInit
      expect component passwordResetModal show  toHaveBeenCalled



  describe  isValid
    it  returns true if password is valid
      passwordValidator validate and returnValue
      expect component isValid    toBeTruthy
      expect passwordValidator validate  toHaveBeenCalled


    it  returns false if password is invalid
      passwordValidator validate and returnValue   someError
      expect component isValid    toBeFalsy
      passwordValidator validate and returnValue   someError    anotherError
      expect component isValid    toBeFalsy
      expect passwordValidator validate  toHaveBeenCalledTimes 2



  describe  ngOnInit
    it  sets the token by the url
      component ngOnInit
      expect component token  toEqual  1234



  describe  onSubmitLogin
    let event  MouseEvent

    beforeEach
      event   jasmine createSpyObj  event     preventDefault


    describe  if not valid
      beforeEach
        spyOn component   isValid   and returnValue false


      it  stops the action  if not valid
        component onSubmitLogin event
        expect event preventDefault  toHaveBeenCalled


      it  keeps submitted on false
        component onSubmitLogin event
        expect component submitted  toBeFalsy


      it  does not call session service
        component onSubmitLogin event
        expect sessionService updatePassword  not toHaveBeenCalled



    describe  if valid
      beforeEach
        spyOn component   isValid   and returnValue true
        sessionService updatePassword and returnValue Observable of null
        component password    123456789
        component passwordConfirmation    123456789
        component token    12


      describe  and successful
        beforeEach
          sessionService updatePassword and returnValue Observable of null


        it  submits the form and calls updatePassword
          component onSubmitLogin event
          expect sessionService updatePassword  toHaveBeenCalledWith
            password  component password
            passwordConfirmation  component passwordConfirmation
            passwordCurrent  null



        it  navigates to the login page
          expect router navigate  toHaveBeenCalledWith        outlets   auth    login        queryParams  Object  resetPassword  true


        it  sets submitted to true
          component onSubmitLogin event
          expect component submitted  toBeTruthy



      it  shows an error if not successful
        sessionService updatePassword and returnValue Observable throw null
        component onSubmitLogin event
        expect component errorMessages  toEqual  I18n t passwordReset resetFailed




import   AfterViewInit  Component  OnInit  ViewChild   from   angular core
import   NgForm   from   angular forms
import   ActivatedRoute  Router   from   angular router
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from     i18n i18n
import   SessionService   from     services session service
import   AuthModalHelper   from    auth modal helper
import   PasswordValidator   from    helper password validator

 Component
  templateUrl   password reset component html
  styleUrls    authentication component scss

export class PasswordResetComponent implements OnInit  AfterViewInit
   ViewChild  passwordResetModal   passwordResetModal  ModalDirective
   ViewChild  passwordResetForm   passwordResetForm  NgForm
  i18n   I18n
  token  string
  password  string
  passwordConfirmation  string
  submitted  boolean   false
  errorMessages  string

  constructor public authModalHelper  AuthModalHelper  private sessionService  SessionService  private route  ActivatedRoute
              private router  Router  private passwordValidator  PasswordValidator

  ngOnInit
    this token   this route snapshot queryParams  reset token


  ngAfterViewInit
    this passwordResetModal show


  isValid
    this errorMessages   this passwordValidator validate this password  this passwordConfirmation
    return this errorMessages length     0


  onSubmitLogin event  MouseEvent
    if   this isValid
      event preventDefault
      return

    this submitted   true
    this sessionService updatePassword  password  this password  passwordConfirmation  this passwordConfirmation  passwordCurrent  null
       subscribe
            this onSuccess
              this errorMessages push this i18n t passwordReset resetFailed



  private onSuccess
    this router navigate        outlets   auth    login        queryParams   resetPassword  true


import   FormBuilder   from   angular forms
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   RoleStorageService   from     services role storage service
import   SessionService   from     services session service
import   Profile   from    models profile model
import   RegisterTalentFormComponent   from    register talent form component

describe  RegisterTalentFormComponent
  let component  RegisterTalentFormComponent
  const sessionService  SessionService    any   register            login
  const alertService  AlertService    any   success
  const roleStorageService  RoleStorageService    any   setRoleToCustomer
  const formBuilder   new FormBuilder
  let formHelper  any
  const registerForm    any
    valid  true
    value
      profile   email   me example com   password   myPassword
      user   firstName   Hans   lastName   Muster


  const talentRegistrationService
    talentForm
      user
        firstName  registerForm value user firstName
        lastName  registerForm value user lastName




  beforeEach
    formHelper   jasmine createSpyObj  formHelper     setAsTouched
    component   new RegisterTalentFormComponent sessionService  alertService  roleStorageService
      formBuilder  formHelper   any  talentRegistrationService
    component registerForm   registerForm


  describe  onError
    it  sets isErrorMessageVisible to true
      expect component isErrorMessageVisible  toBeFalsy
      component onError  something
      expect component isErrorMessageVisible  toBeTruthy


    it  sets the error message
      expect component errorMessage  toEqual
      component onError  translated
      expect component errorMessage  toEqual  translated


    it  resets the formSent flag
      component formSent   true
      component onError  something
      expect component formSent  toEqual false



  describe  onRegistrationSuccessful
    beforeEach
      spyOn roleStorageService   setRoleToCustomer
      spyOn alertService   success


    it  calls the alert service and the role service
      component onRegistrationSuccessful
      expect roleStorageService setRoleToCustomer  toHaveBeenCalled
      expect alertService success  toHaveBeenCalledWith I18n t authentication registrationSuccess


    it  calls the emitter and passes the talentForm
      spyOn component onSuccess   emit
      component onRegistrationSuccessful
      expect component onSuccess emit  toHaveBeenCalledWith talentRegistrationService talentForm



  describe  onSubmitRegistration
    beforeEach
      spyOn sessionService   register


    it  checks on submit Registration  if invalid  show message
      const profile   new Profile
      profile email    me example com
      profile password    myPassword
      component onSubmitRegistration
      expect sessionService register  toHaveBeenCalledWith profile
        jasmine any Function   jasmine any Function


    it  marks the form as touched if it is invalid
      registerForm valid   false
      component onSubmitRegistration
      expect formHelper setAsTouched  toHaveBeenCalled
      expect sessionService register  not toHaveBeenCalled



import   Component  EventEmitter  OnInit  Output   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   Talent   from     models
import   RoleStorageService   from     services role storage service
import   SessionService   from     services session service
import   TalentRegistrationService   from     services talent registration service
import   FormHelper   from     utils form helper
import   MyValidators   from     utils my validators
import   Profile   from    models profile model

 Component
  selector   my register talent form
  templateUrl   register talent form component html
  styleUrls    register talent form component scss

export class RegisterTalentFormComponent implements OnInit
   Output   onSuccess  EventEmitter Talent    new EventEmitter Talent
  i18n   I18n
  profile  Profile   new Profile
  isErrorMessageVisible  boolean   false
  errorMessage  string
  registerForm  FormGroup
  formSent   false

  constructor private sessionService  SessionService  private alertService  AlertService
              private roleStorageService  RoleStorageService  private formBuilder  FormBuilder
              private formHelper  FormHelper  private talentRegistrationService  TalentRegistrationService

  ngOnInit
    this buildForm


  private buildForm
    this registerForm   this formBuilder group
      profile  this formBuilder group
        password  new FormControl      Validators required  Validators minLength 8
        email  new FormControl      Validators required  Validators email

      user  this formBuilder group
        firstName  new FormControl      MyValidators present
        lastName  new FormControl      MyValidators present




  onSubmitRegistration
    this formHelper setAsTouched this registerForm
    if   this registerForm valid    return
    this formSent   true
    this profile email   this registerForm value profile email
    this profile password   this registerForm value profile password
    this sessionService register this profile
            this onRegistrationSuccessful
      response    this onError response status     401   I18n t register notAuthorized   I18n t register error



  onError translatedError  string
    this errorMessage   translatedError
    this isErrorMessageVisible   true
    this formSent   false


  onRegistrationSuccessful
    this alertService success I18n t authentication registrationSuccess
    this roleStorageService setRoleToCustomer
    this talentRegistrationService talentForm user firstName   this registerForm value user firstName
    this talentRegistrationService talentForm user lastName   this registerForm value user lastName
    this onSuccess emit this talentRegistrationService talentForm


import   RegisterTalentComponent   from    register talent component

describe  RegisterTalentComponent
  let modal  any
  let component  RegisterTalentComponent

  beforeEach
    modal   jasmine createSpyObj  modal     hide    show
    component   new RegisterTalentComponent  any
    component authenticationModal   modal


  describe  ngAfterViewInit
    it  shows the modal on after view init
      component ngAfterViewInit
      expect modal show  toHaveBeenCalled



import   AfterViewInit  Component  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from     i18n i18n
import   AuthModalHelper   from    auth modal helper

 Component
  templateUrl   register talent component html
  styleUrls    authentication component scss    register talent component scss

export class RegisterTalentComponent implements AfterViewInit
   ViewChild  registerTalentModal   authenticationModal  ModalDirective

  i18n   I18n

  constructor public authModalHelper  AuthModalHelper

  ngAfterViewInit
    this authenticationModal show


import   FormBuilder   from   angular forms
import   I18n   from     i18n i18n
import   Profile   from    models profile model
import   RegisterComponent   from    register component

describe  RegisterComponent
  let component  RegisterComponent
  let alertService  any
  let authModalhelper  any
  let formHelper  any
  let registerModal  any
  let sessionService  any
  const formBuilder   new FormBuilder
  const registerForm    any   valid  true  value   profile   email   me example com   password   myPassword

  beforeEach
    formHelper   jasmine createSpyObj  formHelper     setAsTouched
    alertService   jasmine createSpyObj  alertService     success
    authModalhelper   jasmine createSpyObj  authModalhelper     removeSecondaryRoute
    registerModal   jasmine createSpyObj  registerModal     show    hide
    sessionService   jasmine createSpyObj  sessionService     register
    component   new RegisterComponent sessionService  alertService  authModalhelper  formBuilder  formHelper
    component registerForm   registerForm
    component registerModal   registerModal


  describe  sets default values
    it  has a isErrorMessageVisible boolean attribute which is by default false
      expect component isErrorMessageVisible  toEqual false



  describe  onError
    it  sets isErrorMessageVisible to true
      expect component isErrorMessageVisible  toBeFalsy
      component onError
      expect component isErrorMessageVisible  toBeTruthy


    it  sets the error message
      expect component errorMessage  toEqual
      component onError  translated
      expect component errorMessage  toEqual  translated


    it  resets the formSent flag
      component formSent   true
      component onError
      expect component formSent  toEqual false



  describe  onRegistrationSuccessful
    it  shows success alert
      component onRegistrationSuccessful
      expect alertService success  toHaveBeenCalledWith I18n t authentication registrationSuccess


    it  hides the modal
      component onRegistrationSuccessful
      expect registerModal hide  toHaveBeenCalled



  describe  ngAfterViewInit
    it  shows the modal
      component ngAfterViewInit
      expect registerModal show  toHaveBeenCalled



  describe  onHidden
    it  does nothing if formSent is true
      component formSent   true
      component onHidden
      expect authModalhelper removeSecondaryRoute  not toHaveBeenCalled


    it  removes secondary route if formSent is false
      component formSent   false
      component onHidden
      expect authModalhelper removeSecondaryRoute  toHaveBeenCalled



  describe  onSubmitRegistration
    it  calls the session service register function
      const profile   new Profile
      profile email    me example com
      profile password    myPassword
      component onSubmitRegistration
      expect sessionService register  toHaveBeenCalledWith profile
        jasmine any Function   jasmine any Function


    it  just marks the form as touched if it is invalid
      registerForm valid   false
      component onSubmitRegistration
      expect formHelper setAsTouched  toHaveBeenCalled
      expect sessionService register  not toHaveBeenCalled



import   AfterViewInit  Component  OnInit  ViewChild   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   ModalDirective   from  ng2 bootstrap modal
import   AlertService   from     alerts alerts service
import   I18n   from     i18n i18n
import   SessionService   from     services session service
import   FormHelper   from     utils form helper
import   AuthModalHelper   from    auth modal helper
import   Profile   from    models profile model

 Component
  templateUrl   register component html
  styleUrls    authentication component scss

export class RegisterComponent implements AfterViewInit  OnInit
   ViewChild  registerModal   registerModal  ModalDirective

  i18n   I18n
  profile  Profile   new Profile
  isErrorMessageVisible  boolean   false
  errorMessage  string
  registerForm  FormGroup
  formSent   false

  constructor private sessionService  SessionService  private alertService  AlertService
              public authModalHelper  AuthModalHelper  private formBuilder  FormBuilder
              private formHelper  FormHelper

  ngOnInit
    this buildForm


  private buildForm
    this registerForm   this formBuilder group
      profile  this formBuilder group
        password  new FormControl      Validators required  Validators minLength 8
        email  new FormControl      Validators required  Validators email




  ngAfterViewInit
    this registerModal show


  onSubmitRegistration
    this formHelper setAsTouched this registerForm
    if   this registerForm valid    return
    this formSent   true
    this profile email   this registerForm value profile email
    this profile password   this registerForm value profile password
    this sessionService register this profile
            this onRegistrationSuccessful
      response    this onError response status     401   I18n t register notAuthorized   I18n t register error



  onError translatedError  string
    this errorMessage   translatedError
    this isErrorMessageVisible   true
    this formSent   false


  onRegistrationSuccessful
    this registerModal hide
    this alertService success I18n t authentication registrationSuccess


  onHidden
    if   this formSent
      this authModalHelper removeSecondaryRoute



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Option   from        shared dropdown option model
import   Category   from     shared category model
import   CategoryService   from     shared category service
import   Subcategory   from     shared subcategory model
import   CategoryFilterSelectionComponent   from    category filter selection component

describe  CategoryFilterSelectionComponent
  let component  CategoryFilterSelectionComponent
  const categoryService  CategoryService    any   all            subcategories

  function createSubcategory id  number
    const subcategory   new Subcategory
    subcategory id   id
    return subcategory


  beforeEach
    component   new CategoryFilterSelectionComponent categoryService


  describe  toggleSubcategory
    it  removes given Category from selectedCategoriess list  if it is part of it
      component selectedSubcategories    createSubcategory 1   createSubcategory 2   createSubcategory 3   createSubcategory 4
      component toggleSubcategory createSubcategory 3
      expect component selectedSubcategories length  toEqual 3


    it  adds given Talent to selectedTalents list  if it is not part of it yet
      component selectedSubcategories    createSubcategory 1   createSubcategory 2   createSubcategory 4
      component toggleSubcategory createSubcategory 3
      expect component selectedSubcategories length  toEqual 4


    it  calls the emit   done
      component onChangedSubcategories subscribe  emit  Subcategory
        expect emit  toEqual component selectedSubcategories
        done

      component toggleSubcategory createSubcategory 3



  describe  ngOnInit integration test
    it  subscribes to subcategoriesUpdated and selects all subcategories when category is changed
      const subcategories    createSubcategory 1   createSubcategory 2   createSubcategory 3
      const category   new Category  id  2  name   a   iconUrl   icon 2 svg   subcategories
      spyOn categoryService   all   and returnValue Observable of  category

      component ngOnInit
      expect component selectedSubcategories  toEqual
      component onSelectedCategory new Option category name  category

      expect categoryService all  toHaveBeenCalled
      expect component selectedSubcategories  toEqual subcategories
      expect component selectedSubcategories length  toEqual 3
      subcategories pop
      expect component selectedSubcategories length  toEqual 3



import   Component  EventEmitter  Input  OnChanges  OnInit  Output   from   angular core
import   CategoryService   from        categories shared category service
import   Subcategory   from        categories shared subcategory model
import   I18n   from        i18n i18n
import   Option   from        shared dropdown option model
import   Category   from     shared category model

 Component
  selector   my category filter selection
  templateUrl   category filter selection component html
  styleUrls    category filter selection component scss

export class CategoryFilterSelectionComponent implements OnInit  OnChanges
   Output   onChangedSubcategories  EventEmitter Subcategory      new EventEmitter Subcategory
   Input   selectedSubcategoryIds  number     null
   Input   selectedCategoryId  number
  i18n   I18n
  categories  Category
  categoryOptions  Option
  subcategoryOptions  Option
  selectedSubcategories  Subcategory
  selectedCategory  Category   null

  constructor private categoryService  CategoryService

  ngOnInit
    this categoryService all   subscribe categories
      this categories   categories
      this categoryOptions   this categories map category    new Option category name  category
      this categoryOptions unshift new Option this i18n t subcategorySelection allCategories  null
      this ngOnChanges



  ngOnChanges
    if  this selectedCategoryId
      this setSubcategoriesByCategory this getCategoryById this selectedCategoryId
      else
      this selectedCategory   null
      this resetSubcategories

    this setSelectedSubcategories


  private setSelectedSubcategories
    if  this selectedSubcategoryIds    this selectedCategory
      this selectedSubcategories   this selectedCategory subcategories
         filter subcategory    this selectedSubcategoryIds includes subcategory id



  private getCategoryById id  number   Category
    return this categories find category    category id     id


  onSelectedCategory option  Option
    this setSubcategoriesByCategory option value
    this onChangedSubcategories emit this selectedSubcategories


  private setSubcategoriesByCategory category  Category
    this selectedCategory   category
    if  category
      this subcategoryOptions   category subcategories map subcategory    new Option subcategory name  subcategory
      this selectedSubcategories   category subcategories map x    x
      else
      this resetSubcategories



  private resetSubcategories
    this subcategoryOptions
    this selectedSubcategories


  toggleSubcategory subcategory  Subcategory
    if  this isSubcategorySelected subcategory
      this deleteSelectedSubcategory subcategory
      else
      this selectedSubcategories push subcategory

    this onChangedSubcategories emit this selectedSubcategories


  private deleteSelectedSubcategory subcategory  Subcategory
    this selectedSubcategories   this selectedSubcategories filter selectedSubcategory    selectedSubcategory id     subcategory id


  isSubcategorySelected subcategory  Subcategory   boolean
    return this selectedSubcategories some selectedSubcategory    selectedSubcategory id     subcategory id


import   inject  TestBed   from   angular core testing
import   MockBackend   from   angular http testing
import  rxjs add operator map
import   HttpMockHelpers   from        mocks
import   Option   from        shared dropdown option model
import   MockCategoryService   from     shared category service mock
import   Category   from     shared category model
import   CategoryService   from     shared category service
import   Subcategory   from     shared subcategory model
import   CategorySelectionComponent   from    category selection component

describe  CategorySelection
  let component  CategorySelectionComponent
  const testCategories  Category     MockCategoryService getCategories
  let mockBackend  MockBackend

  HttpMockHelpers setup

  beforeEach
    TestBed configureTestingModule
      providers   CategorySelectionComponent  CategoryService



  beforeEach inject  MockBackend  CategorySelectionComponent     mockBackend  MockBackend   component  CategorySelectionComponent
    mockBackend    mockBackend
    component    component


  describe  onSelectedSubcategory
    it  sets the value of a selected subcategory and emits the parent
      const subcategory   new Subcategory
        id  33  name   Test
        category  new Category  id  2  name   Category Two   iconUrl   icon 2 svg

      const propagte   jasmine createSpy  propagateChange
      component registerOnChange propagte
      expect component selectedSubcategory  toEqual undefined
      component onSelectedSubcategory new Option  Test   subcategory
      expect propagte  toHaveBeenCalled



  describe  ngOnInit
    it  loads all categories and creates option objects
      expect component categories  toEqual
      expect component categoryOptions  toEqual undefined
      HttpMockHelpers mockResponseSuccess mockBackend  MockCategoryService getMockDataAll
      component ngOnInit
      expect component categories  toEqualData testCategories
      const options   testCategories map  c  Category     new Option c name  c
      expect component categoryOptions  toEqualData options


    it  sorts categories by name
      HttpMockHelpers mockResponseSuccess mockBackend
        data
           id  1  type   categories   attributes   name   Z
           id  2  type   categories   attributes   name   A


      component ngOnInit
      expect component categoryOptions 0  value id  toBe 2
      expect component categoryOptions 1  value id  toBe 1



  describe  writeValue
    it  it updates the selectedCategory
      component writeValue  foo   bar
      expect component selectedSubcategory  toEqual  any   foo   bar



import   Component  forwardRef  OnInit   from   angular core
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms
import  rxjs add operator map
import   CategoryService   from        categories shared category service
import   Subcategory   from        categories shared subcategory model
import   I18n   from        i18n i18n
import   Option   from        shared dropdown option model
import   Category   from     shared category model

 Component
  selector   my category selection
  templateUrl   category selection component html
  providers

      provide  NG VALUE ACCESSOR
         tslint disable next line no forward ref
      useExisting  forwardRef       CategorySelectionComponent
      multi  true



export class CategorySelectionComponent implements ControlValueAccessor  OnInit
  selectedSubcategory  Subcategory
  i18n   I18n
  selectedCategory  Category
  categories  Category
  subCategories  Subcategory
  categoryOptions  Option
  subcategoryOptions  Option
  private propagateChange       any

  constructor private categoryService  CategoryService

  ngOnInit
    this categoryService all   subscribe categories    this onCategoriesLoaded categories


  onCategoriesLoaded categories  Category
    this categories   categories sort  a  b      a name   b name     1    a name   b name    1   0
    this categoryOptions   this categories map category    new Option category name  category


  onSelectedCategory option  Option
    this setSubcategoriesByCategory option value
    this selectedSubcategory   null
    this propagateChange undefined


  protected setSubcategoriesByCategory category  Category
    this selectedCategory   category
    this subCategories   category subcategories
    this subcategoryOptions   category subcategories map subcategory    new Option subcategory name  subcategory


  onSelectedSubcategory option  Option
    this selectedSubcategory   option value
    this propagateChange this selectedSubcategory


  writeValue value  any   void
    this selectedSubcategory   value


  registerOnChange fn  any
    this propagateChange   fn


  registerOnTouched    void

import   Observable   from  rxjs Observable
import   PreselectedCategoryComponent   from    preselected category component

describe  PreselectedCategoryComponent
  const subcategory3    id  3  name   Subcategory 3
  const subcategory4    id  4  name   Subcategory 4
  let activatedRoute  any
  let categoryService  any
  let component  PreselectedCategoryComponent
  let workFormSpy  any

  function initComponentWith categories  any  urlParams  any
    activatedRoute    queryParams  Observable of urlParams
    categoryService    all        Observable of categories
    component   new PreselectedCategoryComponent activatedRoute  categoryService
    workFormSpy   jasmine createSpyObj  formControl     setValue
    component workFormControl   workFormSpy
    component ngOnInit


  describe  when has valid category and subcategory
    beforeEach
      initComponentWith

           id  0  name   Category 0   subcategories
           id  1  name   Category 1   subcategories   subcategory3  subcategory4

         subcategory   3


    it  sets the category 1 as selected
      expect component selectedCategory name  toBe  Category 1


    it  sets the subcategory 3 as selected
      expect component selectedSubcategory name  toBe  Subcategory 3


    it  sets the selected subcategory to the work form
      expect workFormSpy setValue  toHaveBeenCalledWith subcategory3



  describe  when has a subcategory in param that does not exist
    beforeEach
      initComponentWith

           id  0  name   Category 0   subcategories
           id  1  name   Category 1   subcategories   subcategory3  subcategory4

         subcategory   5


    it  sets the category 1 as selected
      expect component selectedCategory name  toBe  Category 1


    it  sets no the subcategory as selected
      expect component selectedSubcategory  toBe undefined


    it  sets undefined as subcategory to the work form
      expect workFormSpy setValue  toHaveBeenCalledWith undefined



  describe  when url does not specify subcategory id
    beforeEach
      initComponentWith

           id  0  name   Category 0   subcategories
           id  1  name   Category 1   subcategories   subcategory3  subcategory4




    it  sets the category 1 as selected
      expect component selectedCategory name  toBe  Category 1


    it  sets no the subcategory as selected
      expect component selectedSubcategory  toBe undefined


    it  sets undefined as subcategory to the work form
      expect workFormSpy setValue  toHaveBeenCalledWith undefined



import   Component  Input  OnDestroy  OnInit   from   angular core
import   FormControl   from   angular forms
import   ActivatedRoute   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   Category   from     shared category model
import   CategoryService   from     shared category service
import   Subcategory   from     shared subcategory model

 Component
  selector   my preselected category
  templateUrl   preselected category component html

export class PreselectedCategoryComponent implements OnInit  OnDestroy
   Input   workFormControl  FormControl
  selectedCategory  Category
  selectedSubcategory  Subcategory
  subcategoryId  number   null
  i18n   I18n
  private PRESELECTED CATEGORY ID   1
  private subscriptions  Subscription

  constructor private route  ActivatedRoute  private categoryService  CategoryService

  ngOnInit
    this subscriptions push this route queryParams subscribe params    this setCategories params  subcategory


  private setCategories subcategoryId  string
    this subcategoryId   parseInt subcategoryId  10
    this subscriptions push this categoryService all   subscribe categories    this onCategoriesLoaded categories


  onCategoriesLoaded categories  Category
    this selectCategory categories
    this selectSubcategory


  private selectSubcategory
    this selectedSubcategory   this selectedCategory subcategories find subcategory    subcategory id     this subcategoryId
    this workFormControl setValue this selectedSubcategory


  private selectCategory categories  Category
    this selectedCategory   categories find category    category id     this PRESELECTED CATEGORY ID


  ngOnDestroy    void
    this subscriptions forEach subscription
      subscription unsubscribe



import Spy   jasmine Spy
import   CategoryApiObject  CategoryApiObjectIndexResponse   from        api endpoints category api interface
import   SubcategoryApiObject   from        api endpoints subcategory api interface
import   HttpSpyObject   from        mocks helper mock
import   Category   from    category model
import   CategoryService   from    category service
import   Subcategory   from    subcategory model

export class MockCategoryService extends HttpSpyObject
  static mockDataCategories  CategoryApiObject

      id   1
      type   categories
      attributes   name   Category One   iconUrl   icon 1 svg
      relationships
        subcategories
          data
             id   1   type   subcategories
             id   2   type   subcategories





      id   2
      type   categories
      attributes   name   Category Two   iconUrl   icon 2 svg
      relationships   subcategories   data    id   3   type   subcategories


  static mockDataInlcuded  SubcategoryApiObject

      id   1
      type   subcategories
      attributes   name   SanitÃ¤r
      relationships   category   data   id   1   type   categories


      id   2
      type   subcategories
      attributes   name   Maurer
      relationships   category   data   id   1   type   categories


      id   3
      type   subcategories
      attributes   name   Baumpfleger
      relationships   category   data   id   2   type   categories



  static getCategories    Category
    return
      new Category
        id  1
        name   Category One
        iconUrl   icon 1 svg
        subcategories   new Subcategory  id  1  name   SanitÃ¤r   categoryId  1    new Subcategory  id  2  name   Maurer   categoryId  1

      new Category
        id  2
        name   Category Two
        iconUrl   icon 2 svg
        subcategories   new Subcategory  id  3  name   Baumpfleger   categoryId  2




  static getMockDataAll    CategoryApiObjectIndexResponse
    return
      data  this mockDataCategories
      included  this mockDataInlcuded



  allSpy  Spy

  constructor
    super CategoryService
    this allSpy   this spy  all   andReturn this


  getProviders    any
    return   provide  CategoryService  useValue  this


import   extend   from  lodash
import   Subcategory   from    subcategory model

export interface ICategoryOptions
  id  number
  name  string
  iconUrl  string
  subcategories   Subcategory


export class Category
  id  number
  name  string
  iconUrl  string
  subcategories   Subcategory

  constructor options   ICategoryOptions
    if  options
      extend this  options



import   inject  TestBed   from   angular core testing
import   MockBackend   from   angular http testing
import   Router   from   angular router
import   HttpMockHelpers  MockRouter   from        mocks
import   MockCategoryService   from    category service mock
import   CategoryService   from    category service

describe  CategoryService
  let service  CategoryService
  const testCategories   MockCategoryService getCategories
  let mockBackend  MockBackend

  HttpMockHelpers setup

  beforeEach
    TestBed configureTestingModule
      providers
        CategoryService
         provide  Router  useClass  MockRouter




  beforeEach inject  MockBackend  CategoryService     mockBackend  MockBackend   service  CategoryService
    mockBackend    mockBackend
    service    service


  describe  all
    it  returns all categories   done
      HttpMockHelpers mockResponseSuccess mockBackend  MockCategoryService getMockDataAll
      service all   subscribe response
        expect response  toEqualData testCategories
        done




import   Injectable   from   angular core
import   Http   from   angular http
import  rxjs add operator map
import  rxjs add operator mergeMap
import   Observable   from  rxjs Observable
import   Api   from        api api
import   CategoryApiObject   from        api endpoints category api interface
import   AppSettings   from        app settings
import   I18n   from        i18n i18n
import   Category   from    category model

 Injectable
export class CategoryService
  private baseUrl  string   AppSettings apiEndpoint

  constructor private http  Http

  all    Observable Category
    return I18n getLang   mergeMap lang    this http get    this baseUrl  categories locale   lang
       map data    new Api CategoryApiObject  Category  data  deserializeArray


import   extend   from  lodash
import   Category   from    category model

export interface ISubcategoryOptions
  id   number
  name   string
  category   Category
  categoryId   number


export class Subcategory
  id  number
  name  string
  category  Category
  categoryId  number

  constructor options   ISubcategoryOptions
    if  options
      extend this  options



import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule   from   angular forms
import   MessagesComponent   from    messages messages component
import   MessagesService   from    messages messages service
import   PrivateWorkChatComponent   from    work chats private work chat component
import   PublicWorkChatComponent   from    work chats public work chat component
import   WorkChatService   from    work chats work chat service

 NgModule
  imports
    CommonModule
    FormsModule

  declarations
    MessagesComponent
    PrivateWorkChatComponent
    PublicWorkChatComponent

  exports
    PrivateWorkChatComponent
    PublicWorkChatComponent

  providers
    MessagesService
    WorkChatService


export class ChatModule

import   as firebase from  firebase app
import  firebase database
import   User   from        models user model
import   MessageForm   from    message form model

describe  MessageForm
  let form  MessageForm
  const customer   new User  id  42  firstName   John   lastName   Doe

  beforeEach
    form   new MessageForm
    form content    hi
    form sender   customer
    form chatHash    random


  describe  serializeForFirebase
    it  serializes the message
      const serialized   form serializeForFirebase
      expect serialized content  toEqual  hi
      expect serialized senderId  toEqual 42
      expect serialized senderFirstName  toEqual  John
      expect serialized senderLastName  toEqual  Doe
      expect serialized createdAtTimestamp  toEqual  any  firebase database ServerValue TIMESTAMP



  describe  serializeForApi
    it  serializes the message
      const serialized   form serializeForApi
      expect serialized message  toEqual  hi
      expect serialized chatHash  toEqual  random



  describe  isValid
    it  is valid by default
      expect form isValid    toBeTruthy


    it  validates the content
      form content
      expect form isValid    toBeFalsy


    it  validates the chatHash
      form chatHash
      expect form isValid    toBeFalsy


    it  validates the sender
      form sender   null
      expect form isValid    toBeFalsy



import   as firebase from  firebase app
import  firebase database
import   MessageApiObjectAttributes   from        api endpoints message api interface
import   User   from        models user model

export interface FirebaseSerializedMessage
  content  string
  createdAtTimestamp  number
  senderId  number
  senderFirstName  string
  senderLastName  string


export class MessageForm
  content  string
  chatHash  string
  sender  User

  serializeForFirebase    FirebaseSerializedMessage
    return
      content  this content
      senderId  this sender id
      senderFirstName  this sender firstName
      senderLastName  this sender lastName
         firebase converts firebase database ServerValue TIMESTAMP automatically to a number once it is stored
      createdAtTimestamp   number  firebase database ServerValue TIMESTAMP



  serializeForApi    MessageApiObjectAttributes
    return
      message  this content
      chatHash  this chatHash



  isValid    boolean
    return   this content      this chatHash      this sender


import   Message   from    message model

describe  Message
  let model  Message

  beforeEach
    model   new Message  123    hi nhow are you   42   John    Doe   1545340005


  describe  getters
    it  gets the expected values
      expect model key  toEqual  123
      expect model content  toEqual  hi nhow are you
      expect model senderId  toEqual 42
      expect model senderFirstName  toEqual  John
      expect model senderLastName  toEqual  Doe
      expect model createdAt  toEqual new Date 1545340005



export interface FirebaseMessage
   key  string
  content  string
  createdAtTimestamp  number
  senderId  number
  senderFirstName  string
  senderLastName  string


export class Message
  constructor readonly key  string  private  content  string  private  senderId  number  private  senderFirstName  string
              private  senderLastName  string  private  createdAtTimestamp  number


  get content    string
    return this  content


  get senderId    number
    return this  senderId


  get senderFirstName    string
    return this  senderFirstName


  get senderLastName    string
    return this  senderLastName


  get createdAt    Date
    return new Date this  createdAtTimestamp


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   MessagesComponent   from    messages component

describe  Messages
  let component  MessagesComponent
  let service  any

  beforeEach
    service   jasmine createSpyObj  messageService     all    delete    create
    component   new MessagesComponent service


  describe  ngOnChanges
    it  assigns the sender id to the forms sender
      const sender    any   id  2
      component sender   sender
      component ngOnChanges
      expect component messageForm sender  toEqual sender



  describe  ngOnInit
    it  calls the message service
      const messages     id  2    id  4
      const messageObservable   Observable of messages
      component chatHash    test
      service all and returnValue messageObservable
      component ngOnInit
      expect service all  toHaveBeenCalledWith  test


    it  assigns the chat hash to the message form
      component chatHash    test
      component ngOnInit
      expect component messageForm chatHash  toEqual  test



  describe  isOwnMessage
    it  returns false if sender is not defined
      expect component isOwnMessage  any       toBe false


    it  returns false if sender is not sender of the message
      component sender    any   id  3
      expect component isOwnMessage  any   senderId  4    toBe false


    it  returns true if sender is sender of the message
      component sender    any   id  4
      expect component isOwnMessage  any   senderId  4    toBe true



  describe  isWorkOwner
    it  returns false if sender is not work owner
      component workOwnerId   3
      expect component isWorkOwner  any   senderId  4    toBe false


    it  returns true if sender is work owner
      component workOwnerId   4
      expect component isWorkOwner  any   senderId  4    toBe true



  describe  userTitle
    it  returns empty string if not work owner
      spyOn component   isWorkOwner   and returnValue false
      expect component userTitle undefined   toEqual


    it  returns the correct translation if work owner
      spyOn component   isWorkOwner   and returnValue true
      expect component userTitle undefined   toEqual I18n t chat messages customerTitle



  describe  onSubmit
    it  does nothing if message form is not valid
      spyOn component messageForm   isValid   and returnValue false
      component onSubmit
      expect service all  not toHaveBeenCalled


    it  calls message service and clears message form content if valid
      spyOn component messageForm   isValid   and returnValue true
      component messageForm content    test
      component onSubmit
      expect service create  toHaveBeenCalledWith component messageForm
      expect component messageForm content  toEqual



  describe  delete
    let event  any

    beforeEach
      event   jasmine createSpyObj  event     preventDefault


    describe  if user cancels confirmation
      beforeEach
        spyOn window   confirm   and returnValue false


      it  does nothing  just prevents the event
        component deleteMessage undefined  event
        expect service delete  not toHaveBeenCalled
        expect event preventDefault  toHaveBeenCalled



    describe  if user accepts confirmation
      beforeEach
        spyOn window   confirm   and returnValue true


      it  calls the service and prevents the event
        const message    any   id  3
        component chatHash    test
        component deleteMessage message  event
        expect service delete  toHaveBeenCalledWith  test   message
        expect event preventDefault  toHaveBeenCalled




import   Component  Input  OnChanges  OnInit   from   angular core
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   User   from        models user model
import   MessageForm   from    message form model
import   Message   from    message model
import   MessagesService   from    messages service

 Component
  templateUrl   messages component html
  styleUrls    messages component scss
  selector   my messages

export class MessagesComponent implements OnInit  OnChanges
   Input   chatHash  string
   Input   sender  User
   Input   helpText  string
   Input   workOwnerId  number

  i18n   I18n
  messageForm   new MessageForm
  messages  Observable Message

  constructor private messagesService  MessagesService

  ngOnInit    void
    this messages   this messagesService all this chatHash
    this messageForm chatHash   this chatHash


  ngOnChanges    void
    this messageForm sender   this sender


  isOwnMessage message  Message   boolean
    return   this sender    message senderId     this sender id


  isWorkOwner message  Message   boolean
    return message senderId     this workOwnerId


  userTitle message  Message   string
    if  this isWorkOwner message
      return this i18n t chat messages customerTitle

    return


  deleteMessage message  Message  event  Event   void
    event preventDefault
    if  confirm this i18n t chat messages deleteConfirm
      this messagesService delete this chatHash  message



  onSubmit
    if  this messageForm isValid
      this messagesService create this messageForm
      this messageForm content



import   Injectable   from   angular core
import   AngularFireDatabase  FirebaseListObservable   from  angularfire2 database
import   Observable   from  rxjs Observable
import   MessageApi   from        api endpoints message api service
import   MessageForm   from    message form model
import   FirebaseMessage  Message   from    message model

 Injectable
export class MessagesService
  constructor private db  AngularFireDatabase  private messageApi  MessageApi

  create messageForm  MessageForm
    this firebaseList messageForm chatHash  push messageForm serializeForFirebase
    this messageApi create messageForm serializeForApi


  all chatHash  string   Observable Message
    return Observable from this firebaseList chatHash   map
      serializedMessages    serializedMessages map
        serializedMessage    this deserializeFirebaseMessage serializedMessage




  delete chatHash  string  message  Message
      Check for key because otherwise the whole list gets deleted
    if  message key
      this firebaseList chatHash  remove message key



  private firebaseList chatHash  string   FirebaseListObservable FirebaseMessage
    return this db list   messages   chatHash
      query
        orderByChild   createdAtTimestamp




  private deserializeFirebaseMessage serializedMessage  FirebaseMessage
    return new Message
      serializedMessage  key
      serializedMessage content
      serializedMessage senderId
      serializedMessage senderFirstName
      serializedMessage senderLastName
      serializedMessage createdAtTimestamp



import   Component  Input  OnInit   from   angular core
import   I18n   from        i18n i18n
import   User   from        models user model
import   UserSessionService   from        services user session service
import   Contract   from        shared models contract model
import   Bill   from        shared models work states bill
import   Offer   from        shared models work states offer model
import   Receipt   from        shared models work states receipt
import   WorkChatService   from    work chat service

 Component
  selector   my private work chat
  templateUrl   private work chat component html

export class PrivateWorkChatComponent implements OnInit
   Input   work  Offer   Contract   Bill   Receipt
  i18n   I18n
  sender  User
  otherUser  User
  chatHash  string

  constructor private workChatService  WorkChatService  private userSessionService  UserSessionService

  ngOnInit
    this userSessionService currentUser   first   subscribe customer
      this sender   customer
      this setOtherUser customer
      this onOtherUserSet



  dataReady    boolean
    return   this sender      this chatHash


  private setOtherUser customer  User
    if  this work customer id     customer id
      this otherUser   this work talent user
      else
      this otherUser   this work customer



  private onOtherUserSet
    this workChatService getPrivateChatHash this work workDescription id  this otherUser id
       subscribe chatHash    this chatHash   chatHash


import   Component  Input  OnInit   from   angular core
import  rxjs add observable zip
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   User   from        models user model
import   UserSessionService   from        services user session service
import   WorkDescription   from        shared models work states work description model
import   WorkChatService   from    work chat service

 Component
  selector   my public work chat
  templateUrl   public work chat component html

export class PublicWorkChatComponent implements OnInit
   Input   work  WorkDescription
  i18n   I18n
  customer  User
  chatHash  string
  dataReady  boolean   false

  constructor private workChatService  WorkChatService  private userSessionService  UserSessionService

  ngOnInit
    Observable zip
      this workChatService getPublicChatHash this work id
      this userSessionService currentUser
      subscribe value
      this chatHash   value 0
      this customer   value 1
      this dataReady   true



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   ChatHashApi   from        api endpoints chat hash api service
import   WorkChatService   from    work chat service

describe  WorkChatService
  const api  ChatHashApi   new ChatHashApi null
  const service  WorkChatService   new WorkChatService api

  describe  getPublicChatHash
    it  returns the public chat hash   done
      spyOn api   getPublicChatHash   and returnValue Observable of  xyz
      service getPublicChatHash 1  subscribe  chatHash  string
        expect api getPublicChatHash  toHaveBeenCalledWith 1
        expect chatHash  toEqual  xyz
        done




  describe  getPrivateChatHash
    it  returns the public chat hash   done
      spyOn api   getPrivateChatHash   and returnValue Observable of  xyz
      service getPrivateChatHash 1  2  subscribe  chatHash  string
        expect api getPrivateChatHash  toHaveBeenCalledWith 1  2
        expect chatHash  toEqual  xyz
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   ChatHashApi   from        api endpoints chat hash api service

 Injectable
export class WorkChatService
  constructor private api  ChatHashApi

  getPublicChatHash workId  number   Observable string
    return this api getPublicChatHash workId


  getPrivateChatHash workId  number  otherUserId  number   Observable string
    return this api getPrivateChatHash workId  otherUserId


import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   PendingWork   from        shared models work states pending work model
import   CustomerArchivedWorkListComponent   from    customer archived work list component

describe  CustomerArchivedWorkListComponent
  let component  CustomerArchivedWorkListComponent
  let workService  any
  let route  any    queryParams
  let router  any
  const mockedResponse  Paginated PendingWork
    data   new PendingWork
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    router   jasmine createSpyObj  router     navigate
    workService   jasmine createSpyObj  workService     archivedWorks
    route    queryParams
    component   new CustomerArchivedWorkListComponent workService  route  router


  describe  ngOnInit
    beforeEach
      spyOn component   getWorks


    it  sets the page to the query param if given
      route queryParams   Observable of  page  2
      component ngOnInit
      expect component page  toEqual 2
      expect component getWorks  toHaveBeenCalled


    it  sets the page to 1 if the query param is undefined
      route queryParams   Observable of
      component ngOnInit
      expect component page  toEqual 1
      expect component getWorks  toHaveBeenCalled



  describe  status text
    it  returns text  that has been canceled
      expect component statusText  canceled    toBe I18n t customerArchive workState canceled


    it  returns text  that work is done
      expect component statusText  done    toBe I18n t customerArchive workState done



  describe  hasArchivedWorks
    it  returns false  if archivedWorks is undefined
      expect component hasArchivedWorks    toBe false


    it  returns false  if archivedWorks is empty
      component archivedWorks
      expect component hasArchivedWorks    toBe false


    it  returns true  if archivedWorks is not empty
      component archivedWorks    new PendingWork
      expect component hasArchivedWorks    toBe true



  describe  getWorks
    beforeEach
      workService archivedWorks and returnValue Observable of mockedResponse
      component page   2
      component getWorks


    it  sets archived works
      expect component archivedWorks  toEqual mockedResponse data


    it  sets totalCount
      expect component totalCount  toEqual mockedResponse meta totalCount


    it  uses the archivedWorks method of workService for getting data
      expect workService archivedWorks  toHaveBeenCalledWith 2



  describe  updateQueryParams
    it  serializes the page and calls the navigate function correctly
      component page   2
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  2
        relativeTo  route



    it  sets page to null if they are of default value
      component page   1
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  null
        relativeTo  route




  describe  pageChanged
    it  scrolls to the top
      spyOn window   scrollTo
      component pageChanged
      expect window scrollTo  toHaveBeenCalledWith 0  0



import   Component  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   WorkService   from        services work service
import   PendingWork   from        shared models work states pending work model
import   WorkStatus   from        shared models work states work types
import   PaginatedArchiveBase   from        shared paginated archive paginated archive base

 Component
  selector   my customer archive
  templateUrl   customer archived work list component html
  styleUrls       work list customer work list component scss

export class CustomerArchivedWorkListComponent extends PaginatedArchiveBase implements OnInit
  archivedWorks  PendingWork
  i18n   I18n

  constructor private workService  WorkService  protected route  ActivatedRoute  protected router  Router
    super route  router


  statusText workStatus  WorkStatus   string
    return this i18n t customerDashboard workState workStatus


  hasArchivedWorks    boolean
    return   this archivedWorks    this archivedWorks length   0


  getWorks
    this workService archivedWorks this page  subscribe jsonapiData    this onWorksFetched jsonapiData


  private onWorksFetched jsonapiData  Paginated PendingWork
    this totalCount   jsonapiData meta totalCount
    this archivedWorks   jsonapiData data
    window scrollTo 0  0


import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   ResponseError   from        mocks http mock
import   ReceiptService   from        services receipt service
import   Bill   from        shared models work states bill
import   Receipt   from        shared models work states receipt
import   CustomerBillDetailComponent   from    customer bill detail component

const contractPaymentMethod    any   original   payment method

function createBill
  const bill   new Bill
  bill id   5
  bill contract    any   paymentMethod  contractPaymentMethod
  return bill


function createReceipt
  const mockedReceipt   new Receipt
  mockedReceipt id   17
  return mockedReceipt


describe  CustomerBillDetailComponent
  let component  CustomerBillDetailComponent
  let selectPaymentMethodComponent  any
  let alertService  any
  const receiptService  ReceiptService    any   create
  const bill   createBill
  const paymentMethod    any   some   payment method
  const anotherPaymentMethod    any   another   payment method

  beforeEach
    alertService   jasmine createSpyObj  alertService     success    danger    wait    clearAll
    component   new CustomerBillDetailComponent receiptService  alertService
    component bill   bill

    selectPaymentMethodComponent   jasmine createSpyObj  selectPaymentMethodComponent     isValid    preparePaymentMethodForContract
    selectPaymentMethodComponent preparePaymentMethodForContract and returnValue Observable of paymentMethod
    selectPaymentMethodComponent isValid and returnValue false
    component selectPaymentMethodComponent   selectPaymentMethodComponent
    component ngOnInit


  describe  submit
    it  is successful
      const receipt   createReceipt
      spyOn receiptService   create   and returnValue Observable of receipt
      component submit
      expect receiptService create  toHaveBeenCalledWith bill  component selectedPaymentMethod
      expect alertService wait  toHaveBeenCalledWith I18n t customerBillDetail processingBillPayment
      expect alertService clearAll  toHaveBeenCalled
      expect alertService success  toHaveBeenCalledWith I18n t customerBillDetail receiptCreatedSuccess
      expect component receipt  toEqual receipt
      expect component hideRating  toBe false


    describe  when user decides to take another payment method but have not tried the original one
      beforeEach
        spyOn receiptService   create   and returnValue Observable of null
        selectPaymentMethodComponent preparePaymentMethodForContract and returnValue Observable of anotherPaymentMethod
        selectPaymentMethodComponent isValid and returnValue true


      it  passes it to the receipt creation service
        component submit
        expect receiptService create  toHaveBeenCalledWith bill  anotherPaymentMethod
        expect component selectedPaymentMethod  toEqual anotherPaymentMethod



    it  is failing
      spyOn receiptService   create   and returnValue Observable throw new ResponseError
      component submit
      expect receiptService create  toHaveBeenCalledWith bill  component selectedPaymentMethod
      expect alertService clearAll  toHaveBeenCalled
      expect alertService danger  toHaveBeenCalledWith I18n t customerBillDetail receiptCreatedError
      expect component hideRating  toBe true
      expect component isPaymentFailed  toBe true


    describe  when payment has failed
      beforeEach
        component isPaymentFailed   true


      describe  when a new payment method has been selected
        beforeEach
          spyOn receiptService   create   and returnValue Observable of null
          selectPaymentMethodComponent preparePaymentMethodForContract and returnValue Observable of anotherPaymentMethod
          selectPaymentMethodComponent isValid and returnValue true


        it  passes it to the receipt creation service
          component submit
          expect receiptService create  toHaveBeenCalledWith bill  anotherPaymentMethod
          expect component selectedPaymentMethod  toEqual anotherPaymentMethod


        it  doesn  t request a receipt if the payment method subform isn  t valid
          selectPaymentMethodComponent isValid and returnValue false
          expect component formSent  toBe false
          expect receiptService create  not toHaveBeenCalled





  describe  isAbleToRate
    beforeEach
      component receipt    any   workDescription   status   rating


    it  returns true if receipt is present and status is rating
      expect component isAbleToRate    toEqual true


    it  return false if status is not rating
      component receipt workDescription status    done
      expect component isAbleToRate    toEqual false


    it  return false if there is no receipt
      component receipt   undefined
      expect component isAbleToRate    toEqual false



import   Component  Input  OnInit  ViewChild   from   angular core
import   AlertService   from        alerts alerts service
import   I18n   from        i18n i18n
import   PaymentMethod   from        payment payment method model
import   SelectPaymentMethodComponent   from        payment payment methods select payment method component
import   ReceiptService   from        services receipt service
import   Bill   from        shared models work states bill
import   Receipt   from        shared models work states receipt

 Component
  selector   my customer bill detail
  templateUrl   customer bill detail component html
  styleUrls    customer bill detail component scss          shared collapsible collapsible component scss

export class CustomerBillDetailComponent implements OnInit
   ViewChild SelectPaymentMethodComponent  selectPaymentMethodComponent  SelectPaymentMethodComponent
   Input   bill  Bill
  i18n   I18n
  formSent   false
  receipt  Receipt
  hideRating   true
  isPaymentFailed   false
  selectedPaymentMethod  PaymentMethod

  constructor private receiptService  ReceiptService  private alertService  AlertService

  ngOnInit
    this selectedPaymentMethod   this bill contract paymentMethod


  submit
    if  this isPaymentFailed     this selectPaymentMethodComponent isValid      return
    this formSent   true
    this alertService wait this i18n t customerBillDetail processingBillPayment
    if  this selectPaymentMethodComponent isValid
      this retrieveCopiedPaymentMethod   subscribe       this createReceipt
      else
      this createReceipt



  private retrieveCopiedPaymentMethod
    return this selectPaymentMethodComponent preparePaymentMethodForContract
       map paymentMethod
        this selectedPaymentMethod   paymentMethod
        return paymentMethod



  private createReceipt
    this receiptService create this bill  this selectedPaymentMethod
       subscribe receipt    this onSuccess receipt         this onError


  private onSuccess receipt  Receipt
    this alertService clearAll
    this alertService success I18n t customerBillDetail receiptCreatedSuccess
    this receipt   receipt
    this openCollapsible


  private onError
    this formSent   false
    this isPaymentFailed   true
    this alertService clearAll
    this alertService danger I18n t customerBillDetail receiptCreatedError


  private openCollapsible
    this hideRating   false
    window scrollTo 0  0


  isAbleToRate    boolean
    return   this receipt    this receipt workDescription status      rating


import   Component  Input   from   angular core
import   I18n   from        i18n i18n
import   Contract   from        shared models contract model

 Component
  selector   my customer contract detail
  templateUrl   customer contract detail component html

export class CustomerContractDetailComponent
   Input   contract  Contract
  i18n   I18n

import   NgModule   from   angular core
import   RouterModule   from   angular router
import   TALENT BROWSE   from     public browse public browse routing module
import   AuthGuardService   from     services auth guard service
import   ReceiptDetailResolver   from     services receipt detail resolver service
import   WorkDetailResolver   from     services work detail resolver service
import   CustomerOnboardingShowComponent   from    onboarding customer onboarding show component
import   CustomerReceiptCustomerComponent   from    receipt customer receipt customer component
import   CustomerWorkDetailComponent   from    work detail customer work detail component
import   CustomerWorkEditComponent   from    work edit customer work edit component

 NgModule
  imports
    RouterModule forChild
        These are the new routes  to be completed as you work with it

        path   my works   canActivate   AuthGuardService
        children
           path      redirectTo    dashboard   pathMatch   full

            path    id
            resolve   pendingWork  WorkDetailResolver
            children
               path      redirectTo   overview   pathMatch   full
               path   edit   component  CustomerWorkEditComponent
               path    tab   component  CustomerWorkDetailComponent



        These are the deprecated routes

        path   customer   canActivate   AuthGuardService
        children

            path   works
            children
               path      redirectTo    dashboard   pathMatch   full
               path   pending   redirectTo    dashboard   pathMatch   full

                path   receipts
                children

                      TODO  move rename this route
                    path   bill  id   component  CustomerReceiptCustomerComponent
                    resolve   receipt  ReceiptDetailResolver





           path   onboarding   component  CustomerOnboardingShowComponent
          TALENT BROWSE



  exports   RouterModule

export class CustomerRoutingModule

import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   NgxErrorsModule   from   ultimate ngxerrors
import   ModalModule   from  ng2 bootstrap modal
import   PaginationModule   from  ng2 bootstrap pagination
import   AddressSelectorModule   from     address selector address selector module
import   ApiModule   from     api api module
import   AuthenticationModule   from     authentication authentication module
import   ChatModule   from     chat chat module
import   PaymentModule   from     payment payment module
import   PublicBrowseRoutingModule   from     public browse public browse routing module
import   PublicBrowseModule   from     public browse public browse module
import   CustomerRatesTalentService   from     services customer rates talent service
import   WorkDetailResolver   from     services work detail resolver service
import   CustomFormElementModule   from     shared custom form element module
import   TalentCustomerSharedModule   from     shared talent customer shared module
import   CustomerBillDetailComponent   from    bill customer bill detail component
import   CustomerContractDetailComponent   from    contract customer contract detail component
import   CustomerRoutingModule   from    customer routing module
import   CustomerInvitationListComponent   from    invitation customer invitation list component
import   CustomerOfferAcceptComponent   from    offer accept customer offer accept component
import   CustomerOfferDetailComponent   from    offer detail customer offer detail component
import   CustomerOfferShowComponent   from    offer show customer offer show component
import   UserProfileInputComponent   from    offer user profile input user profile input component
import   CustomerOnboardingShowComponent   from    onboarding customer onboarding show component
import   CustomerRatesTalentComponent   from    rating customer rates talent component
import   CustomerReceiptCustomerComponent   from    receipt customer receipt customer component
import   SelectedTalentListComponent   from    work request selected talent list selected talent list component
import   TalentListComponent   from    work request talent list talent list component
import   ArchivedWorkDetailComponent   from    work detail archived work detail component
import   CustomerWorkDetailComponent   from    work detail customer work detail component
import   PendingWorkDetailComponent   from    work detail pending work detail component
import   CustomerWorkEditComponent   from    work edit customer work edit component

 NgModule
  imports
    AddressSelectorModule
    ChatModule
    CommonModule
    FormsModule
    ReactiveFormsModule
    PaginationModule forRoot
    ApiModule
    PaymentModule
    PublicBrowseRoutingModule
    CustomerRoutingModule
    PublicBrowseModule
    CustomFormElementModule
    TalentCustomerSharedModule
    AuthenticationModule
    NgxErrorsModule
    ModalModule forRoot

  declarations
    ArchivedWorkDetailComponent
    CustomerBillDetailComponent
    CustomerContractDetailComponent
    CustomerInvitationListComponent
    CustomerOfferAcceptComponent
    CustomerOfferDetailComponent
    CustomerOfferShowComponent
    CustomerOnboardingShowComponent
    CustomerRatesTalentComponent
    CustomerReceiptCustomerComponent
    CustomerWorkDetailComponent
    CustomerWorkEditComponent
    PendingWorkDetailComponent
    SelectedTalentListComponent
    TalentListComponent
    UserProfileInputComponent

  exports
  providers
    CustomerRatesTalentService
    WorkDetailResolver


export class CustomerModule

import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   DeclinedInvitation   from        shared models work states declined invitation model
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model
import   CustomerInvitationListComponent   from    customer invitation list component

describe  CustomerInvitationListComponent
  let workService  any
  let component  CustomerInvitationListComponent

  beforeEach
    workService   jasmine createSpyObj  workService     addWorkInvitation    deleteWorkInvitation
    component   new CustomerInvitationListComponent workService


  function createTalentWithId id  number
    const talent   new Talent
    talent id   id
    return talent


  function createWorkInvitation id  number  talent  Talent
    const workInvitation   new WorkInvitation
    workInvitation id   id
    workInvitation talent   talent
    return workInvitation


  describe  getStatusText
    it  shows declined by customer  if that is the case
      expect component getWorkInvitationStatusText  any   declinedInvitation   declinedBy   customer
         toEqual I18n t customerInvitations status declinedByCustomer


    it  shows declined by talent  if that is the case
      expect component getWorkInvitationStatusText  any   declinedInvitation   declinedBy   talent
         toEqual I18n t customerInvitations status declinedByTalent


    it  shows pending  if has no declined invitation and is not archived
      expect component getWorkInvitationStatusText  any
         toEqual I18n t customerInvitations status pending


    it  shows offering  if has no declined invitation and is archived n
      expect component getWorkInvitationStatusText  any   archivedAt  new Date
         toEqual I18n t customerInvitations status offer



  describe  getWorkInvitationStatusColor
    it  shows info if has a declined work invitation
      expect component getWorkInvitationStatusColor  any   declinedInvitation   declinedBy   customer      toEqual  info
      expect component getWorkInvitationStatusColor  any   declinedInvitation   declinedBy   talent      toEqual  info


    it  shows action if has no declined work invitation an is archived  e g  offer is available
      expect component getWorkInvitationStatusColor  any   archivedAt  new Date      toEqual  action


    it  shows wait if has no declined Work invitation an is not archived
      expect component getWorkInvitationStatusColor  any       toEqual  wait



  describe  inviteTalents
    const talents  Talent      createTalentWithId 1   createTalentWithId 2
    const workDescription  WorkDescription   new WorkDescription

    beforeEach
      component workDescription   workDescription
      workService addWorkInvitation and returnValues
        Observable of createWorkInvitation 5  talents 0
        Observable of createWorkInvitation 6  talents 1
        Observable of createWorkInvitation 7  talents 3



    it  calls the work service
      component inviteTalents talents
      expect workService addWorkInvitation  toHaveBeenCalledTimes 2
      expect workService addWorkInvitation  toHaveBeenCalledWith workDescription  talents 0
      expect workService addWorkInvitation  toHaveBeenCalledWith workDescription  talents 1


    it  adds the work invitations to the components collection
      expect component workInvitations length  toBe 0
      component inviteTalents talents
      expect component workInvitations length  toBe 2
      expect component workInvitations 0  talent id  toBe 1
      expect component workInvitations 1  talent id  toBe 2
      expect component workInvitations 0  id  toBe 5
      expect component workInvitations 1  id  toBe 6


    it  does not re add talents which are already invited
      component inviteTalents talents
      component inviteTalents  createTalentWithId 1   createTalentWithId 3
      expect component workInvitations length  toBe 3
      expect workService addWorkInvitation  toHaveBeenCalledTimes 3



  describe  invitedTalents
    it  returns a list of all talents according to the given work invitations
      component workInvitations    any   createWorkInvitation 1  createTalentWithId 2    createWorkInvitation 3  createTalentWithId 4
      expect component invitedTalents   0   toEqual jasmine any Talent
      expect component invitedTalents   0  id  toBe 2
      expect component invitedTalents   1   toEqual jasmine any Talent
      expect component invitedTalents   1  id  toBe 4



  describe  declineWorkInvitation
    let invitationOriginal  WorkInvitation
    let invitationAfterDecline  WorkInvitation

    beforeEach
      invitationOriginal   new WorkInvitation
      invitationAfterDecline   new WorkInvitation
      invitationOriginal id   3
      component workInvitations    invitationOriginal
      invitationAfterDecline id   3
      invitationAfterDecline declinedInvitation   new DeclinedInvitation
      spyOn component workInvitationsChange   emit
      workService deleteWorkInvitation and returnValue Observable of invitationAfterDecline


    it  calls the work service
      component declineWorkInvitation invitationOriginal
      expect workService deleteWorkInvitation  toHaveBeenCalledWith invitationOriginal


    it  replaces the work invitation with the response and like this has a declined invitation
      expect component workInvitations 0  declinedInvitation  toBeUndefined
      component declineWorkInvitation invitationOriginal
      expect component workInvitations 0  declinedInvitation  toEqual invitationAfterDecline declinedInvitation


    it  calls emit of the emiter
      component declineWorkInvitation invitationOriginal
      expect component workInvitationsChange emit  toHaveBeenCalledWith component workInvitations



  describe  isDeclineable
    it  returns true if has no declinedInvitation
      expect component isDeclineable  any       toBe true


    it  returns false if has declinedInvitation
      expect component isDeclineable  any   archivedAt  new Date      toBe false



import   Component  EventEmitter  Input  Output   from   angular core
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   WorkService   from        services work service
import   WorkDescription   from        shared models work states work description model
import   WorkInvitation   from        shared models work states work invitation model

 Component
  selector   my customer invitation list
  templateUrl   customer invitation list component html
  styleUrls       shared compact talent list scss    customer invitation list component scss

export class CustomerInvitationListComponent
   Input   workDescription  WorkDescription
   Input   workInvitations  WorkInvitation
   Output   workInvitationsChange   new EventEmitter WorkInvitation
  i18n   I18n

  constructor private workService  WorkService

  getWorkInvitationStatusText workInvitation  WorkInvitation
    if  workInvitation declinedInvitation
      return workInvitation declinedInvitation declinedBy      customer
        this i18n t customerInvitations status declinedByCustomer   this i18n t customerInvitations status declinedByTalent
      else if  workInvitation archivedAt
      return this i18n t customerInvitations status offer

    return this i18n t customerInvitations status pending


  getWorkInvitationStatusColor workInvitation  WorkInvitation
    return workInvitation declinedInvitation    info     workInvitation archivedAt    action     wait


  declineWorkInvitation workInvitation  WorkInvitation
    this workService deleteWorkInvitation workInvitation  subscribe newInvitation
      this workInvitations   this workInvitations map invitation     invitation id     workInvitation id    newInvitation   invitation
      this workInvitationsChange emit this workInvitations



  inviteTalents talents  Talent
    talents forEach talent    this addWorkInvitation talent


  invitedTalents
    return this workInvitations map workInvitation    workInvitation talent


  private addWorkInvitation talent  Talent
    if   this workInvitations some localWorkInvitation    localWorkInvitation talent id     talent id
      return this workService addWorkInvitation this workDescription  talent  subscribe workInvitation
        this workInvitations push workInvitation




  isDeclineable workInvitation  WorkInvitation   boolean
    return  workInvitation archivedAt


import   CustomerOfferAcceptModalComponent   from    customer offer accept modal component

describe  CustomerOfferAcceptModalComponent
  let component  CustomerOfferAcceptModalComponent

  beforeEach
    component   new CustomerOfferAcceptModalComponent
    component offerAcceptModal   jasmine createSpyObj  offerAcceptModal     show    hide


  describe  cancel
    it  hides the modal
      component cancel
      expect component offerAcceptModal hide  toHaveBeenCalled



  describe  show
    it  shows the modal
      component show
      expect component offerAcceptModal show  toHaveBeenCalled



import   Component  EventEmitter  Output  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from           i18n i18n

 Component
  selector   my offer accept modal
  templateUrl   customer offer accept modal component html

export class CustomerOfferAcceptModalComponent
   Output   result  EventEmitter void    new EventEmitter void
   ViewChild  offerAcceptModal   offerAcceptModal  ModalDirective
  i18n   I18n

  cancel
    this offerAcceptModal hide


  submit
    this result emit
    this offerAcceptModal hide


  show
    this offerAcceptModal show


import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   User   from           models user model
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   PossibleTime   from           shared models possible time model
import   Offer   from           shared models work states offer model
import   PhoneNumberFormatterService   from           utils phone number formatter service
import   CustomerOfferAcceptComponent   from    customer offer accept component

describe  OfferAcceptComponent
  const offer   new Offer
  const formBuilder   new FormBuilder
  const formatter   new PhoneNumberFormatterService
  let userSessionService  any
  let userService  any
  let contractService  any
  let alertService  any
  let router  any
  let formHelper  any
  let googleAnalytics  any
  let component  CustomerOfferAcceptComponent

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    userService   jasmine createSpyObj  userService     update
    contractService   jasmine createSpyObj  contractService     create
    alertService   jasmine createSpyObj  alertService     success    danger
    router   jasmine createSpyObj  router     navigate
    formHelper   jasmine createSpyObj  formHelper     setAsTouched
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent

    component   new CustomerOfferAcceptComponent contractService  router  alertService  formatter
      userService  formBuilder  formHelper  googleAnalytics
    component offer   offer


  describe  ngOnInit
    it  builds the form
      component offer customer   new User
      expect component customerForm  toBeUndefined
      component ngOnInit
      expect component customerForm  toEqual jasmine any FormGroup



  describe  setPossibleTime
    it  sets the chosen time
      const time    any   some   time
      component setPossibleTime time
      expect component chosenTime  toEqual time



  describe  isCustomerDataComplete
    beforeEach
      component customer   new User
      component customer phoneNumber    1233
      component customer firstName    Hans
      component customer address   new Geolocation  zip   lo   city   ca   country   tio   street   n


    it  returns true if everything is given
      expect component isCustomerDataComplete    toEqual true


    it  returns false if firstName is missing
      component customer firstName   undefined
      expect component isCustomerDataComplete    toEqual false


    it  returns false if phoneNumber is missing
      component customer phoneNumber   undefined
      expect component isCustomerDataComplete    toEqual false


    it  returns false if address is missing
      component customer address   undefined
      expect component isCustomerDataComplete    toEqual false


    it  returns false if address is not complete
      component customer address   new Geolocation  zip   8000   city   Loo   country   bla   street
      expect component isCustomerDataComplete    toEqual false



  describe  isFormValid
    let selectPaymentMethodComponent  any

    beforeEach
      selectPaymentMethodComponent   jasmine createSpyObj  selectPaymentMethodComponent     isValid
      component offer    any   chosenTimes   new PossibleTime new Date     new PossibleTime new Date
      component customerForm    any   valid  true
      component selectPaymentMethodComponent   selectPaymentMethodComponent
      component setPossibleTime new PossibleTime new Date
      selectPaymentMethodComponent isValid and returnValue true


    it  is valid if all required informations are available
      expect component isFormValid    toBe true


    it  is not valid if payment method selection is invalid
      selectPaymentMethodComponent isValid and returnValue false
      expect component isFormValid    toBe false


    describe  isCustomerFormValid
      it  is not valid if customer profile form is invalid
        component collapsed   false
        component customerForm    any   valid  false
        expect component isFormValid    toBe false


      it  is valid if customer profile form is valid
        component collapsed   false
        component customerForm    any   valid  true
        expect component isFormValid    toBe true



    describe  isChosenTimeValid
      it  is invalid if customer could chose between dates and selected none
        component setPossibleTime undefined
        expect component isFormValid    toBe false


      it  is valid if talent just suggested one time and none selected
        component offer chosenTimes    new PossibleTime new Date
        component setPossibleTime undefined
        expect component isFormValid    toBe true




  describe  submit
    describe  onSucces
      let selectPaymentMethodComponent  any
      beforeEach
        selectPaymentMethodComponent   jasmine createSpyObj  selectPaymentMethodComponent     preparePaymentMethodForContract
        component selectPaymentMethodComponent   selectPaymentMethodComponent
        spyOn component   isCustomerDataComplete   and returnValue true
        spyOn component   isFormValid   and returnValue true
        selectPaymentMethodComponent preparePaymentMethodForContract and returnValue Observable of  some   payment method
        userService update and returnValue Observable of  some   user
        contractService create and returnValue Observable of  some   contract


      it  calls everything but not the user service if collapsed is true
        component submit
        expect formHelper setAsTouched  toHaveBeenCalled
        expect component submitted  toEqual true
        expect contractService create  toHaveBeenCalled
        expect alertService success  toHaveBeenCalledWith I18n t customerContractNew success
        expect userService update  not toHaveBeenCalled
        expect router navigate  toHaveBeenCalledWith    dashboard


      it  calls the user service update if collapsed is false
        component collapsed   false
        spyOn component   mergeFormWithCustomer
        component submit
        expect userService update  toHaveBeenCalled
        expect alertService success  toHaveBeenCalledWith I18n t customerContractNew success
        expect router navigate  toHaveBeenCalledWith    dashboard


      it  calls the GoogleAnalyticsEventsService
        component submit
        expect googleAnalytics emitEvent  toHaveBeenCalledWith  Offer    accepted



    it  sets collapsed to false if customer data is not complete
      spyOn component   isCustomerDataComplete   and returnValue false
      spyOn component   isFormValid   and returnValue false
      component submit
      expect component collapsed  toEqual false



import   Component  Input  OnInit  ViewChild   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   Router   from   angular router
import  rxjs add operator map
import  rxjs add operator zip
import   Observable   from  rxjs Observable
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   User   from           models user model
import   PaymentMethod   from           payment payment method model
import   SelectPaymentMethodComponent   from           payment payment methods select payment method component
import   ContractService   from           services contract service
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   UserService   from           services user service
import   FormBase   from           shared form base form base
import   PossibleTime   from           shared models possible time model
import   Offer   from           shared models work states offer model
import   FormHelper   from           utils form helper
import   MyValidators   from           utils my validators
import   PhoneNumberFormatterService   from           utils phone number formatter service

 Component
  selector   my offer accept
  templateUrl   customer offer accept component html
  styleUrls    customer offer accept component scss

export class CustomerOfferAcceptComponent extends FormBase implements OnInit
   ViewChild SelectPaymentMethodComponent  selectPaymentMethodComponent  SelectPaymentMethodComponent
   Input   offer  Offer
  i18n   I18n
  customer  User
  customerForm  FormGroup
  formSent   false
  collapsed   true
  chosenTime  PossibleTime

  constructor private contractService  ContractService
              private router  Router  private alertService  AlertService
              private mobileNumberFormatter  PhoneNumberFormatterService  private userService  UserService
              private formBuilder  FormBuilder  private formHelper  FormHelper
              private googleAnalyticsEventsService  GoogleAnalyticsEventsService    super

  ngOnInit
    this customer   this offer customer
    this buildForm


  private buildForm
    this customerForm   this formBuilder group
      firstName  new FormControl this customer firstName   MyValidators present
      lastName  new FormControl this customer lastName   MyValidators present
      phoneNumber  new FormControl this customer phoneNumber   Validators pattern this mobileNumberFormatter mobileNumberPattern
      address  new FormControl this customer address   Validators required  MyValidators address



  setPossibleTime possibleTime  PossibleTime
    this chosenTime   possibleTime


  isCustomerDataComplete    boolean
    return   this customer phoneNumber      this customer address    this customer address hasAllAttributes        this customer firstName


  isFormValid    boolean
    return this isCustomerFormValid      this selectPaymentMethodComponent isValid      this isChosenTimeValid


  private isChosenTimeValid    boolean
    return this offer chosenTimes length     1      this chosenTime


  private isCustomerFormValid
    return this collapsed    this customerForm valid


  submit
    this formHelper setAsTouched this customerForm
    this submitted   true
    if   this isCustomerDataComplete      this collapsed   false
    if   this isFormValid      return
    this formSent   true
    const preparePaymentMethod   this selectPaymentMethodComponent preparePaymentMethodForContract
    const updateCustomer   this updateCustomer

    preparePaymentMethod
       zip updateCustomer
       map  values  any       values 0
       subscribe  paymentMethod  PaymentMethod     this acceptOffer paymentMethod         this onError


  private updateCustomer    Observable User
    if  this collapsed    return Observable of this customer
    this mergeFormWithCustomer
    return this userService update this customer


  mergeFormWithCustomer
    Object assign this customer  this customerForm value


  showTimeAlert    boolean
    return this submitted     this chosenTime


  private acceptOffer paymentMethod  PaymentMethod
    this contractService create this offer id  paymentMethod id  this chosenTime  subscribe
            this onSuccess
            this onError


  private onSuccess
    this alertService success I18n t customerContractNew success
    this googleAnalyticsEventsService emitEvent  Offer    accepted
    this router navigate    dashboard


  private onError
    this alertService danger I18n t customerContractNew error
    this formSent   false


import   CustomerOfferDeclineModalComponent   from    customer offer decline modal component

describe  CustomerOfferDeclineModalComponent
  let component  CustomerOfferDeclineModalComponent

  beforeEach
    component   new CustomerOfferDeclineModalComponent
    component offerDeclineModal   jasmine createSpyObj  offerDeclineModal     show    hide


  describe  ngOnInit
    it  assigns the first item in defaultReasonItems to reason
      component reason
      component defaultReasonItems     test1    test2
      component ngOnInit
      expect component reason  toEqual  test1



  describe  cancel
    it  hides the modal
      component cancel
      expect component offerDeclineModal hide  toHaveBeenCalled



  describe  show
    it  shows the modal
      component show
      expect component offerDeclineModal show  toHaveBeenCalled



  describe  isValid
    beforeEach
      component reason
      component reasonText


    it  returns false if no reason and no reasonText is provided
      expect component isValid    toBe false


    it  returns true if reason is provided
      component reason    test
      expect component isValid    toBe true


    it  returns true if reasonText is provided
      component reasonText    test
      expect component isValid    toBe true


    it  returns true if reason and reasonText is provided
      component reason    test
      component reasonText    test
      expect component isValid    toBe true



  describe  submit
    beforeEach
      spyOn component reasonSelected   emit
      component reason    test
      component reasonText    test2


    it  emits the reason if given
      component submit
      expect component reasonSelected emit  toHaveBeenCalledWith  test


    it  emits the reasonText if no reason given
      component reason
      component submit
      expect component reasonSelected emit  toHaveBeenCalledWith  test2


    it  hides the modal
      component submit
      expect component offerDeclineModal hide  toHaveBeenCalled



import   Component  EventEmitter  Input  OnInit  Output  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from           i18n i18n

 Component
  selector   my offer decline modal
  templateUrl   customer offer decline modal component html
  styleUrls    customer offer decline modal component scss

export class CustomerOfferDeclineModalComponent implements OnInit
   Input   defaultReasonItems   string
   Output   reasonSelected  EventEmitter string    new EventEmitter string
   ViewChild  offerDeclineModal   offerDeclineModal  ModalDirective
  i18n   I18n
  reason  string
  reasonText  string

  ngOnInit
    this reason   this defaultReasonItems 0


  cancel
    this offerDeclineModal hide


  isValid    boolean
    return   this reason      this reasonText


  submit
    this reasonSelected emit this reason    this reasonText
    this offerDeclineModal hide


  show
    this offerDeclineModal show


import   I18n   from           i18n i18n
import   CustomerOfferDetailComponent   from    customer offer detail component

describe  CustomerOfferDetailComponent
  let component  CustomerOfferDetailComponent

  beforeEach
    component   new CustomerOfferDetailComponent


  describe  pendingOffers and archivedOffers
    beforeEach
      component offers    any    archivedAt  new Date      archivedAt  undefined    archivedAt  undefined


    it  returns the pending offers
      expect component pendingOffers   length  toEqual 2


    it  returns the archived offers
      expect component archivedOffers   length  toEqual 1



  describe  noOfferText
    it  returns the text for private works if the work is private
      component workIsPublic   false
      expect component noOfferText    toEqual I18n t customerOfferDetail noOffersForPrivateWork


    it  returns the text for public works if the work is public
      component workIsPublic   true
      expect component noOfferText    toEqual I18n t customerOfferDetail noOffersForPublicWork



import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   Offer   from           shared models work states offer model

 Component
  selector   my customer offer detail
  templateUrl   customer offer detail component html

export class CustomerOfferDetailComponent
  i18n   I18n
   Input   offers  Offer
   Input   workIsPublic  boolean

  pendingOffers    Offer
    return this offers filter offer     offer archivedAt


  archivedOffers    Offer
    return this offers filter offer    offer archivedAt


  noOfferText    string
    return this workIsPublic
      this i18n t customerOfferDetail noOffersForPublicWork   this i18n t customerOfferDetail noOffersForPrivateWork


import   FormBuilder   from   angular forms
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   User   from           models user model
import   PaymentMethod   from           payment payment method model
import   SelectPaymentMethodComponent   from           payment payment methods select payment method component
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   CollapsibleLinkComponent   from           shared collapsible collapsible link component
import   Offer   from           shared models work states offer model
import   PhoneNumberFormatterService   from           utils phone number formatter service
import   CustomerOfferAcceptComponent   from     accept customer offer accept component
import   CustomerOfferShowComponent   from    customer offer show component

describe  CustomerOfferShowComponent
  let component  CustomerOfferShowComponent
  let offerService  any
  let alertService  any
  let nativeElement  any
  let mockHostElement  any
  let mockRoute  any

  beforeEach
    offerService   jasmine createSpyObj  offerService     declineOffer
    alertService   jasmine createSpyObj  alertService     success    danger

    nativeElement   jasmine createSpyObj  nativeElement     scrollIntoView
    mockHostElement    nativeElement
    mockRoute    fragment  Observable of
    component   new CustomerOfferShowComponent offerService  alertService  mockRoute  mockHostElement


  function buildOffer id   1
    const offer   new Offer
    offer customer   new User  id  1  email   test example com
    offer id   id
    return offer


  function buildSelectPaymentMethodComponent
    const paymentMethodsService   jasmine createSpyObj  paymentMethodsService     allVisible
    const selectPaymentMethodComponent   new SelectPaymentMethodComponent paymentMethodsService
    selectPaymentMethodComponent paymentMethods    new PaymentMethod 1   abcd   true  null
    return selectPaymentMethodComponent


  function buildCustomerOfferAcceptComponent
    const userService   jasmine createSpyObj  userService     update
    const contractService   jasmine createSpyObj  contractService     create
    const router   jasmine createSpyObj  router     navigate
    const formatter   new PhoneNumberFormatterService
    const formBuilder   new FormBuilder
    const formHelper   jasmine createSpyObj  formHelper     setAsTouched
    const googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent

    const offerComponent   new CustomerOfferAcceptComponent contractService  router  alertService  formatter
      userService  formBuilder  formHelper  googleAnalytics

    offerComponent selectPaymentMethodComponent   buildSelectPaymentMethodComponent
    offerComponent offer   buildOffer
    offerComponent ngOnInit
    return offerComponent


  describe  submit
    beforeEach
      component offerAccept   buildCustomerOfferAcceptComponent
      component collapsibleDetails   new CollapsibleLinkComponent


    describe  when the details are collapsed
      beforeEach       component collapsibleDetails collapsed   true

      it  selects the first payment option
        spyOn component offerAccept selectPaymentMethodComponent   selectFirst
        component submit
        expect component offerAccept selectPaymentMethodComponent selectFirst  toHaveBeenCalled


      it  uncollapse it if the form is invalid
        spyOn component offerAccept   isFormValid   and returnValue false
        component submit
        expect component collapsibleDetails collapsed  toBe false




  describe  isSubmitDisabled
    beforeEach
      component offerAccept   buildCustomerOfferAcceptComponent
      component collapsibleDetails   new CollapsibleLinkComponent


    it  returns true when there are errors to show
      spyOn component offerAccept   showMissingAttributesError   and returnValue true
      expect component isSubmitDisabled  toBe true


    it  returns true when form is sent
      component offerAccept formSent   true
      expect component isSubmitDisabled  toBe true


    it  returns false otherwise
      expect component isSubmitDisabled  toBe false



  describe  declineOffer
    beforeEach
      component offer   buildOffer 3


    it  sets the offer archived and creates an alert if it is successful
      const declinedOffer    offer   archivedAt  new Date
      offerService declineOffer and returnValue Observable of declinedOffer
      component declineOffer  some reason
      expect offerService declineOffer  toHaveBeenCalledWith 3   some reason
      expect alertService success  toHaveBeenCalledWith I18n t customerContractNew declineSuccess
      expect component offer archivedAt  toEqual declinedOffer offer archivedAt



  describe  ngOnInit
    beforeEach
      component offer   buildOffer 4


    describe  when fragment belongs to current offer
      beforeEach
        mockRoute fragment   Observable of  offer 4


      it  scrolls to into view
        component ngOnInit
        expect nativeElement scrollIntoView  toHaveBeenCalled


      it  sets isFocused to true
        component ngOnInit
        expect component isFocused  toBe true



    describe  when fragment belongs to another offer
      beforeEach
        mockRoute fragment   Observable of  offer no mine


      it  scrolls to into view
        component ngOnInit
        expect nativeElement scrollIntoView  not toHaveBeenCalled


      it  does not change isFocused
        component ngOnInit
        expect component isFocused  toBe false




  describe  openDeclineModal
    let event  any

    beforeEach
      event   jasmine createSpyObj  event     preventDefault
      component declineModal   jasmine createSpyObj  declineModal     show
      component openDeclineModal event


    it  calls the open method on the decline modal view child
      expect component declineModal show  toHaveBeenCalled


    it  prevents the default
      expect event preventDefault  toHaveBeenCalled



  describe  openAcceptModal
    let event  any

    beforeEach
      event   jasmine createSpyObj  event     preventDefault
      component acceptModal   jasmine createSpyObj  acceptModal     show
      component openAcceptModal event


    it  calls the open method on the accept modal view child
      expect component acceptModal show  toHaveBeenCalled


    it  prevents the default
      expect event preventDefault  toHaveBeenCalled



import   Component  ElementRef  Input  OnInit  ViewChild   from   angular core
import   ActivatedRoute   from   angular router
import   ModalDirective   from  ng2 bootstrap modal
import   AlertService   from           alerts
import   I18n   from           i18n i18n
import   OfferService   from           services offer service
import   CollapsibleLinkComponent   from           shared collapsible collapsible link component
import   Offer   from           shared models work states offer model
import   CustomerOfferAcceptComponent   from     accept customer offer accept component

 Component
  selector   my customer offer show
  templateUrl   customer offer show component html
  styleUrls    customer offer show component scss

export class CustomerOfferShowComponent implements OnInit
   ViewChild CustomerOfferAcceptComponent  offerAccept  CustomerOfferAcceptComponent
   ViewChild CollapsibleLinkComponent  collapsibleDetails  CollapsibleLinkComponent
   ViewChild  declineModal   declineModal  ModalDirective
   ViewChild  acceptModal   acceptModal  ModalDirective
   Input   offer  Offer
  i18n   I18n
  isFocused   false

  constructor private offerService  OfferService  private alertService  AlertService  private route  ActivatedRoute
              private element  ElementRef


  ngOnInit    void
    this scrollIntoViewIfCurrentOffer


  private scrollIntoViewIfCurrentOffer
    this route fragment subscribe f
      if  f     this anchorName
        this isFocused   true
        this element nativeElement scrollIntoView




  get anchorName    string
    return  offer   this offer id


  submit
    if  this collapsibleDetails collapsed
      this offerAccept selectPaymentMethodComponent selectFirst
      if   this offerAccept isFormValid
        this collapsibleDetails toggleCollapsed


    this offerAccept submit


  declineOffer reason  string
    this offerService declineOffer this offer id  reason  subscribe declinedOffer
         TODO  Counter on tab doesn t update
      this offer archivedAt   declinedOffer offer archivedAt
      this alertService success I18n t customerContractNew declineSuccess
      window scrollTo 0  0



  get isSubmitDisabled
    return this offerAccept     this offerAccept showMissingAttributesError      this offerAccept formSent


  openDeclineModal event  Event
    this declineModal show
    event preventDefault


  openAcceptModal event  Event
    this acceptModal show
    event preventDefault


import   FormBuilder  FormControl   from   angular forms
import   UserProfileInputComponent   from    user profile input component

describe  UserProfileInputComponent
  const formatter  any    format
  let formHelper  any
  let component  UserProfileInputComponent

  beforeEach
    formHelper   jasmine createSpyObj  fromHelper     showError
    component   new UserProfileInputComponent formHelper  formatter
    component userForm   new FormBuilder   group
      phoneNumber  new FormControl
      firstName  new FormControl
      lastName  new FormControl
      address  new FormControl



  describe  formatPhoneNumber
    it  calls the format function of the formatter and assigns the returned value
      const spy   spyOn formatter   format   and returnValue  123
      component userForm controls phoneNumber setValue  333
      component formatPhoneNumber
      expect component userForm value phoneNumber  toEqual  123
      expect spy  toHaveBeenCalled



  describe  showAddressError
    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component userForm controls address



  describe  ngOnInit
    it  disables the form controls if the user already gave the info
      component user    any   phoneNumber   077   firstName   077   lastName   077   address   hasAllAttributes        true
      component ngOnInit
      expect component userForm controls phoneNumber disabled  toEqual true
      expect component userForm controls firstName disabled  toEqual true
      expect component userForm controls lastName disabled  toEqual true
      expect component userForm controls address disabled  toEqual true



import   Component  Input  OnInit   from   angular core
import   FormGroup   from   angular forms
import   I18n   from           i18n i18n
import   User   from           models user model
import   FormHelper   from           utils form helper
import   PhoneNumberFormatterService   from           utils phone number formatter service

 Component
  selector   my user profile input
  templateUrl   user profile input component html

export class UserProfileInputComponent implements OnInit
   Input   user  User
   Input   userForm  FormGroup
  i18n   I18n

  constructor private formHelper  FormHelper  private mobileNumberFormatter  PhoneNumberFormatterService

  ngOnInit
    this disableAlreadyFilledInputs


  private disableAlreadyFilledInputs
    if  this user firstName
      this userForm controls firstName disable
      this userForm controls lastName disable

    if  this user phoneNumber    this userForm controls phoneNumber disable
    if  this user address hasAllAttributes      this userForm controls address disable


  formatPhoneNumber
    const phoneNumber   this mobileNumberFormatter format this userForm value phoneNumber
    this userForm controls phoneNumber setValue phoneNumber


  showAddressError
    return this formHelper showError this userForm controls address


import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  templateUrl   customer onboarding show component html
  styleUrls    customer onboarding show component scss

export class CustomerOnboardingShowComponent
  i18n   I18n

import   Component  Input  ViewChild   from   angular core
import   Router   from   angular router
import   AlertService   from        alerts alerts service
import   I18n   from        i18n i18n
import   CustomerRatesTalentService   from        services customer rates talent service
import   Receipt   from        shared models work states receipt
import   WorkRatingComponent   from        shared rating work rating component

 Component
  selector   my customer rates talent
  templateUrl   customer rates talent component html


export class CustomerRatesTalentComponent
   ViewChild WorkRatingComponent  workRating  WorkRatingComponent
  i18n   I18n
   Input   receipt  Receipt

  constructor private service  CustomerRatesTalentService  private alertService  AlertService  private router  Router

  submit
    this service rateTalent this receipt  this workRating comment  this workRating rate  subscribe       this success


  private success
    this alertService success this i18n t customerRating ratingSuccess
    this router navigate    dashboard


import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from        i18n i18n
import   Receipt   from        shared models work states receipt

 Component
  templateUrl   customer receipt customer component html
  styleUrls          shared receipt receipt shared styles scss

export class CustomerReceiptCustomerComponent
  receipt  Receipt
  i18n   I18n

  constructor private route  ActivatedRoute
    this receipt   this route snapshot data  receipt


  print
    window print


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   Receipt   from        shared models work states receipt
import   CustomerReceiptListComponent   from    customer receipt list component

describe  CustomerReceiptListComponent
  let component  CustomerReceiptListComponent
  let receiptService  any
  let route  any    queryParams
  let router  any
  const mockedResponse  Paginated Receipt
    data   new Receipt
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    receiptService   jasmine createSpyObj  receiptService     allForCustomer
    router   jasmine createSpyObj  router     navigate
    route    queryParams
    component   new CustomerReceiptListComponent receiptService  route  router


  describe  ngOnInit
    beforeEach
      spyOn component   getWorks


    it  sets the page to the query param if given
      route queryParams   Observable of  page  2
      component ngOnInit
      expect component page  toEqual 2
      expect component getWorks  toHaveBeenCalled


    it  sets the page to 1 if the query param is undefined
      route queryParams   Observable of
      component ngOnInit
      expect component page  toEqual 1
      expect component getWorks  toHaveBeenCalled



  describe  getWorks
    beforeEach
      receiptService allForCustomer and returnValue Observable of mockedResponse
      component page   2
      component getWorks


    it  sets receipts
      expect component receipts  toEqual mockedResponse data


    it  sets totalCount
      expect component totalCount  toEqual mockedResponse meta totalCount


    it  uses the allForCustomer method of receiptService for getting data
      expect receiptService allForCustomer  toHaveBeenCalledWith 2



  describe  updateQueryParams
    it  serializes the page and calls the navigate function correctly
      component page   2
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  2
        relativeTo  route



    it  sets page to null if they are of default value
      component page   1
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  null
        relativeTo  route




  describe  pageChanged
    it  scrolls to the top
      spyOn window   scrollTo
      component pageChanged
      expect window scrollTo  toHaveBeenCalledWith 0  0



import   Component  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   ReceiptService   from        services receipt service
import   Receipt   from        shared models work states receipt
import   PaginatedArchiveBase   from        shared paginated archive paginated archive base

 Component
  selector   my customer receipt list
  templateUrl   customer receipt list component html


export class CustomerReceiptListComponent extends PaginatedArchiveBase implements OnInit
  receipts  Receipt
  i18n   I18n

  constructor private receiptService  ReceiptService  protected route  ActivatedRoute  protected router  Router
    super route  router


  getWorks
    this receiptService allForCustomer this page  subscribe jsonapiData    this onReceiptsFetched jsonapiData


  private onReceiptsFetched jsonapiData  Paginated Receipt
    this totalCount   jsonapiData meta totalCount
    this receipts   jsonapiData data


import   Talent   from           models talent model
import   SelectedTalentListComponent   from    selected talent list component

describe  SelectedTalentListComponent
  let component  SelectedTalentListComponent

  beforeEach
    component   new SelectedTalentListComponent


  function createTalent id  number
    const talent   new Talent
    talent id   id
    return talent


  describe  deleteSelectedTalent
    beforeEach
      spyOn component selectedTalentsChange   emit


    it  removes given Talent from selectedTalents list  if it is part of it
      component selectedTalents    createTalent 1   createTalent 2   createTalent 3   createTalent 4
      component deleteSelectedTalent createTalent 3
      expect component selectedTalents length  toEqual 3
      expect component selectedTalentsChange emit  toHaveBeenCalled


    it  doesnt do anything if talent to remove isnt in the list of selected talents
      component selectedTalents    createTalent 1   createTalent 2   createTalent 3
      component deleteSelectedTalent createTalent 4
      expect component selectedTalents length  toEqual 3
      expect component selectedTalentsChange emit  toHaveBeenCalled



  describe  isSelectedTalentsEmpty
    it  returns true if the talent list is empty
      component selectedTalents
      expect component isSelectedTalentsEmpty    toBeTruthy


    it  returns false if there are talents in the list
      component selectedTalents    createTalent 3   createTalent 4
      expect component isSelectedTalentsEmpty    toBeFalsy



  describe  inviteTalents
    beforeEach
      component onInviteTalents   jasmine createSpyObj  emitter     emit
      component selectedTalents   selectedTalents

    const selectedTalents    new Talent    new Talent
    it  calls the emitter
      component inviteTalents
      expect component onInviteTalents emit  toHaveBeenCalledWith selectedTalents


    it  clears all selected talents after emitting
      expect component selectedTalents length  toBe 2
      component inviteTalents
      expect component selectedTalents length  toBe 0



import   Component  EventEmitter  Input  Output   from   angular core
import   I18n   from           i18n i18n
import   Talent   from           models talent model

 Component
  selector   my selected talent list
  templateUrl   selected talent list component html
  styleUrls       talent list talent list component scss          shared compact talent list scss

export class SelectedTalentListComponent
   Input   selectedTalents  Talent
   Output   selectedTalentsChange  EventEmitter Talent      new EventEmitter Talent
   Output   onInviteTalents  EventEmitter Talent      new EventEmitter Talent
  i18n   I18n

  deleteSelectedTalent talent  Talent
    this selectedTalents   this selectedTalents filter selectedTalent    selectedTalent id     talent id
    this selectedTalentsChange emit this selectedTalents


  isSelectedTalentsEmpty    boolean
    return this selectedTalents length     0


  inviteTalents
    this onInviteTalents emit this selectedTalents slice 0
    this selectedTalents


import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   Talent   from           models talent model

 Component
  selector   my collapsible talent info
  templateUrl   collapsible talent info component html
  styleUrls    collapsible talent info component scss

export class CollapsibleTalentInfoComponent
  i18n   I18n
   Input   talent  Talent

import   ChangeDetectorRef  EventEmitter   from   angular core
import   ActivatedRoute  Router   from   angular router
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from           api api types
import   I18n   from           i18n i18n
import   Talent   from           models talent model
import   TalentListQueryParamsHelper   from           public browse talents talent list query params helper
import   TalentService   from           services talent service
import   TalentFilter   from           shared talent filter talent filter model
import   TalentListComponent   from    talent list component

describe  TalentListComponent
  let component  TalentListComponent
  let alertService  any
  const talentService  TalentService    any   all
  const route  ActivatedRoute    any
  const router  Router    any
  const queryParamsHelper  TalentListQueryParamsHelper    any
  const cdr  ChangeDetectorRef    any   detectChanges
  const mockedResponse  Paginated Talent
    data   new Talent
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    alertService   jasmine createSpyObj  alertService     success
    component   new TalentListComponent talentService  route  router  queryParamsHelper  cdr  alertService


  function createTalent id  number
    const talent   new Talent
    talent id   id
    return talent


  it  has attribute totalCount
    component totalCount   2
    expect component totalCount  toEqual 2


  it  has attribute filter
    component filter   new TalentFilter
    expect component filter  toEqual jasmine any TalentFilter


  it  sets and initializes onUpdateTalents as EventEmitter
    expect component selectedTalentsChange  toEqual jasmine any EventEmitter


  it  sets initializes selectedTalents as 1
    expect component selectedTalents  toEqual


  describe  selectTalent
    beforeEach
      spyOn component selectedTalentsChange   emit


    it  adds given Talent to selectedTalents list  if it is not part of it yet
      component selectedTalents    createTalent 1   createTalent 2   createTalent 4
      component selectTalent createTalent 3
      expect component selectedTalents length  toEqual 4
      expect component isTalentSelected createTalent 3    toBeTruthy
      expect component selectedTalentsChange emit  toHaveBeenCalledWith component selectedTalents


    it  doesnt adds given Talent to selectedTalents list if it is already part of it
      component selectedTalents    createTalent 1   createTalent 2
      component selectTalent createTalent 1
      expect component selectedTalents length  toEqual 2
      expect component isTalentSelected createTalent 1    toBeTruthy
      expect component selectedTalentsChange emit  not toHaveBeenCalled


    it  shows a message after adding a talent to guide the user
      component selectTalent createTalent 3
      expect alertService success  toHaveBeenCalledWith I18n t talentList talentAddedHint



  describe  isTalentSelected
    it  returns true if the talent is already in the list
      component selectedTalents    createTalent 4
      expect component isTalentSelected createTalent 4    toBeTruthy


    it  returns true if the talent is already invited
      component invitedTalents    createTalent 4
      expect component isTalentSelected createTalent 4    toBeTruthy


    it  returns false if the talent is in the list
      component selectedTalents    createTalent 3
      expect component isTalentSelected createTalent 4    toBeFalsy



  describe  getTalents
    const givenFilter   new TalentFilter

    beforeEach
      spyOn talentService   all   and returnValue Observable of mockedResponse
      spyOn cdr   detectChanges


    describe  view exists
      beforeEach
        component getTalents givenFilter


      it  sets talents
        expect component talents  toEqual mockedResponse data


      it  sets totalCount
        expect component totalCount  toEqual mockedResponse meta totalCount


      it  uses the all method of talentService for getting data
        expect talentService all  toHaveBeenCalledWith givenFilter


      it  calls detect changes
        expect cdr detectChanges  toHaveBeenCalled



    describe  view is destroyed
      beforeEach
        component ngOnDestroy
        component getTalents givenFilter


      it  doesnt calls detect changes
        expect cdr detectChanges  not toHaveBeenCalled




import   ChangeDetectorRef  Component  ElementRef  EventEmitter  Input  OnDestroy  OnInit  Output  ViewChild   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   AlertService   from           alerts alerts service
import   Paginated   from           api api types
import   I18n   from           i18n i18n
import   Talent   from           models talent model
import   TalentListQueryParamsHelper   from           public browse talents talent list query params helper
import   TalentService   from           services talent service
import   TalentFilter   from           shared talent filter talent filter model

 Component
  selector   my talent list
  templateUrl   talent list component html
  styleUrls          shared compact talent list scss    talent list component scss

export class TalentListComponent implements OnInit  OnDestroy
   Input   invitedTalents  Talent
   Input   selectedTalents  Talent
   Output   selectedTalentsChange  EventEmitter Talent      new EventEmitter Talent
   Output   onInviteTalents  EventEmitter Talent      new EventEmitter Talent
   ViewChild  scrollUpTo   scrollUpTo  ElementRef
  i18n   I18n
  talents  Talent
  totalCount  number
  filter  TalentFilter   new TalentFilter
  private viewDestroyed  boolean   false

  constructor private talentService  TalentService  private route  ActivatedRoute  private router  Router
              private queryParamsHelper  TalentListQueryParamsHelper  private cdr  ChangeDetectorRef
              private alertService  AlertService

  ngOnInit
    this route queryParams subscribe params    this queryParamsChanged params


  private queryParamsChanged params  Params
    this filter   this queryParamsHelper deserialize params
    this getTalents this filter


  inviteTalents talents  Talent
    this onInviteTalents emit talents
    this selectedTalents


  ngOnDestroy
    this viewDestroyed   true


  pageChanged    void
    this scrollUpTo nativeElement scrollIntoView


  selectTalent talent  Talent
    if   this isTalentSelected talent
      this selectedTalents push talent
      this selectedTalentsChange emit this selectedTalents
      this alertService success this i18n t talentList talentAddedHint



  isTalentSelected talent  Talent   boolean
    return this selectedTalents some selectedTalent    selectedTalent id     talent id
      this invitedTalents some invitedTalent    invitedTalent id     talent id


  updateQueryParams
    this router navigate
      queryParams  this queryParamsHelper serialize this filter
      relativeTo  this route



  getTalents filter  TalentFilter
    this talentService all filter  subscribe jsonapiData    this onTalentFetched jsonapiData


  private onTalentFetched paginatedTalents  Paginated Talent
    if   this viewDestroyed
      this totalCount   paginatedTalents meta totalCount
      this talents   paginatedTalents data
      this cdr detectChanges



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   PendingWork   from           shared models work states pending work model
import   ArchivedWorkDetailComponent   from    archived work detail component

describe  ArchivedWorkDetailComponent
  let component  ArchivedWorkDetailComponent
  const pendingWork   new PendingWork
  const activatedRoute    any   params  Observable of  tab   overview
  let router  any

  beforeEach
    router   jasmine createSpyObj  router     navigate
    component   new ArchivedWorkDetailComponent activatedRoute  router
    component pendingWork   pendingWork


  describe  status
    it  returns the status of the work description
      component pendingWork    any   workDescription   status   canceled
      expect component status    toEqual  canceled
      component pendingWork    any   workDescription   status   done
      expect component status    toEqual  done



  describe  workPlace
    const workPlace1   new Geolocation  zip   8000   city   ZÃ¼rich
    const workPlace2   new Geolocation  zip   7000   city   Chur

    beforeEach
      component pendingWork    any
        workDescription   status   canceled   workPlace  workPlace1
        contract   offer   workPlace  workPlace2



    it  returns the work place of the work description if is canceled
      expect component workPlace    toEqual workPlace1


    it  returns the work place of the contract for status done
      component pendingWork workDescription status    done
      expect component workPlace    toEqual workPlace2



  describe  referenceNumber
    beforeEach
      component pendingWork    any
        workDescription   status   canceled   id  1
        contract   workFlow   id  4



    it  returns the referenceNumber of the work description if is canceled
      expect component referenceNumber    toEqual 1


    it  returns the work place of the contract for status done
      component pendingWork workDescription status    done
      expect component referenceNumber    toEqual 4



  describe  dates
    const dates1    new PossibleTime new Date 2007  10  1
    const dates2    new PossibleTime new Date 2007  10  2

    beforeEach
      component pendingWork    any
        workDescription   status   canceled   possibleTimes  dates1
        contract   chosenTime  dates2



    it  returns the dates of the work description if is canceled
      expect component dates    toEqual dates1


    it  returns the work place of the contract for status done
      component pendingWork workDescription status    done
      expect component dates    toEqual dates2



  describe  hasContract
    beforeEach
      component pendingWork    any   workDescription   status   canceled


    it  returns false if is canceled
      expect component hasContract    toBe false


    it  returns true if is done
      component pendingWork workDescription status    done
      expect component hasContract    toBe true



import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   I18n   from           i18n i18n
import   TabItem   from           shared models tab item model
import   WorkDetailBase   from    work detail base

 Component
  selector   my archived work detail
  templateUrl   archived work detail component html

export class ArchivedWorkDetailComponent extends WorkDetailBase implements OnInit  OnDestroy
  i18n   I18n
  tab   offers     overview     bill

  constructor protected route  ActivatedRoute  protected router  Router
    super route  router


  buildTabItems
    this tabItems    new TabItem this i18n t tabSubnavbar overview   overview
    this tabItems push new TabItem this i18n t tabSubnavbar offers   offers
    if  this status        done     this tabItems push new TabItem this i18n t tabSubnavbar bill   bill


  hasContract    boolean
    return this status        done


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   PendingWork   from           shared models work states pending work model
import   WorkStatus   from           shared models work states work types
import   CustomerWorkDetailComponent   from    customer work detail component

describe  CustomerWorkDetailComponent
  let component  CustomerWorkDetailComponent
  const pendingWork   new PendingWork
  const activatedRoute    any   data  Observable of pendingWork

  beforeEach
    component   new CustomerWorkDetailComponent activatedRoute


  describe  isArchived
    beforeEach
      component pendingWork    any   workDescription   status   offering


      canceled    done   forEach  status  WorkStatus
      it  returns true if status is   status
        component pendingWork workDescription status   status
        expect component isArchived    toBe true



      offering    running    payment    rating   forEach  status  WorkStatus
      it  returns false if status is   status
        component pendingWork workDescription status   status
        expect component isArchived    toBe false




import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   PendingWork   from           shared models work states pending work model

 Component
  templateUrl   customer work detail component html

export class CustomerWorkDetailComponent
  pendingWork  PendingWork

  constructor private route  ActivatedRoute
    this route data subscribe data    this pendingWork   data  pendingWork


  isArchived    boolean
    return   canceled    done   includes this pendingWork workDescription status


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   PendingWork   from           shared models work states pending work model
import   WorkStatus   from           shared models work states work types
import   PendingWorkDetailComponent   from    pending work detail component

describe  PendingWorkDetailComponent
  let component  PendingWorkDetailComponent
  const pendingWork   new PendingWork
  const activatedRoute    any   params  Observable of  tab   overview
  let workService  any
  let router  any
  const statusWithoutOfferingAndDraft     running    payment    rating    done

  beforeEach
    workService   jasmine createSpyObj  workService     delete
    router   jasmine createSpyObj  router     navigate
    component   new PendingWorkDetailComponent activatedRoute  router  workService
    component pendingWork   pendingWork


  describe  status
    it  returns the status of the work description
      component pendingWork    any   workDescription   status   offering
      expect component status    toEqual  offering
      component pendingWork    any   workDescription   status   payment
      expect component status    toEqual  payment



  describe  workPlace
    const workPlace1   new Geolocation  zip   8000   city   ZÃ¼rich
    const workPlace2   new Geolocation  zip   7000   city   Chur

    beforeEach
      component pendingWork    any
        workDescription   status   offering   workPlace  workPlace1
        contract   offer   workPlace  workPlace2



    it  returns the work place of the work description if is offering
      expect component workPlace    toEqual workPlace1


    statusWithoutOfferingAndDraft forEach  status  WorkStatus
      it  returns the work place of the contract for   status
        component pendingWork workDescription status   status
        expect component workPlace    toEqual workPlace2




  describe  referenceNumber
    beforeEach
      component pendingWork    any
        workDescription   status   offering   id  1
        contract   workFlow   id  4



    it  returns the referenceNumber of the work description if is offering
      expect component referenceNumber    toEqual 1


    statusWithoutOfferingAndDraft forEach  status  WorkStatus
      it  returns the referenceNumber of the contract is is   status
        component pendingWork workDescription status   status
        expect component referenceNumber    toEqual 4




  describe  dates
    const dates1    new PossibleTime new Date 2007  10  1
    const dates2    new PossibleTime new Date 2007  10  2

    beforeEach
      component pendingWork    any
        workDescription   status   offering   possibleTimes  dates1
        contract   chosenTime  dates2



    it  returns the dates of the work description if is offering
      expect component dates    toEqual dates1


    statusWithoutOfferingAndDraft forEach  status  WorkStatus
      it  returns the dates of the contracts workFlow if is   status
        component pendingWork workDescription status   status
        expect component dates    toEqual dates2




  describe  isStatusOffering
    beforeEach
      component pendingWork    any   workDescription   status   offering


    it  returns true if is offering
      expect component isStatusOffering    toBe true


    statusWithoutOfferingAndDraft forEach  status  WorkStatus
      it  returns false if is   status
        component pendingWork workDescription status   status
        expect component isStatusOffering    toBe false




  describe  isStatusDraft
    beforeEach
      component pendingWork    any   workDescription   status   draft


    it  returns true if is draft
      expect component isStatusDraft    toBe true


    statusWithoutOfferingAndDraft forEach  status  WorkStatus
      it  returns false if is   status
        component pendingWork workDescription status   status
        expect component isStatusDraft    toBe false




  describe  showInvitationWarning
    beforeEach
      component pendingWork    any   workDescription   isPublic  false  status   offering    workInvitations      offersCount        0


    it  returns true if is private and has no invitations
      expect component showInvitationWarning    toBe true


    it  returns true if has just archived invitations
      component pendingWork workInvitations    any    archivedAt  new Date
      expect component showInvitationWarning    toBe true


    it  returns false if is public
      component pendingWork workDescription isPublic   true
      expect component showInvitationWarning    toBe false


    it  returns false if is not offering
      component pendingWork workDescription status    running
      expect component showInvitationWarning    toBe false


    it  returns false if has invitations
      component pendingWork workInvitations    any    archivedAt  null
      expect component showInvitationWarning    toBe false


    it  returns false if has offers
      component pendingWork offersCount         1
      expect component showInvitationWarning    toBe false



  describe  hasContract
    beforeEach
      component pendingWork    any   workDescription   status   offering


    it  returns false if is offering
      expect component hasContract    toBe false


    it  returns false if is canceled
      component pendingWork workDescription status    canceled
      expect component hasContract    toBe false


      running    payment    rating    done   forEach  status  WorkStatus
      it  returns true if is status   status
        component pendingWork workDescription status   status
        expect component hasContract    toBe true




  describe  offeringWithoutOffers
    it  returns true if is offering and has no offers
      component pendingWork    any   workDescription   status   offering    offersCount        0
      expect component offeringWithoutOffers    toBe true


    it  returns false if not is offering
      component pendingWork    any   workDescription   status   payment    offersCount        0
      expect component offeringWithoutOffers    toBe false


    it  returns false if is offering but has offers
      component pendingWork    any   workDescription   status   offering    offersCount        1
      expect component offeringWithoutOffers    toBe false


    it  returns false if not is offering and has offers
      component pendingWork    any   workDescription   status   running    offersCount        1
      expect component offeringWithoutOffers    toBe false



  describe  deleteWork
    describe  if user cancels confirmation
      beforeEach
        spyOn window   confirm   and returnValue false


      it  does nothing
        component deleteWork
        expect workService delete  not toHaveBeenCalled



    describe  if user accepts confirmation
      const work    any   status   offering

      beforeEach
        spyOn window   confirm   and returnValue true
        workService delete and returnValue Observable of
        component pendingWork    any   workDescription  work


      it  calls the service
        component deleteWork
        expect workService delete  toHaveBeenCalledWith work


      it  routes to the dashboard
        component deleteWork
        expect router navigate  toHaveBeenCalledWith     dashboard




import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   I18n   from           i18n i18n
import   WorkService   from           services work service
import   TabItem   from           shared models tab item model
import   WorkDetailBase   from    work detail base

 Component
  selector   my pending work detail
  templateUrl   pending work detail component html

export class PendingWorkDetailComponent extends WorkDetailBase implements OnInit  OnDestroy
  tab   offers     overview     invitations     bill     rating

  constructor protected route  ActivatedRoute  protected router  Router  private workService  WorkService
    super route  router


  buildTabItems    void
    this tabItems    new TabItem this i18n t tabSubnavbar overview   overview
    this tabItemsPush
    if  this status        payment     this tabItems push new TabItem this i18n t tabSubnavbar bill   bill
    if  this status        rating     this tabItems push new TabItem this i18n t tabSubnavbar rating   rating


  private invitationsCount    number
    return this pendingWork workInvitations filter workInvitations     workInvitations archivedAt  length


  tabItemsPush    void
    if  this isStatusOffering      this isStatusDraft
      this tabItems push new TabItem this i18n t tabSubnavbar offers   offers   this pendingWork offersCount
      this tabItems push new TabItem this i18n t tabSubnavbar invitations   invitations   this invitationsCount



  hasContract    boolean
    return   running    payment    rating    done   includes this status


  isStatusOffering    boolean
    return this status        offering


  isStatusDraft    boolean
    return this status        draft


  offeringWithoutOffers    boolean
    return this isStatusOffering      this pendingWork offersCount     1


  deleteWork    void
    if  confirm I18n t customerWorkDetail deleteConfirmation
      this workService delete this pendingWork workDescription  subscribe
        this router navigate     dashboard




  showInvitationWarning    boolean
    return  this pendingWork workDescription isPublic    this isStatusOffering
         this pendingWork workInvitations filter invitation     invitation archivedAt  length     0    this pendingWork offersCount     1


import   Input  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   TabItem   from           shared models tab item model
import   PendingWork   from           shared models work states pending work model
import   WorkStatus   from           shared models work states work types

export abstract class WorkDetailBase implements OnInit  OnDestroy
   Input   pendingWork  PendingWork
  i18n   I18n
  tab   offers     overview     invitations     bill     rating
  paramsSub  Subscription
  tabItems  TabItem
  private subscription  Subscription

  constructor protected route  ActivatedRoute  protected router  Router

  ngOnInit
    this subscription   this i18n getLang   subscribe       this buildTabItems
    this paramsSub   this route params subscribe params    this paramsChanged params


  abstract buildTabItems    void

  private paramsChanged params  Params
    this tab   params  tab
    if   this tabItems some tabItem    tabItem link     this tab
      this router navigate   404



  ngOnDestroy
    this paramsSub unsubscribe
    this subscription unsubscribe


  status    WorkStatus
    return this pendingWork workDescription status


  workPlace    Geolocation
    return this hasContract     this pendingWork contract offer workPlace   this pendingWork workDescription workPlace


  referenceNumber    number
    return this hasContract     this pendingWork contract workFlow id   this pendingWork workDescription id


  dates    PossibleTime
    return this hasContract     this pendingWork contract chosenTime   this pendingWork workDescription possibleTimes


  abstract hasContract    boolean

import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   WorkDescription   from           shared models work states work description model
import   WorkDescriptionForm   from     shared work description form model
import   CustomerWorkEditComponent   from    customer work edit component

describe  CustomerWorkEditComponent
  const workDescriptionMock  WorkDescription    any
    id  4
    isPublic  false
    possibleTimes    some   time
    questions    some   question
    files    some   file

  const route    any   snapshot   data   pendingWork   workDescription  workDescriptionMock
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched
  let alert  any
  let router  any
  let service  any
  let component  CustomerWorkEditComponent

  beforeEach
    alert   jasmine createSpyObj  alert     success    danger
    router   jasmine createSpyObj  router     navigate
    service   jasmine createSpyObj  service     update
    component   new CustomerWorkEditComponent route  service  router  alert  formBuilder  formHelper


  describe  isFormValid
    beforeEach
      component workEditForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component workEditForm    any   valid  false
      expect component isFormValid    toBe false



  describe  ngOnInit
    it  builds the form
      expect component workEditForm  toBeUndefined
      component ngOnInit
      expect component workEditForm  toEqual jasmine any FormGroup



  describe  onSubmit
    const workDescriptionForm  WorkDescriptionForm   new WorkDescriptionForm
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeForms
      spyOn formHelper   setAsTouched
      component workDescriptionForm   workDescriptionForm


    describe  successful
      const newWorkDescription   new WorkDescription

      beforeEach
        newWorkDescription id   4
        const responseObservable   Observable of newWorkDescription
        service update and returnValue responseObservable
        component onSubmit


      it  submits the workDescriptionForm to the Service
        expect service update  toHaveBeenCalledWith workDescriptionForm  component workDescription id


      it  sets the route data work descritpion to the new work descrption
        expect route snapshot data pendingWork workDescription  toEqual newWorkDescription


      it  shows an alert success message
        expect alert success  toHaveBeenCalledWith I18n t customerWorkEdit success


      it  navigates back to details view
        expect router navigate  toHaveBeenCalledWith   my works   4   overview



    describe  unsuccessful
      beforeEach
        const responseObservable   Observable throw null
        service update and returnValue responseObservable
        component onSubmit


      it  submits the workDescriptionForm to the Service
        expect service update  toHaveBeenCalledWith workDescriptionForm  component workDescription id


      it  shows an alert danger message
        expect alert danger  toHaveBeenCalledWith I18n t customerWorkEdit error


      it  does not navigate back to details view
        expect router navigate  not toHaveBeenCalled




import   Component  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   ActivatedRoute  Router   from   angular router
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   WorkService   from           services work service
import   FormBase   from           shared form base form base
import   WorkDescription   from           shared models work states work description model
import   FormHelper   from           utils form helper
import   MyValidators   from           utils my validators
import   WorkDescriptionForm   from     shared work description form model

 Component
  templateUrl   customer work edit component html

export class CustomerWorkEditComponent extends FormBase implements OnInit
  workDescription  WorkDescription
  workDescriptionForm  WorkDescriptionForm
  formSent   false
  workEditForm  FormGroup
  i18n   I18n

  constructor protected route  ActivatedRoute  protected workService  WorkService  protected router  Router
              protected alertService  AlertService  protected formBuilder  FormBuilder  protected formHelper  FormHelper
    super
    this workDescription   this route snapshot data  pendingWork   workDescription


  ngOnInit
    this initWorkDescriptionForm
    this buildForm


  private initWorkDescriptionForm
    this workDescriptionForm   new WorkDescriptionForm
      isPublic  this workDescription isPublic
      possibleTimes  this workDescription possibleTimes
      questions  this workDescription questions
      files  this workDescription files
      talents



  private buildForm
    this workEditForm   this formBuilder group
      subcategory  new FormControl undefined   Validators required
      title  new FormControl this workDescriptionForm title   MyValidators present
      description  new FormControl this workDescriptionForm description   MyValidators present
      workPlace  new FormControl undefined   Validators required  MyValidators region
      estimatedWorkMinutes  new FormControl 0   MyValidators minValue 0

    this workEditForm patchValue this workDescription


  onSubmit
    this formHelper setAsTouched this workEditForm
    this submitted   true
    if   this isFormValid      return
    this mergeForms
    this formSent   true
    this workService update this workDescriptionForm  this workDescription id
       subscribe work    this onSuccess work         this onError


  mergeForms
    Object assign this workDescriptionForm  this workEditForm value
    if  this workEditForm value subcategory
      this workDescriptionForm category   this workDescriptionForm subcategory category



  isFormValid    boolean
    return this workEditForm valid


  protected onSuccess work  WorkDescription
    this route snapshot data  pendingWork   workDescription   work
    this alertService success I18n t customerWorkEdit success
    this router navigate   my works   work id   overview


  protected onError
    this formSent   false
    this alertService danger I18n t customerWorkEdit error


import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   PendingWork   from           shared models work states pending work model
import   CustomerWorkListComponent   from    customer work list component

describe  CustomerWorkListComponent
  let component  CustomerWorkListComponent

  beforeEach
    component   new CustomerWorkListComponent  any   snapshot   data   works


  describe  ngOnInit
    it  sorts works with actions first
      const workWait    workDescription   status   offering    offersCount        0
      const workAction    workDescription   status   offering    offersCount        1
      const workAction2    workDescription   status   payment    offersCount        0
      component pendingWorks    any   workWait  workAction  workAction2
      component ngOnInit
      expect component pendingWorks  toEqual  any   workAction  workAction2  workWait



  describe  status text
    it  returns text  that offers have to be answered
      expect component statusText  offering   2       toBe I18n t customerDashboard workState offeringWithOffers


    it  returns text  that is waiting for offers
      expect component statusText  offering   0       toBe I18n t customerDashboard workState offering


    it  returns text  that has been canceled
      expect component statusText  canceled   0       toBe I18n t customerDashboard workState canceled


    it  returns text  that work has to be completed
      const tomorrow   new Date
      tomorrow setDate new Date   getDate     1
      expect component statusText  running   0   new PossibleTime tomorrow     toBe I18n t customerDashboard workState running


    it  returns text  that work is passed and is now waiting for bill
      const yesterday   new Date
      yesterday setDate new Date   getDate     1
      expect component statusText  running   0   new PossibleTime yesterday     toBe I18n t customerDashboard workState waitingForBill


    it  returns text  that bill has to be paid
      expect component statusText  payment   0       toBe I18n t customerDashboard workState payment


    it  returns text  that rating has to be done
      expect component statusText  rating   0       toBe I18n t customerDashboard workState rating


    it  returns text  that work is done
      expect component statusText  done   0       toBe I18n t customerDashboard workState done


    it  returns text  that work is draft
      expect component statusText  draft   0       toBe I18n t customerDashboard workState draft



  describe  status color
    describe  returns call to action color
      it  returns action if is offering and has offers
        expect component statusLabel  offering   2   toBe  action


      it  returns action if customer has to pay the bill
        expect component statusLabel  payment   0   toBe  action


      it  returns action if customer has to rate
        expect component statusLabel  rating   0   toBe  action



    describe  returns waiting color
      it  returns wait if is offering and has no offers
        expect component statusLabel  offering   0   toBe  wait


      it  returns wait if customer has to wait for work completion
        expect component statusLabel  running   0   toBe  wait


      it  returns wait if work has been done
        expect component statusLabel  done   0   toBe  wait


      it  returns wait if work has been draft
        expect component statusLabel  draft   0   toBe  wait




  describe  hasArchivedWorks
    it  returns false  if pendingWorks is empty
      expect component hasPendingWorks    toBe false


    it  returns false  if pendingWorks is not empty
      component   new CustomerWorkListComponent  any   snapshot   data   works   new PendingWork    new PendingWork
      expect component hasPendingWorks    toBe true



  describe  preselectTab
    let pendingWork  any

    beforeEach
      pendingWork    offersCount        3  workDescription   status   offering


    it  returns offers if in offering status and has offers
      expect component preselectTab pendingWork   toEqual  offers


    it  returns overview if in offering status but has no offers
      pendingWork offersCount         0
      expect component preselectTab pendingWork   toEqual  overview


    it  returns bill if in payment status
      pendingWork workDescription status    payment
      expect component preselectTab pendingWork   toEqual  bill


    it  returns rating if in payment status
      pendingWork workDescription status    rating
      expect component preselectTab pendingWork   toEqual  rating


    it  returns overview by default
      pendingWork workDescription status    receipt
      expect component preselectTab pendingWork   toEqual  overview



  describe  workPlace
    let pendingWork  any
    const geolocation   new Geolocation

    it  returns contracts offer workplace if pendingWork has a contract
      pendingWork    contract   offer   workPlace  geolocation
      expect component workPlace pendingWork   toEqual geolocation


    it  returns workDescription workplace if pendingWork has no contract
      pendingWork    workDescription   workPlace  geolocation
      expect component workPlace pendingWork   toEqual geolocation


    it  returns undefined if pendingWork has no contract and workdescription has no workplace
      pendingWork    workDescription
      expect component workPlace pendingWork   toBeUndefined



  describe  privateButNoInvitations
    let pendingWork  any

    beforeEach
      pendingWork    workDescription   isPublic  false  status   offering    workInvitations      offersCount        0


    it  returns true if is private and has no invitations
      expect component privateButNoInvitations pendingWork   toBe true


    it  returns true if has just archived invitations
      pendingWork workInvitations    any    archivedAt  new Date
      expect component privateButNoInvitations pendingWork   toBe true


    it  returns false if is public
      pendingWork workDescription isPublic   true
      expect component privateButNoInvitations pendingWork   toBe false


    it  returns false if is not offering
      pendingWork workDescription status    running
      expect component privateButNoInvitations pendingWork   toBe false


    it  returns true if is offering
      expect component privateButNoInvitations pendingWork   toBe true


    it  returns true if is draft
      pendingWork workDescription status    draft
      expect component privateButNoInvitations pendingWork   toBe true



import   Component  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   PendingWork   from           shared models work states pending work model
import   SpecifiedWorkStatus  WorkStatus   from           shared models work states work types

 Component
  selector   my customer dashboard
  templateUrl   customer work list component html
  styleUrls    customer work list component scss

export class CustomerWorkListComponent implements OnInit
  i18n   I18n
  pendingWorks  PendingWork

  constructor private route  ActivatedRoute
    this pendingWorks   this route snapshot data  works


  ngOnInit
    this sortByStatusLabel


  private sortByStatusLabel
    this pendingWorks sort  a  b
      const statusA   this statusLabel a workDescription status  a offersCount
      const statusB   this statusLabel b workDescription status  b offersCount
      if  statusA     statusB    return 0
      if  statusA      action     statusB      wait     return  1
      return 1



  statusText workStatus  WorkStatus  offerCount  number  chosenTime  PossibleTime     string
    return this i18n t customerDashboard workState this getWorkStatus workStatus  offerCount  chosenTime


  private getWorkStatus workStatus  WorkStatus  offerCount  number  chosenTimes  PossibleTime     SpecifiedWorkStatus
    if  this isOfferingWithOffers workStatus  offerCount
      return  offeringWithOffers

    if  this isWaitingForBill workStatus  chosenTimes
      return  waitingForBill

    return workStatus


  isOfferingWithOffers workStatus  WorkStatus  offerCount  number
    return workStatus      offering     offerCount     0


  private isWaitingForBill workStatus  WorkStatus  chosenTime  PossibleTime
    return workStatus      running     chosenTime    chosenTime 0  from    new Date


  statusLabel workStatus  WorkStatus  offerCount  number
    return
      canceled   wait
      draft   wait
      offering  offerCount     0    wait     action
      running   wait
         TODO  add another state  if is waiting for bill but no longer running
      payment   action
      rating   action
      done   wait
      workStatus


  hasPendingWorks    boolean
    return this pendingWorks    this pendingWorks length   0


  preselectTab pendingWork  PendingWork   string
    if  this isOfferingWithOffers pendingWork workDescription status  pendingWork offersCount       return  offers
    if  pendingWork workDescription status      payment     return  bill
    if  pendingWork workDescription status      rating     return  rating
    return  overview


  workPlace pendingWork  PendingWork   Geolocation   undefined
    return  pendingWork contract   pendingWork contract offer workPlace   pendingWork workDescription workPlace


  privateButNoInvitations pendingWork  PendingWork   boolean
    return  pendingWork workDescription isPublic
          pendingWork workDescription status      offering     pendingWork workDescription status      draft


import   FormBuilder  FormControl  FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   User   from           models user model
import   CreateWorkService   from           services create work service
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   PhoneNumberFormatterService   from           utils phone number formatter service
import   WorkDescriptionForm   from     shared work description form model
import   CustomerWorkNewComponent   from    customer work new component

describe  CustomerWorkNewComponent
  let component  CustomerWorkNewComponent
  let workService  any
  let createWorkService  CreateWorkService
  let alert  any
  let router  any
  let userSessionService  any
  let userService  any
  let roleStorageService  any
  let refererService  any
  let googleAnalytics  any
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched
  const formatter   new PhoneNumberFormatterService

  beforeEach
    createWorkService   new CreateWorkService
    alert   jasmine createSpyObj  alert     success    danger
    router   jasmine createSpyObj  router     navigate
    workService   jasmine createSpyObj  workService     create
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    userService   jasmine createSpyObj  userService     update    updateCurrentUser
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToCustomer
    refererService   jasmine createSpyObj  refererService     isHornbach
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent
    component   new CustomerWorkNewComponent createWorkService  workService  router  alert  formBuilder  formHelper
      userSessionService  formatter  userService  roleStorageService  refererService  googleAnalytics
    component workNewForm   new FormBuilder   group
      phoneNumber  new FormControl



  describe  ngOnInit
    const user    phoneNumber   123

    beforeEach
      userSessionService currentUser and returnValue Observable of user


    it  builds the form
      component workNewForm   null
      component ngOnInit
      expect component workNewForm  toEqual jasmine any FormGroup


    it  disables the phonenumber input control if user has already a phone number set
      component ngOnInit
      expect component workNewForm controls phoneNumber disabled  toEqual true


    it  dont disables the phonenumber input control if user has no phone number set
      user phoneNumber
      component ngOnInit
      expect component workNewForm controls phoneNumber disabled  toEqual false



  describe  isFormValid
    beforeEach
      component workNewForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component workNewForm    any   valid  false
      expect component isFormValid    toBe false



  describe  formatPhoneNumber
    it  calls the format function of the formatter and assigns the returned value
      const spy   spyOn formatter   format   and returnValue  123
      component workNewForm controls phoneNumber setValue  333
      component formatPhoneNumber
      expect component workNewForm value phoneNumber  toEqual  123
      expect spy  toHaveBeenCalled



  describe  onSubmit
    const workDescriptionForm  WorkDescriptionForm   new WorkDescriptionForm
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeForms
      spyOn formHelper   setAsTouched
      component workDescriptionForm   workDescriptionForm


    describe  already logged in
      let user  any

      beforeEach
        user    phoneNumber   123
        userSessionService currentUser and returnValue Observable of user


      describe  user has no phone number set
        beforeEach
          user phoneNumber


        it  updates the user
          userService update and returnValue Observable of  phoneNumber   123
          component onSubmit
          expect userService update  toHaveBeenCalled



      describe  successful
        const newUser   new User

        describe  public work
          beforeEach
            const responseObservable   Observable of  id  3  isPublic  true  customer  newUser
            workService create and returnValue responseObservable
            component onSubmit


          it  submits the workDescriptionForm to the Service
            expect workService create  toHaveBeenCalledWith workDescriptionForm


          it  submits the workDescriptionForm to the Service only once
            component onSubmit
            expect workService create  toHaveBeenCalledTimes 1


          it  shows an alert success message
            expect alert success  toHaveBeenCalledWith I18n t workNew submitSuccess


          it  navigates back to details view
            expect router navigate  toHaveBeenCalledWith   outlets   primary    my works   3   overview    auth  null


          it  calls the GoogleAnalyticsEventsService
            expect googleAnalytics emitEvent  toHaveBeenCalledWith  Work    tendered


          it  updates the current user and sets role to customer
            expect userService updateCurrentUser  toHaveBeenCalledWith newUser
            expect roleStorageService setRoleToCustomer  toHaveBeenCalled



        describe  private work
          beforeEach
            const responseObservable   Observable of  id  3  isPublic  false  customer  newUser
            workService create and returnValue responseObservable


          describe  if referer is not hornbach
            beforeEach
              component onSubmit


            it  shows an alert success message
              const messsage      I18n t workNew submitSuccess    I18n t workNew submitSuccessWithInvitationHint
              expect alert success  toHaveBeenCalledWith messsage


            it  navigates back to details view
              expect router navigate  toHaveBeenCalledWith   outlets   primary    my works   3   invitations    auth  null



          describe  if referer is hornbach
            beforeEach
              refererService isHornbach and returnValue true
              component onSubmit


            it  passes the Hornbach parameter if was Hornbach
              expect router navigate  toHaveBeenCalledWith   outlets   primary    my works   3   invitations    auth  null
                 queryParams   professional   true





      describe  unsuccessful
        beforeEach
          const responseObservable   Observable throw null
          workService create and returnValue responseObservable
          component onSubmit


        it  submits the workDescriptionForm to the Service
          expect workService create  toHaveBeenCalledWith workDescriptionForm


        it  shows an alert danger message
          expect alert danger  toHaveBeenCalledWith I18n t workNew submitError


        it  does not navigate back to details view
          expect router navigate  not toHaveBeenCalled




    describe  not yet logged in
      beforeEach
        userSessionService currentUser and returnValue Observable of null


      it  navigates to the register modal
        component onSubmit
        expect router navigate  toHaveBeenCalledWith   outlets   auth   register       queryParamsHandling   preserve




import   Component  OnDestroy  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   Router   from   angular router
import   Subscription   from  rxjs Subscription
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   User   from           models user model
import   CreateWorkService   from           services create work service
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   RefererService   from           services referer service
import   RoleStorageService   from           services role storage service
import   UserService   from           services user service
import   UserSessionService   from           services user session service
import   WorkService   from           services work service
import   FormBase   from           shared form base form base
import   WorkDescription   from           shared models work states work description model
import   FormHelper   from           utils form helper
import   MyValidators   from           utils my validators
import   PhoneNumberFormatterService   from           utils phone number formatter service
import   WorkDescriptionForm   from     shared work description form model

 Component
  selector   my work new
  templateUrl   customer work new component html
  styleUrls    customer work new component scss

export class CustomerWorkNewComponent extends FormBase implements OnInit  OnDestroy
  workDescriptionForm  WorkDescriptionForm
  i18n   I18n
  formSent   false
  workNewForm  FormGroup
  user  User
  private userSubscription  Subscription

  constructor private createWorkService  CreateWorkService  private workService  WorkService  private router  Router
              private alertService  AlertService  private formBuilder  FormBuilder  private formHelper  FormHelper
              private userSessionService  UserSessionService  private phoneNumberFormatter  PhoneNumberFormatterService
              private userService  UserService  private roleStorageService  RoleStorageService
              public refererService  RefererService  private googleAnalyticsEventsService  GoogleAnalyticsEventsService
    super
    this workDescriptionForm   this createWorkService workDescriptionForm
    this createWorkService reset


  ngOnInit
    this buildForm
    this queryPhoneNumberOfUser


  buildForm
    this workNewForm   this formBuilder group
      subcategory  new FormControl this workDescriptionForm subcategory   Validators required
      title  new FormControl this workDescriptionForm title   MyValidators present
      description  new FormControl this workDescriptionForm description   MyValidators present
      workPlace  new FormControl new Geolocation     Validators required  MyValidators region
      agb  new FormControl false   Validators requiredTrue
      estimatedWorkMinutes  new FormControl 0   MyValidators minValue 0
      phoneNumber  new FormControl      Validators required  Validators pattern this phoneNumberFormatter mobileNumberPattern



  private queryPhoneNumberOfUser
    this userSubscription   this userSessionService currentUser   first   subscribe user
      if  user
        this user   user
        if  user phoneNumber    this workNewForm controls phoneNumber disable

      this unsubscribe



  ngOnDestroy
    this unsubscribe


  onSubmit
    this formHelper setAsTouched this workNewForm
    this submitted   true
    if   this isFormValid      return
    this createWorkIfLoggedIn


  private unsubscribe
    if  this userSubscription
      this userSubscription unsubscribe
      this userSubscription   null



  private createWorkIfLoggedIn
    this unsubscribe
    this userSubscription   this userSessionService currentUser   subscribe user
      if  user
        this user   user
        this updateUserOrCreateWork
        else
        this router navigate   outlets   auth   register       queryParamsHandling   preserve




  private updateUserOrCreateWork
    if   this user phoneNumber
      this user phoneNumber   this workNewForm value phoneNumber
      this userService update this user  subscribe
      else
      this createWork



  private createWork
    if  this formSent    return
    this mergeForms
    this formSent   true
    this workService create this workDescriptionForm  subscribe work    this onSuccess work         this onError


  mergeForms
    Object assign this workDescriptionForm  this workNewForm value
    if  this workNewForm value subcategory
      this workDescriptionForm category   this workDescriptionForm subcategory category



  isFormValid    boolean
    return this workNewForm valid


  private onSuccess work  WorkDescription
    this unsubscribe
    this googleAnalyticsEventsService emitEvent  Work    tendered
    this alertService success this successMessage work isPublic
    this userService updateCurrentUser work customer
    this roleStorageService setRoleToCustomer
    this router navigate   outlets   primary    my works   work id  work isPublic    overview     invitations    auth  null
      this queryParams


  private successMessage isPublic  boolean
    const successMessageParts    I18n t workNew submitSuccess
    if   isPublic
      successMessageParts push I18n t workNew submitSuccessWithInvitationHint

    return successMessageParts join


  private queryParams
    return this refererService isHornbach      queryParams   professional   true


  private onError
    this alertService danger I18n t workNew submitError
    this formSent   false


  formatPhoneNumber
    const phoneNumber   this phoneNumberFormatter format this workNewForm value phoneNumber
    this workNewForm controls phoneNumber setValue phoneNumber


export   from    customer work new component
import   Question   from              shared models question model
import   WorksNewQuestionsFormComponent   from    works new questions form component

describe  WorksNewQuestionsFormComponent
  let questionNewForm  any
  let component  WorksNewQuestionsFormComponent

  beforeEach
    questionNewForm   jasmine createSpyObj  questionNewForm     hide
    component   new WorksNewQuestionsFormComponent
    component questionNewForm   questionNewForm


  describe  addQuestion
    describe  if invalid
      beforeEach
        spyOn component   isNewQuestionValid   and returnValue false


      it  sets the state to  submitted  and does not reset the new question
        const newQuestion  Question   new Question
        component newQuestion   newQuestion
        expect component isNewQuestionSubmitted  toBeFalsy
        component addQuestion
        expect component isNewQuestionSubmitted  toBeTruthy
        expect component newQuestion  toEqual newQuestion


      it  does not hide the modal
        component addQuestion
        expect questionNewForm hide  not toHaveBeenCalled



    describe  if valid
      beforeEach
        spyOn component   isNewQuestionValid   and returnValue true


      it  adds the question to the questions array
        expect component questions length  toBe 0
        component addQuestion
        expect component questions length  toBe 1


      it  emits that an question has been added
        spyOn component onQuestionsChanged   emit
        component addQuestion
        expect component onQuestionsChanged emit  toHaveBeenCalledWith component questions


      it  resets the new question
        component addQuestion
        expect component newQuestion  toEqual new Question


      it  hides the modal
        component addQuestion
        expect questionNewForm hide  toHaveBeenCalled




  describe  deleteQuestion
    it  deletes the question by index and calls emit
      const question1   new Question
      const question2   new Question
      const question3   new Question
      spyOn component onQuestionsChanged   emit
      component questions    question1  question2  question3
      component deleteQuestion 1
      expect component questions  toEqual  question1  question3
      expect component onQuestionsChanged emit  toHaveBeenCalledWith component questions



  describe  isNewQuestionErrorVisible
    it  returns false  if not is submitted and is invalid
      spyOn component   isNewQuestionValid   and returnValue false
      component isNewQuestionSubmitted   false
      expect component isNewQuestionErrorVisible    toBeFalsy


    it  returns false  if not is submitted and is valid
      spyOn component   isNewQuestionValid   and returnValue true
      component isNewQuestionSubmitted   false
      expect component isNewQuestionErrorVisible    toBeFalsy


    it  returns true  if is submitted and is invalid
      spyOn component   isNewQuestionValid   and returnValue false
      component isNewQuestionSubmitted   true
      expect component isNewQuestionErrorVisible    toBeTruthy


    it  returns false  if is submitted and is valid
      spyOn component   isNewQuestionValid   and returnValue true
      component isNewQuestionSubmitted   true
      expect component isNewQuestionErrorVisible    toBeFalsy



  describe  isNewQuestionValid
    it  returns false if a the new question has no question
      expect component isNewQuestionValid    toBeFalsy


    it  returns false if a new questions question is empty and doesnt resets isSubmitted
      component isNewQuestionSubmitted   true
      component newQuestion question
      expect component isNewQuestionValid    toBeFalsy
      expect component isNewQuestionSubmitted  toBeTruthy


    it  returns true if a new question has a question and resets isSubmitted
      component isNewQuestionSubmitted   true
      component newQuestion question    test
      expect component isNewQuestionValid    toBeTruthy
      expect component isNewQuestionSubmitted  toBeFalsy



import   Component  EventEmitter  Input  Output  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from              i18n i18n
import   Question   from              shared models question model

 Component
  selector   my works new questions form
  templateUrl   works new questions form component html
  styleUrls    works new questions form component scss

export class WorksNewQuestionsFormComponent
   Output   onQuestionsChanged   new EventEmitter Question
   Input   questions  Question
   ViewChild  questionNewForm   questionNewForm  ModalDirective
  i18n   I18n
  newQuestion  Question   new Question
  isNewQuestionSubmitted  boolean   false

  addQuestion
    this isNewQuestionSubmitted   true
    if  this isNewQuestionValid
      this questionNewForm hide
      this questions push this newQuestion
      this newQuestion   new Question
      this onQuestionsChanged emit this questions



  deleteQuestion index  number
    this questions splice index  1
    this onQuestionsChanged emit this questions


  isNewQuestionErrorVisible    boolean
    return this isNewQuestionSubmitted     this isNewQuestionValid


  isNewQuestionValid    boolean
    const valid   this newQuestion question    this newQuestion question length   0
    if  valid
      this isNewQuestionSubmitted   false

    return valid


import   FormBuilder  FormControl   from   angular forms
import   Subcategory   from           categories shared subcategory model
import   I18n   from           i18n i18n
import   Question   from           shared models question model
import   WorkDescriptionForm   from     shared work description form model
import   WorkDescriptionFormComponent   from    work description form component

describe  WorkDescriptionFormComponent
  let component  WorkDescriptionFormComponent
  let formHelper  any
  let refererService  any
  const formBuilder   new FormBuilder

  beforeEach
    formHelper   jasmine createSpyObj  formHelper     showError
    refererService   jasmine createSpyObj  refererService     hornbachDescriptionTranslation    hornbachTitleTranslation
    component   new WorkDescriptionFormComponent formHelper  refererService
    component workForm   formBuilder group
      workPlace  new FormControl undefined
      estimatedWorkMinutes  new FormControl undefined

    component workDescriptionForm   new WorkDescriptionForm


  describe  ngOnInit
    let collapsible  any

    beforeEach
      collapsible   jasmine createSpyObj  collapsible     toggleCollapsed
      component collapsible   collapsible


    describe  toggles the optional work attributes collapsible
      it  calls the toggle function if it should open
        spyOn component   openOptionalWorkAttributesCollapsible   and returnValue true
        component ngOnInit
        expect collapsible toggleCollapsed  toHaveBeenCalled


      it  does not call the toggle function if it should not open
        spyOn component   openOptionalWorkAttributesCollapsible   and returnValue false
        component ngOnInit
        expect collapsible toggleCollapsed  not toHaveBeenCalled




  describe  questionsChanged
    it  sets the questions of the workdescription to the passed ones
      component workDescriptionForm questions    new Question    new Question    new Question
      component questionsChanged  new Question
      expect component workDescriptionForm questions length  toEqual 1



  describe  setPublic
    it  sets isPublic
      component workDescriptionForm isPublic   false
      component setPublic true
      expect component workDescriptionForm isPublic  toEqual true



  describe  updateFiles
    it  sets work workDescriptionForm files to given filesUrl
      const filesUrl     link to picture 1    link to picture 2
      component updateFiles filesUrl
      expect component workDescriptionForm files  toEqual filesUrl



  describe  setPossibleTimes
    it  sets work workDescriptionForm files to given filesUrl
      const setPossibleTimes    any    time   1     time   2
      component setPossibleTimes setPossibleTimes
      expect component workDescriptionForm possibleTimes  toEqual setPossibleTimes



  describe  showAddressError
    it  returns true if formHelper returns true
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      expect formHelper showError  toHaveBeenCalledWith component workForm controls workPlace


    it  returns false if formHelper returns false
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component workForm controls workPlace



  describe  showEstimatedWorkMinutesError
    it  returns true if formHelper returns true
      formHelper showError and returnValue true
      expect component showEstimatedWorkMinutesError    toBe true
      expect formHelper showError  toHaveBeenCalledWith component workForm controls estimatedWorkMinutes


    it  returns false if formHelper returns false
      formHelper showError and returnValue false
      expect component showEstimatedWorkMinutesError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component workForm controls estimatedWorkMinutes



  describe  openOptionalWorkAttributesCollapsible
    it  returns true if there are possible times
      component workDescriptionForm possibleTimes    any    some   time
      expect component openOptionalWorkAttributesCollapsible    toBe true


    it  returns true if there are possible times
      component workDescriptionForm questions    any    some   question
      expect component openOptionalWorkAttributesCollapsible    toBe true


    it  returns true if estimated work time is greater than 0
      component workForm value estimatedWorkMinutes   1
      expect component openOptionalWorkAttributesCollapsible    toBe true


    it  returns false if there are no possible times and no questions
      component workDescriptionForm possibleTimes
      component workDescriptionForm questions
      component workForm value estimatedWorkMinutes   0
      expect component openOptionalWorkAttributesCollapsible    toBe false



  describe  titleTranslation
    it  returns the default translation
      expect component titleTranslation    toEqual I18n t workNew workTitlePlaceholder


    describe  when is hornbach
      beforeEach
        component isHornbach   true
        component workForm    any   controls   subcategory   value  undefined


      it  returns the default translation
        expect component titleTranslation    toEqual I18n t workNew workTitlePlaceholder


      describe  when subcategory is set
        const subcategory   new Subcategory  id  1

        beforeEach
          component workForm    any   controls   subcategory   value  subcategory


        it  calls the referer Service with the subcategory
          component titleTranslation
          expect refererService hornbachTitleTranslation  toHaveBeenCalledWith subcategory





  describe  descriptionTranslation
    it  returns the default translation
      expect component descriptionTranslation    toEqual I18n t workNew whatHasToBeDonePlaceholder


    describe  when is hornbach
      beforeEach
        component isHornbach   true
        component workForm    any   controls   subcategory   value  undefined


      it  returns the default translation
        expect component descriptionTranslation    toEqual I18n t workNew whatHasToBeDonePlaceholder


      describe  when subcategory is set
        const subcategory   new Subcategory  id  1

        beforeEach
          component workForm    any   controls   subcategory   value  subcategory


        it  calls the referer Service with the subcategory
          component descriptionTranslation
          expect refererService hornbachDescriptionTranslation  toHaveBeenCalledWith subcategory





import   Component  Input  OnInit  ViewChild   from   angular core
import   FormGroup   from   angular forms
import   I18n   from           i18n i18n
import   DropzoneOptions   from           renuo uploads dropzone options model
import   RefererService   from           services referer service
import   CollapsibleLinkComponent   from           shared collapsible collapsible link component
import   PossibleTime   from           shared models possible time model
import   Question   from           shared models question model
import   FormHelper   from           utils form helper
import   WorkDescriptionForm   from    work description form model

 Component
  selector   my work description form
  templateUrl   work description form component html
  styleUrls    work description form component scss

export class WorkDescriptionFormComponent implements OnInit
   Input   workForm  FormGroup
   Input   isHornbach   false
   Input   workDescriptionForm  WorkDescriptionForm
   Input   moderateJob   false
   Input   showPictureWarning   false     TODO  improve component so you can remove this one
   ViewChild CollapsibleLinkComponent  collapsible  CollapsibleLinkComponent
  i18n   I18n

  dropzoneOptions   new DropzoneOptions
    acceptedFiles   image
    maxFilesize  10     MB
    maxFiles  6
    dictDefaultMessage    div class  btn btn secondary btn sm btn block    this i18n t workNew uploadPlaceholder   div
    previewTemplate
 div class  dz preview dz file preview
   div class  dz details
     img data dz thumbnail
    div
   div class  dz progress   span class  dz upload  data dz uploadprogress   span   div
   button data dz remove class  btn btn secondary btn sm
     i class  lw lw  orange lw trash    i  nbsp   this i18n t workNew deleteImage
    button
   div class  dz error message   span data dz errormessage   span   div
  div


  constructor private formHelper  FormHelper  private refererService  RefererService

  ngOnInit
    if  this openOptionalWorkAttributesCollapsible      this collapsible toggleCollapsed


  updateFiles filesUrl  string
    this workDescriptionForm files   filesUrl


  setPublic isPublic  boolean
    this workDescriptionForm isPublic   isPublic


  questionsChanged questions  Question
    this workDescriptionForm questions   questions


  showAddressError
    return this formHelper showError this workForm controls workPlace


  showEstimatedWorkMinutesError
    return this formHelper showError this workForm controls estimatedWorkMinutes


  setPossibleTimes possibleTimes  PossibleTime
    this workDescriptionForm possibleTimes   possibleTimes


  openOptionalWorkAttributesCollapsible
    return this workDescriptionForm possibleTimes length   0    this workDescriptionForm questions length   0
         this workForm value estimatedWorkMinutes   0


  titleTranslation
    if  this isHornbachWithSubcategory
      return this refererService hornbachTitleTranslation this workForm controls  subcategory   value

    return this i18n t workNew workTitlePlaceholder


  descriptionTranslation
    if  this isHornbachWithSubcategory
      return this refererService hornbachDescriptionTranslation this workForm controls  subcategory   value

    return this i18n t workNew whatHasToBeDonePlaceholder


  private isHornbachWithSubcategory
    return this isHornbach    this workForm controls  subcategory   value


import   as   from  lodash
import   Subcategory   from           categories shared subcategory model
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   Question   from           shared models question model
import   WorkDescriptionForm   from    work description form model

describe  WorkDescriptionForm

  function createWorkDescriptionForm overriddenIncomingData
    return new WorkDescriptionForm   merge
      workPlace  undefined  questions      possibleTimes      subcategory  new Subcategory  id  3    talents
       overriddenIncomingData


  describe  hasQuestions
    it  returns true if has not empty questions
      const workDescriptionForm   createWorkDescriptionForm  questions   new Question  question   Test
      expect workDescriptionForm hasQuestions    toBeTruthy


    it  returns false if has no questions
      const workDescriptionForm   createWorkDescriptionForm  questions
      expect workDescriptionForm hasQuestions    toBeFalsy
      const workDescriptionForm2   createWorkDescriptionForm  questions   new Question
      expect workDescriptionForm2 hasQuestions    toBeFalsy
      const workDescriptionForm3   createWorkDescriptionForm  questions   new Question  question
      expect workDescriptionForm3 hasQuestions    toBeFalsy



  describe  serialize
    it  serializes a work without date and without questions
      const geolocation  Geolocation   new Geolocation
        zip   8000
        city   ZÃ¼rich
        street   Industriestrasse
        latitude  47 0001
        longitude  32 005
        country   Switzerland

      const workDescriptionForm   createWorkDescriptionForm
        title   Work title
        possibleTimes
        description   Description
        isPublic  true
        estimatedWorkMinutes  null
        questions
        subcategory  new Subcategory  id  12  name   Sub Testcategory
        workPlace  geolocation
        files    file url


      const expectedSerialized  any
        title   Work title
        description   Description
        public  true
        subcategory id  12
        work place lat  47 0001
        work place lng  32 005
        status   offering
        files    file url
        questions
        estimated work minutes  null
        time suggestions
        zip   8000
        city   ZÃ¼rich
        address   Industriestrasse
        country   Switzerland

      expect workDescriptionForm serializeForUpdate    toEqualData expectedSerialized


    describe  serialized possibleTimes
      it  serializes the possible times the right way if empty
        const workDescriptionForm   createWorkDescriptionForm  possibleTimes
        expect workDescriptionForm serializeForUpdate   time suggestions  toEqual


      it  serializes the possible times the right way if not defined
        const workDescriptionForm   createWorkDescriptionForm  possibleTimes  undefined
        expect workDescriptionForm serializeForUpdate   time suggestions  toEqual


      it  serializes the possible times the right way if not empty
        const a   new PossibleTime new Date  2012 12 10T11 05 00 000Z
        const b   new PossibleTime new Date  2012 12 10T11 05 00 000Z
        spyOn a   serialize   and returnValue  serialized
        spyOn b   serialize   and returnValue  serialized2
        const workDescriptionForm   createWorkDescriptionForm  possibleTimes   a  b
        expect workDescriptionForm serializeForUpdate   time suggestions  toEqual  any    serialized    serialized2
        expect a serialize  toHaveBeenCalled
        expect b serialize  toHaveBeenCalled



    describe  serialized questions
      it  serializes an opened but empty Option the right way
        const workDescriptionForm   createWorkDescriptionForm  questions   new Question
        expect workDescriptionForm serializeForUpdate   questions  toEqual


      it  serializes with one filled out and empty Option the right way
        const question  Question   new Question
        question question    What
        const workDescriptionForm   createWorkDescriptionForm  questions   new Question    question
        const expected  any     question   What    answer  undefined
        expect workDescriptionForm serializeForUpdate   questions  toEqual expected



    describe  serialized without workPlace
      it  serializes an opened but empty Option the right way
        const workDescriptionForm   createWorkDescriptionForm  workPlace  undefined
        expect workDescriptionForm serializeForUpdate   work place lng  toBeUndefined



    describe  serializeForCreate
      it  adds talent array
        const workDescriptionForm   createWorkDescriptionForm  talents    id  1    id  2
        expect workDescriptionForm serializeForCreate   talents  toEqual  1  2




import   extend   from  lodash
import   WorkApiObjectCreateRequestAttributes  WorkApiObjectUpdateRequestAttributes   from           api endpoints work api interface
import   TimeStruct   from           api endpoints work state api interface
import   Category   from           categories shared category model
import   Subcategory   from           categories shared subcategory model
import   Geolocation   from           models geolocation model
import   Talent   from           models talent model
import   PossibleTime   from           shared models possible time model
import   Question   from           shared models question model

export interface IWorkDescriptionOptions
  title   string
  description   string
  workPlace   Geolocation
  possibleTimes   PossibleTime
  questions   Question
  isPublic   boolean
  category   Category
  subcategory   Subcategory
  workId   number
  files   string
  estimatedWorkMinutes   number
  talents  Talent


export class WorkDescriptionForm
  title  string
  description  string
  workPlace  Geolocation   undefined
  possibleTimes  PossibleTime
  questions  Question
  isPublic  boolean   true
  category  Category
  subcategory  Subcategory
  files  string
  estimatedWorkMinutes  number
  talents  Talent

  constructor options   IWorkDescriptionOptions
    if  options
      extend this  options



  hasQuestions    boolean
    return this questions filter x    x question  length   0


  serializeForUpdate    WorkApiObjectUpdateRequestAttributes
    const workPlaceAttributes   this workPlace   this serializedWorkPlace
    const workCommonAttributes   this serializedCommonAttributes
    return
         workPlaceAttributes
         workCommonAttributes
      status   offering



  serializeForSave    WorkApiObjectUpdateRequestAttributes
    const workPlaceAttributes   this workPlace   this serializedWorkPlace
    const workCommonAttributes   this serializedCommonAttributes
    return
         workPlaceAttributes
         workCommonAttributes
      status   draft



  serializeForCreate    WorkApiObjectCreateRequestAttributes
    return
         this serializeForSave
      talents  this talents map talent    talent id



  private serializedCommonAttributes
    return
      description  this description
      files  this files
      public  this isPublic
      questions  this serializedQuestions
      subcategory id  this subcategory id
      time suggestions  this serializedDates
      title  this title
      estimated work minutes  this estimatedWorkMinutes



  private serializedWorkPlace
    return
      address  this workPlace street
      work place lat  this workPlace latitude
      work place lng  this workPlace longitude
      city  this workPlace city
      country  this workPlace country
      zip  this workPlace zip



  private serializedQuestions
    return this questions filter question     question isEmpty    map question    question serialize


  private serializedDates    TimeStruct
    return this possibleTimes map time    time serialize


import   ApplicationRef  enableProdMode   from   angular core
import   disableDebugTools  enableDebugTools   from   angular platform browser
let PROVIDERS  any

let  decorateModuleRef    value  any     value

if  ENV      production
     Production
  disableDebugTools
  enableProdMode

  PROVIDERS
       PROVIDERS
       custom providers in production

  else
   decorateModuleRef    modRef  any
    const appRef   modRef injector get ApplicationRef
    const cmpRef   appRef components 0

    const  ng     any  window  ng
    enableDebugTools cmpRef
      any  window  ng probe    ng probe
      any  window  ng coreTokens    ng coreTokens
    return modRef


     Development
  PROVIDERS
       PROVIDERS
       custom providers in development




export const decorateModuleRef    decorateModuleRef

export const ENV PROVIDERS
     PROVIDERS

import   FirebaseAppConfig   from  angularfire2
import   AppSettings   from    app settings

   String interpolation doesnt work here
   tslint disable prefer template
export class FirebaseConfig implements FirebaseAppConfig
  static apiKey  string   AppSettings FIREBASE API KEY
  static authDomain  string   AppSettings FIREBASE APP NAME     firebaseapp com
  static databaseURL  string    https       AppSettings FIREBASE APP NAME     firebaseio com
  static storageBucket  string    https       AppSettings FIREBASE APP NAME     appspot com

import   LazyMapsAPILoaderConfigLiteral   from   agm core
import   Injectable   from   angular core
import   AppSettings   from    app settings

 Injectable
export class GoogleMapsConfig implements LazyMapsAPILoaderConfigLiteral
  apiKey  string   AppSettings GOOGLE MAPS API
  libraries  any     places

   Warning  this file has been generated by bin generate i18n  Do not change or commit it
export interface LawoonTranslations
     this part is generated from de json  en json
  aboutLawoon
    renuoDescription  string
    techPartner  string
    title  string

  addressSelector
    placeholder  string

  adminUsers
    allUsers  string
    customerPhone  string
    email  string
    name  string
    signInAs  string

  adminWorks
    actions  string
    assignMyself  string
    callClient  string
    clientContacts  string
    createdAt  string
    deleteDraft  string
    email  string
    job  string
    jobsModeration  string
    moderate  string
    moderateJob  string
    moderationComments  string
    name  string
    notAssigned  string
    phoneNumber  string
    publish  string
    saveDraft  string

  archivedWorkDetail
    noArchivedOffers  string

  authentication
    errors
      acceptAgbs  string
      invalidEmail  string
      noPassword  string
      shortPassword  string

    loginSuccess  string
    registrationSuccess  string

  categorySelection
    descriptionCategory  string
    descriptionSubcategory  string
    placeholderCategory  string
    placeholderSubcategory  string

  chat
    messages
      contentPlaceholder  string
      customerTitle  string
      deleteConfirm  string
      submit  string
      title  string

    privateWorkChat
      helpText  string

    publicWorkChat
      helpText  string

    usageAgreement  string

  collapsibleTalentInfo
    aboutLabel  string
    hideDetails  string
    serviceDescriptionLabel  string
    showDetails  string

  completedWorkList
    profilesPerPage  string
    title  string

  contractAddressDetails
    customer  string
    email  string
    phoneNumber  string
    talent  string
    title  string
    workPlace  string

  costForm
    addCostItem  string
    amount  string
    cancel  string
    cost  string
    costBelowMinimum  string
    costEstimation  string
    costIsInvalid  string
    costItemBelowMinimum  string
    costItems  string
    enterCostDescription  string
    enterFixCostDescription  string
    fixedPrice  string
    fixedRate  string
    fixedRateInfo  string
    netHourlyRate  string
    netHourlyRateInfo  string
    price  string
    submit  string
    total  string
    workCostBelowMinimum  string

  costListing
    amount  string
    amountOfServiceFee  string
    amountShort  string
    cost  string
    subtotal  string
    timeRequired  string
    total  string
    vat  string
    vatShort  string

  customerArchive
    details  string
    noArchivedWorksTitle  string
    workState
      canceled  string
      done  string


  customerBillDetail
    complaintHelp  string
    complaintLink  string
    definitiveCost  string
    paymentMethodTitle  string
    paymentMethodUnfold  string
    processingBillPayment  string
    receiptCreate  string
    receiptCreatedError  string
    receiptCreatedSuccess  string

  customerBills
    billedTotal  string
    costAdjusted  string
    details  string
    pendingBills
      one  string
      other  string

    title  string

  customerContractNew
    acceptOffer  string
    chooseTime  string
    declineOffer  string
    declineSuccess  string
    error  string
    reasonOtherTalent  string
    reasonToExpensive  string
    success  string
    warning  string
    warningInfo  string

  customerContracts
    details  string
    pendingContracts
      one  string
      other  string

    title  string

  customerDashboard
    offer
      one  string
      other  string

    workState
      canceled  string
      done  string
      draft  string
      offering  string
      offeringWithOffers  string
      payment  string
      rating  string
      running  string
      waitingForBill  string


  customerInvitationDetails
    archivedWarning  string
    backToOverview  string
    delete  string
    deleteConfirmation  string
    edit  string

  customerInvitations
    decline  string
    description  string
    details  string
    inviteTalent
      description  string
      title  string

    status
      declinedByCustomer  string
      declinedByTalent  string
      offer  string
      pending  string

    title  string

  customerLandingpage
    description1  string
    description2  string
    descriptionHead  string
    title  string
    title1  string
    title2  string

  customerOfferDetail
    archivedOffers  string
    noOffersForPrivateWork  string
    noOffersForPublicWork  string

  customerOffers
    details  string
    pendingOffers
      one  string
      other  string

    title  string
    total  string

  customerOnboarding
    createWork  string
    createWorkIntro  string
    searchTalents  string
    searchTalentsIntro  string
    welcomeMessage  string

  customerPublicAnnouncements
    details  string
    pendingPublicAnnouncements
      one  string
      other  string

    title  string

  customerRating
    alreadyRated  string
    back  string
    ratingSuccess  string
    sendRating  string

  customerReceiptDetail
    backToArchive  string
    backToReceipts  string
    printBill  string
    ratingCreate  string
    ratingExplanation  string

  customerReceipts
    linkToBill  string
    loadMore  string
    noReceiptsYet  string
    totalCost  string
    workWasDone  string

  customerWorkDetail
    deleteConfirmation  string
    deleteWork  string
    editWork  string
    noInvitationsYet  string

  customerWorkEdit
    cancel  string
    error  string
    submit  string
    success  string
    title  string

  customerWorkModerate
    cancel  string
    error  string
    submit  string
    success  string
    title  string

  customerWorksList
    createWork  string
    noInvitationsWarning  string
    noPendingWorksMessage  string
    noPendingWorksTitle  string
    workOverview  string

  dashboard
    privateWork  string
    tabs
      archived  string
      pending  string


  emailEdit
    currentPassword  string
    email  string
    responseError  string
    submit  string
    success  string
    title  string

  footer
    aboutLawoon  string
    contact  string
    faq  string
    jobs  string
    linksCaption  string
    terms  string

  forbidden
    helpText  string
    title  string

  home
    advantages
      competentTalentCaption  string
      competentTalentDescription  string
      guaranteedOfferCaption  string
      guaranteedOfferDescription  string
      satisfactoryPaymentCaption  string
      satisfactoryPaymentDescription  string
      title  string

    knownFrom  string
    ourPartners  string
    process
      customer
        createWork  string
        createWorkDescription  string
        payment  string
        paymentDescription  string
        selectOffer  string
        selectOfferDescription  string
        start  string
        title  string
        workPending  string
        workPendingDescription  string

      talent
        doWork  string
        doWorkDescription  string
        findWork  string
        findWorkDescription  string
        getPaid  string
        getPaidDescription  string
        start  string
        title  string
        writeBill  string
        writeBillDescription  string
        writeOffer  string
        writeOfferDescription  string

      title  string

    teaser
      goOrder  string
      goTalent  string
      subtitle  string
      title  string

    testimonials
      testimonialFirst
        mention  string
        signatureName  string
        signaturePosition  string

      testimonialSecond
        mention  string
        signatureName  string
        signaturePosition  string

      testimonialThird
        mention  string
        signatureName  string
        signaturePosition  string

      title  string


  imprint
    about  string
    toBeContinued  string

  lawoonCostListing
    amountWithVat  string
    amountWithoutVat  string
    percentageOfBill  string
    total  string
    totalWithVat  string
    vat  string

  login
    error  string
    notAuthorized  string
    resetPasswordSuccess  string

  loginForm
    emailLabel  string
    emailPlaceholder  string
    noLogin  string
    passwordForgotten  string
    passwordLabel  string
    passwordPlaceholder  string
    register  string
    signIn  string

  metaData
    completedWorks
      description  string
      title  string

    customerLandingpage
      description  string
      title  string

    default
      description  string
      title  string

    jobs
      description  string
      title  string

    talentLandingpage
      description  string
      title  string

    talents
      description  string
      title  string

    works
      description  string
      title  string


  navbar
    blue
      browseAnnouncements  string
      browseTalents  string
      createWork  string

    browseTalents  string
    customer
      profile  string
      roleName  string
      tabSearchWorks
        archivedWorks  string
        createWork  string
        pendingWorks  string
        terms  string

      talents  string
      works  string

    lawoon  string
    right
      dashboard  string
      login  string
      logout  string

    talent
      browseAnnouncements  string
      createWork  string
      profile  string
      roleName  string
      tabMyWorks
        bills  string
        declinedOffers  string
        invitations  string
        offers  string
        onGoingOffers  string
        receipts  string
        terms  string

      works  string


  noConnection
    info  string
    reload  string

  notificationSettings
    dailySummary
      daily  string
      description  string
      never  string
      title  string

    disabledWarning  string
    email  string
    keyMappings
      billPaid  string
      billReminder  string
      customerDeclinedOffer  string
      newBill  string
      newContract  string
      newInvitation  string
      newMessage  string
      newOffer  string
      workStartReminder  string

    noCustomerPhoneNumberError  string
    push  string
    pushHintHasApp  string
    pushHintHasNoApp  string
    sms  string
    submit  string
    title  string
    updateError  string
    updateSuccess  string
    workSuggestions
      descriptionInterval  string
      descriptionSubcategories  string
      interval
        daily  string
        immediate  string
        never  string

      title  string


  notifications
    noMessagesYet  string

  offerAcceptModal
    accept  string
    cancel  string
    text  string
    title  string

  offerDeclineModal
    cancel  string
    decline  string
    errorMessage  string
    otherReason  string
    otherReasonPlaceholder  string
    title  string

  offerShow
    hideDetails  string
    offerText  string
    offered  string
    possibleTimes  string
    showDetails  string
    workIsDoneOn  string
    workPlace  string

  pageNotFound
    description  string
    title  string

  pagination
    first  string
    last  string
    next  string
    previous  string

  passwordEdit
    currentPassword  string
    description  string
    password  string
    passwordConfirmation  string
    responseError  string
    submit  string
    success  string
    title  string

  passwordForgotten
    description  string
    emailPlaceholder  string
    error  string
    modalTitle  string
    navigateToLogin  string
    resetInstructions  string
    submit  string

  passwordReset
    modalTitle  string
    passwordConfirmationPlaceholder  string
    passwordPlaceholder  string
    resetFailed  string
    submit  string

  passwordValidator
    invalidConfirmation  string
    invalidLength  string

  payment
    bankAccount
      bankAccountForm
        accountName
          label  string
          missing  string
          placeholder  string

        iban
          label  string
          missing  string
          placeholder  string
          wrongFormat  string

        submit  string
        updatedSuccessful  string
        updatedUnsuccessful  string


    paymentMethods
      dialog
        description  string
        name  string
        panelLabel  string

      endingWith  string
      errors
        missingPaymentMethod  string

      explanation  string
      privacyInformation  string
      storePaymentMethod  string
      title  string

    stripe
      authorize
        connected  string
        connecting  string
        retry  string
        serverError  string
        stripeError  string
        title  string

      connect
        button  string
        connected  string
        defaultProductDescription  string
        refreshTalentBankAccount  string

      explanation  string


  print
    title  string

  privacy
    dataPrivacyStatement  string
    toBeContinued  string

  profilePictureComponent
    altText  string
    professionalBadgeText  string

  profileSettings
    title  string

  profileSubnavbar
    account  string
    notifications  string
    payment  string
    talent  string
    user  string

  publicAnnouncementFilter
    newestEntries  string
    oldestEntries  string
    operationPlace  string
    showOnlyOpenAnnouncements  string
    sortBy  string

  publicWorkList
    filter  string
    lawoonAdButton  string
    lawoonAdText  string
    next  string
    noWorksFound  string
    profilesPerPage  string
    title  string
    writeOffer  string

  quickAction
    adminPanel  string
    customer
      roleName  string

    logout  string
    settings  string
    talent
      roleName  string


  receiptList
    title  string

  regionSelector
    invalidSelection  string
    placeholder  string

  register
    error  string
    notAuthorized  string

  registration
    alreadyHaveLogin  string
    createAccount  string
    emailLabel  string
    emailPlaceholder  string
    login  string
    passwordLabel  string
    passwordPlaceholder  string
    registration  string

  selectedTalentList
    invite  string
    noSelectedTalentsInfo  string
    remove  string

  subcategorySelection
    allCategories  string
    descriptionCategories  string
    descriptionSubcategories  string
    exampleDescription
      subcategory10  string
      subcategory11  string
      subcategory12  string
      subcategory2  string
      subcategory3  string
      subcategory4  string
      subcategory5  string
      subcategory6  string
      subcategory7  string
      subcategory8  string
      subcategory9  string

    exampleTitle
      subcategory10  string
      subcategory11  string
      subcategory12  string
      subcategory2  string
      subcategory3  string
      subcategory4  string
      subcategory5  string
      subcategory6  string
      subcategory7  string
      subcategory8  string
      subcategory9  string


  submitButton
    formInvalid  string
    label  string

  successStory
    customerRating  string
    finishedSince  string
    showLess  string
    showMore  string
    showTalentProfile  string

  supportBox
    email  string
    greeting  string
    howToHelp  string
    openingHours  string
    phoneNr  string
    title  string

  tabSubnavbar
    bill  string
    invitations  string
    offers  string
    overview  string
    rating  string
    users  string
    works  string
    yourOffer  string

  talentArchive
    details  string
    noPendingWorksTitle  string
    workFlowStatus
      declinedInvitation  string
      declinedOffer  string
      receipt  string


  talentBillDetail
    connectToBankAccount  string
    connectToBankAccountInfo  string
    createBill  string
    edit  string
    noBillCreatedYet  string
    notAbleToCreateBillYet  string

  talentBillEdit
    billCreatedError  string
    billCreatedSuccess  string
    billUpdatedError  string
    billUpdatedSuccess  string
    cancel  string
    createSubmit  string
    createTitle  string
    editSubmit  string
    editTitle  string
    offeredTotal  string

  talentBills
    amountForYou  string
    billedTotal  string
    details  string
    pendingBills
      one  string
      other  string

    title  string

  talentBrowse
    costsPerHour  string
    details  string
    invite  string
    lawoonAdButton  string
    lawoonAdText  string
    profilesPerPage  string

  talentContracts
    detailLinkText  string
    noPendingContracts  string
    pendingContracts
      one  string
      other  string

    title  string

  talentDashboard
    details  string
    workFlowStatus
      bill  string
      contract  string
      contractDone  string
      declinedInvitation  string
      declinedOffer  string
      offer  string
      receipt  string
      workInvitation  string


  talentDeclinedOfferDetail
    backToOverview  string
    reason  string

  talentDeclinedOffers
    amountForYou  string
    billedTotal  string
    declinedOffersCount
      one  string
      other  string

    details  string
    title  string

  talentFilter
    allQualifications  string
    location  string
    nonprofessional  string
    professional  string
    professionalHint  string
    qualification  string
    search  string
    searchPlaceholder  string

  talentLandingpage
    description1  string
    description2  string
    description3  string
    descriptionHead  string
    title  string
    title1  string
    title2  string
    title3  string

  talentList
    filter  string
    noResultsHint  string
    noTalentsFound  string
    talentAddedHint  string
    title  string

  talentOfferDetail
    createOffer  string
    deleteOffer  string
    edit  string
    offerDeletedSuccessful  string
    offerText  string
    reasonChangedMyMind  string
    reasonNoTime  string

  talentOfferEdit
    cancel  string
    error  string
    success  string
    title  string
    updateOffer  string

  talentOfferList
    details  string
    pendingOffers
      one  string
      other  string

    title  string

  talentOfferNew
    addItem  string
    addItemError  string
    answerFollowingQuestions  string
    answerPlaceholder  string
    cancel  string
    chooseTimeInfo  string
    costItemDescritpionPlaceholder  string
    createOffer  string
    detailInfos  string
    detailInfosPlaceholder  string
    offeredTotal  string
    selectDateTime  string
    selectWorkPlace  string
    sendOffer  string
    submitError  string
    submitSuccess  string
    yourEffort  string

  talentOnboarding
    searchPublicAnnouncements  string
    searchPublicAnnouncementsIntro  string
    welcomeMessage  string

  talentProfileBankAccountEdit
    title  string

  talentProfileCurrentStep
    back  string
    beforeUnloadAlert  string
    step  string

  talentProfileEdit
    error  string
    save  string
    title  string
    updateSuccessful  string

  talentProfileMisc
    address  string
    iCompensateVat  string
    mobileNumber  string
    mobileNumberPlaceholder  string
    selectPlaceHint  string
    vatNumber  string
    vatNumberInfo  string
    vatNumberPlaceholder  string
    vatRate  string
    vatRateInfo  string

  talentProfilePersonalInfo
    cancelRegistration  string
    companyDetailsMissing  string
    companyName  string
    companyNamePlaceholder  string
    companyUidRegisterNumber  string
    companyUidRegisterNumberPlaceholder  string
    createProfileInfo  string
    editProfilePicture  string
    errorPhoto  string
    errors
      missingAttributes  string

    firstName  string
    firstNamePlaceholder  string
    iAmAProfessional  string
    iAmAProfessionalInfo  string
    lastName  string
    lastNameInfo  string
    lastNamePlaceholder  string
    maxFilesize  string
    profilePicture  string
    profileVisibility  string
    profileVisibilityInfo  string
    saveAndContinue  string
    serviceDescription  string
    serviceDescriptionPlaceholder  string
    tellSomethingAboutYou  string
    tellSomethingAboutYouPlaceholder  string
    uploadProfilePicture  string
    website  string
    websitePlaceholder  string

  talentProfileQualification
    createError  string
    createProfile  string
    createSuccess  string
    education  string
    educationPlaceholder  string
    experience  string
    experiencePlaceholder  string
    projectPlaceholder  string
    projectPortfolio  string
    title  string
    titleInfo  string

  talentPublicShow
    aboutLabel  string
    qualification
      education  string
      experience  string
      projectPortfolio  string

    serviceDescriptionLabel  string

  talentRating
    continue  string
    sendRating  string

  talentRatings
    noComment  string
    ratings  string

  talentReceipt
    back  string
    billNumber  string
    paid  string
    print  string
    vat  string

  talentReceiptDetail
    backToReceipts  string
    linkToBillCustomer  string
    linkToBillLawoon  string

  talentReceiptLawoon
    billNumber  string
    introduction  string
    sender
      address  string
      city  string
      company  string
      vatNumber  string
      zip  string


  talentReceipts
    linkToBillCustomer  string
    linkToBillLawoon  string
    loadMore  string
    noReceiptsYet  string
    totalCost  string
    workWasDone  string

  talentRegistration
    alreadyHaveLogin  string
    createAccount  string
    emailLabel  string
    firstNameLabel  string
    firstNamePlaceholder  string
    lastNameInfo  string
    lastNameLabel  string
    lastNamePlaceholder  string
    leaveRegistrationConfirmation  string
    login  string
    passwordLabel  string
    title  string

  talentVisibilities
    privateDescription  string
    privateTitle  string
    publicDescription  string
    publicTitle  string

  talentWorkDetail
    acceptInvitation  string
    deleteInvitation  string
    deleteInvitationConfirmation  string
    no  string
    yes  string

  talentWorksList
    noPendingWorksMessage  string
    noPendingWorksTitle  string
    searchWorks  string
    workOverview  string

  timeSelection
    addTime  string
    date  string
    noTimesSelected  string
    time  string

  timeSelectionForm
    addTime  string
    cancel  string
    errorMessage
      invalid  string
      notInFuture  string


  unauthorized
    pleaseLogin  string
    title  string

  userProfile
    description  string
    error  string
    save  string
    subtitle  string
    success  string

  userProfileForm
    address  string
    firstName  string
    firstNamePlaceholder  string
    lastName  string
    lastNamePlaceholder  string
    phoneNumber  string
    phoneNumberPlaceholder  string
    selectPlaceHint  string

  userProfileInput
    info  string
    title  string

  utils
    createdSince  string

  workAnswerListing
    answeredQuestions  string

  workDescription
    estimatedWorkDuration  string
    referenceNumber  string
    workCategory  string
    workDescription  string
    workLocation  string
    workTimes  string

  workForm
    isSpecificWorkPlace  string
    isSpecificWorkPlaceInfo  string
    isWorkPublic  string
    isWorkPublicInfo  string
    pictureWarning  string

  workNew
    addQuestion  string
    cancel  string
    deleteImage  string
    errors
      missingSubcategory  string

    estimatedWorkDuration  string
    hasTalentToBeAvailableAtSpecificTime  string
    hornbach
      footer
        text  string
        title  string

      title  string

    imOnlyAvailableAtSpecificTimeCheckbox  string
    infoNote  string
    introduction  string
    invitationInfo  string
    maxUploadSize  string
    phoneNumber  string
    phoneNumberPlaceholder  string
    questionNotValid  string
    questionsToTheTalent  string
    questionsToTheTalentPlaceholder  string
    selectPossibleTimes  string
    selectPossibleTimesHint  string
    submit  string
    submitError  string
    submitSuccess  string
    submitSuccessWithInvitationHint  string
    termsCheckbox  string
    termsCheckboxInfo1  string
    termsCheckboxInfo2  string
    termsCheckboxInfo3  string
    timeAndQuestions  string
    title  string
    uploadPlaceholder  string
    whatHasToBeDone  string
    whatHasToBeDonePlaceholder  string
    workTitle  string
    workTitlePlaceholder  string

  workRating
    comment  string
    commentPlaceholder  string
    starRatingHint  string
    title  string

  workStateListItem
    archivedWarning  string
    delete  string
    deleteConfirmation  string
    moreDates
      one  string
      other  string

    showMore  string
    workAssigned  string

     until here

   Warning  this file has been generated by bin generate i18n  Do not change or commit it
   tslint disable max line length
   tslint disable ter max len
import   LawoonTranslations   from    i18n interface

interface AllLawoonTranslations
   key  string   LawoonTranslations


export const allTranslations  AllLawoonTranslations
     this part is generated from de json  en json
  de
    aboutLawoon
      renuoDescription   Die Renuo AG mit Sitz in Wallisellen bei ZÃ¼rich ist eine Webagentur  die aktuell Ã¼ber 14 Mitarbeitende beschÃ¤ftigt  Sie entwickelt hochwertige  sichere und stabile Websoftware  In enger Zusammenarbeit mit Lawoon hat Renuo die Plattform erstellt und entwickelt sie laufend weiter
      techPartner   Entwicklungspartner
      title   Ãber Lawoon

    addressSelector
      placeholder   Beispiel  Musterstrasse 45  8045 ZÃ¼rich

    adminUsers
      allUsers   Alle Benutzer
      customerPhone   Auftraggeber Tel
      email   E Mail
      name   Name
      signInAs   Einloggen

    adminWorks
      actions   Actions
      assignMyself   assign myself
      callClient   Call the client
      clientContacts   Client Contacts
      createdAt   Created At
      deleteDraft   Delete Draft
      email   E Mail
      job   Job
      jobsModeration   Jobs Moderation
      moderate   Moderate
      moderateJob   Moderate job
      moderationComments   Moderation comments
      name   Name
      notAssigned   Not assigned
      phoneNumber   Phone Number
      publish   Publish
      saveDraft   Save Draft

    archivedWorkDetail
      noArchivedOffers   Du hattest keine Offerten

    authentication
      errors
        acceptAgbs   Du musst die AGB  s akzeptieren
        invalidEmail   Gib eine gÃ¼ltige E Mail Adresse ein
        noPassword   Gib ein Passwort ein
        shortPassword   Das Passwort muss aus mindestens 8 Zeichen bestehen

      loginSuccess   Login erfolgreich  Willkommen zurÃ¼ck
      registrationSuccess   Registration erfolgreich  Herzlich willkommen

    categorySelection
      descriptionCategory   Hauptkategorie
      descriptionSubcategory   Unterkategorie
      placeholderCategory   Kategorie wÃ¤hlen
      placeholderSubcategory   Unterkategorie wÃ¤hlen

    chat
      messages
        contentPlaceholder   Deine Nachricht
        customerTitle    Auftraggeber
        deleteConfirm   Willst Du die Nachricht wirklich lÃ¶schen
        submit   Nachricht senden
        title   Fragen und Antworten

      privateWorkChat
        helpText   Diese Unterhaltung ist nur fÃ¼r Dich und den EmpfÃ¤nger sichtbar

      publicWorkChat
        helpText   Solange der Auftrag nicht vergeben ist  sind alle Mitteilungen fÃ¼r alle angemeldeten Nutzer sichtbar

      usageAgreement   Telefonnummern und E Mail Adressen sind im Chat nicht erlaubt  Offerten mÃ¼ssen direkt Ã¼ber den oben aufgefÃ¼hrten Button  Offerte erstellen  platziert werden  Sobald der Auftraggeber deine Offerte angenommen hat  informieren wir dich Ã¼ber die detaillierten Koordinaten wie Name  Adresse  Telefonnummer usw

    collapsibleTalentInfo
      aboutLabel   Ãber mich
      hideDetails   Details verstecken
      serviceDescriptionLabel   Ich biete folgende Dienstleistungen an
      showDetails   Details anzeigen

    completedWorkList
      profilesPerPage    Profile pro Seite anzeigen
      title   Abgeschlossene AuftrÃ¤ge

    contractAddressDetails
      customer   Auftraggeber in
      email   E Mail
      phoneNumber   Telefonnummer
      talent   Talent
      title   Kontaktdetails
      workPlace   AusfÃ¼hrungsort

    costForm
      addCostItem   Kostenpunkt hinzufÃ¼gen
      amount   Menge
      cancel   Abbrechen
      cost   Kosten
      costBelowMinimum   Der Mindestbetrag ist 20 CHF
      costEstimation   AufwandschÃ¤tzung
      costIsInvalid   Die eingegebenen Kosten sind noch nicht gÃ¼ltig
      costItemBelowMinimum   Der Mindestbetrag ist 0 45 CHF
      costItems   Zusatzaufwand
      enterCostDescription   Der von dir offerierte Betrag ist nicht fix  Du kannst den Betrag anpassen bevor du dem Kunden die definitive Rechnung zukommen lÃ¤sst  Es kann ja sein  dass du mehr oder weniger Aufwand hattest
      enterFixCostDescription   Der von dir offerierte Betrag ist fix  Du kannst den Betrag nicht mehr anpassen bevor du dem Kunden die definitive Rechnung zukommen lÃ¤sst
      fixedPrice   Pauschalangebot
      fixedRate   Pauschalpreis
      fixedRateInfo   Was du fÃ¼r den Auftrag verlangst
      netHourlyRate   Dein Stundensatz
      netHourlyRateInfo   Was Du tatsÃ¤chlich pro Stunde verdienst  exkl  MwSt  der ServicegebÃ¼hren
      price   Preis
      submit   HinzufÃ¼gen
      total   Kosten
      workCostBelowMinimum   Der Mindestbetrag fÃ¼r Deine Arbeit ist CHF 3

    costListing
      amount   Menge
      amountOfServiceFee   ServicegebÃ¼hren im Betrag von   fee
      amountShort   Stk
      cost   Aufwand
      subtotal   Subtotal
      timeRequired   Arbeitszeit
      total   Total
      vat   Mehrwertsteuer
      vatShort     percent   MwSt

    customerArchive
      details   Details
      noArchivedWorksTitle   Du hast noch keine archivierten AuftrÃ¤ge
      workState
        canceled   Abgebrochen
        done   Erledigt


    customerBillDetail
      complaintHelp   Sollte die Rechnung nicht gemÃ¤ss Absprache sein oder falls Du mit der Rechnung nicht einverstanden bist  nimm mit dem Talent Kontakt auf und suche mit ihm eine passende LÃ¶sung  Wenn Du mit dem Talent keine geeignete LÃ¶sung findest  kontaktiere
      complaintLink   Lawoon
      definitiveCost   Kosten total    amount
      paymentMethodTitle   Du bezahlst mit folgender Karte
      paymentMethodUnfold   Anders bezahlen
      processingBillPayment   Zahlung wird ausgelÃ¶st
      receiptCreate   Rechnung akzeptieren und zahlen
      receiptCreatedError   Bei der Bezahlung ist ein Fehler aufgetreten  Bitte wende Dich an Lawoon fÃ¼r weitere Infos oder wÃ¤hle ein anderes Zahlungsmittel
      receiptCreatedSuccess   Du hast die Rechnung erfolgreich akzeptiert

    customerBills
      billedTotal   Totalbetrag
      costAdjusted    Der Totalbetrag hat sich seit der Offerte verÃ¤ndert
      details   Details
      pendingBills
        one   Du hast eine Rechnungen zur Freigabe  5 Tage nach Rechnungsstellung wird sie automatisch akzeptiert
        other   Du hast   count   Rechnungen zur Freigabe  5 Tage nach Rechnungsstellung werden sie automatisch akzeptiert

      title   Rechnungen

    customerContractNew
      acceptOffer   Offerte annehmen
      chooseTime   WÃ¤hle eine der vorgeschlagenen Zeiten
      declineOffer   ablehnen
      declineSuccess   Offerte wurde erfolgreich abgelehnt
      error   Es ist ein Fehler aufgetreten
      reasonOtherTalent   Ich habe mich fÃ¼r ein anderes Talent entschieden
      reasonToExpensive   Zu teuer
      success   Offerte wurde erfolgreich angenommen
      warning   Achtung
      warningInfo    Wenn Du die Offerte annimmst  verpflichtest Du Dich  dass die Arbeit um die gegebenen Zeiten durchgefÃ¼hrt werden kann

    customerContracts
      details   Details   Kontakt
      pendingContracts
        one   Du hast einen laufenden Auftrag
        other   Du hast   count   laufende AuftrÃ¤ge

      title   AuftrÃ¤ge

    customerDashboard
      offer
        one     count   Offerte
        other     count   Offerten

      workState
        canceled   Abgebrochen
        done   Erledigt
        draft   Warte auf Freischaltung
        offering   Warte auf Offerten
        offeringWithOffers   Wartet auf Offertenannahme
        payment   Wartet auf Bezahlung
        rating   Wartet auf Bewertung
        running   Warte auf Erledigung
        waitingForBill   Warte auf Rechnungsstellung


    customerInvitationDetails
      archivedWarning   Warnung  Diese Einladung ist gelÃ¶scht und nur fÃ¼r Dich ersichtlich
      backToOverview   ZurÃ¼ck zur Ãbersicht
      delete   Talent ausladen
      deleteConfirmation   Willst Du das Talent wirklich ausladen  Dann kann das Talent keine Offerte mehr schreiben  Diese Aktion kann nicht rÃ¼ckgÃ¤ngig gemacht werden
      edit   Bearbeiten

    customerInvitations
      decline   ZurÃ¼ckziehen
      description   Hier findest alle Talente  die Du eingeladen hast  Dir eine Offerte zu erstellen
      details   Details
      inviteTalent
        description   Suche nach Talenten und lass Dir von diesen eine Offerte zukommen
        title   Talente zum Offerieren einladen

      status
        declinedByCustomer   ZurÃ¼ckgezogen
        declinedByTalent   Offerteneinladung abgelehnt
        offer   Offerte erhalten
        pending   Warte auf Antwort

      title   Talente

    customerLandingpage
      description1   Auf lawoon ch findest Du Profis und Freelancer aus den Bereichen Handwerk  Garten  Reinigung  Umzug  IT  Grafik  Finanzen  Marketing  Ausbildung  Sport  Beauty und vielen mehr  Hier platzierst Du Deinen Auftrag   egal ob Malarbeit  Reinigungsprojekt oder Sprachnachhilfe   schnell und kostenlos und erhÃ¤ltst bald verschiedene Offerten  WÃ¤hle die Beste aus und vereinbare mit Deinem Auftragnehmer die weiteren Eckpunkte
      description2   Auf lawoon ch spielt es keine Rolle  ob Du Deinen Auftrag fÃ¼r Dich privat oder fÃ¼r ein Unternehmen platzierst und Du kannst so viele AuftrÃ¤ge erstellen  wie Du willst  Sobald Du Deine passende Arbeitskraft gefunden hast und nachdem ein Auftrag ausgefÃ¼hrt wurde  werden Dir die Kosten belastet und dem Arbeitnehmer automatisch Ã¼berwiesen  So bleibt Dir mehr Zeit fÃ¼r die wirklich wichtigen Dinge im Leben  Probiere es jetzt aus
      descriptionHead   Suchst Du einen Handwerker  GÃ¤rtner oder Elektriker  Brauchst Du Hilfe mit Deinem Computer oder der SteuererklÃ¤rung  Dann bist Du bei Lawoon genau richtig
      title   Platziere Deine AuftrÃ¤ge auf Lawoon
      title1   Auftrag platzieren
      title2   Arbeitskraft finden

    customerOfferDetail
      archivedOffers   Archivierte Offerten
      noOffersForPrivateWork   Du hast keine Offerten zu beantworten  Dies ist ein nicht Ã¶ffentlich ausgeschriebener Auftrag  Hast Du Talente eingeladen  um Offerten zu bekommen
      noOffersForPublicWork   Du hast keine Offerten zu beantworten  Du kannst auch Talente direkt zum offerieren einladen  um Offerten zu bekommen

    customerOffers
      details   Details
      pendingOffers
        one   Du hast eine ausstehende Offerte welche Du beantworten musst
        other   Du hast   count   ausstehende Offerten  welche Du beantworten musst

      title   Offerten
      total   Totalbetrag

    customerOnboarding
      createWork   Auftrag erstellen
      createWorkIntro   Hast Du bereits ein Projekt  das Du erledigt haben mÃ¶chtest oder bei dem Du UnterstÃ¼tzung brauchst  Dann erstelle jetzt einen Auftrag  damit sich unsere Talente bei Dir melden kÃ¶nnen
      searchTalents   Talente finden
      searchTalentsIntro   Ist Dein Projekt noch in der Planungsphase  Bist Du Dir noch nicht ganz sicher  welche Qualifikationen Deine Talente brauchen  Dann stÃ¶bere Dich doch erstmal ein wenig durch unsere Talent Datenbank
      welcomeMessage   Dein Account wurde erfolgreich erstellt  Willkommen auf Lawoon

    customerPublicAnnouncements
      details   Details
      pendingPublicAnnouncements
        one   Du hast einen Ã¶ffentlich ausgeschriebenen Auftrag
        other   Du hast   count   Ã¶ffentlich ausgeschriebene AuftrÃ¤ge

      title   Ãffentliche AuftrÃ¤ge

    customerRating
      alreadyRated   Du hast die Zusammenarbeit bereits bewertet
      back   ZurÃ¼ck
      ratingSuccess   Erfolg  Bewertung wurde abgegeben
      sendRating   Bewertung abschicken

    customerReceiptDetail
      backToArchive   ZurÃ¼ck zur Ãbersicht
      backToReceipts   ZurÃ¼ck zur Ãbersicht
      printBill   Druckansicht
      ratingCreate   Jetzt das Talent bewerten
      ratingExplanation   Du hast das Talent fÃ¼r diesen Auftrag noch nicht bewertet

    customerReceipts
      linkToBill   Rechnung
      loadMore   Weitere laden
      noReceiptsYet   Du hast noch keine abgeschlossenen AuftrÃ¤ge
      totalCost   Kosten total    amount
      workWasDone   Auftrag ausgefÃ¼hrt am

    customerWorkDetail
      deleteConfirmation   Willst Du den Auftrag wirklich lÃ¶schen  Dann werden alle eingegangenen Offerten automatisch abgelehnt  Diese Aktion kann nicht rÃ¼ckgÃ¤ngig gemacht werden
      deleteWork   Auftrag lÃ¶schen
      editWork   Auftrag anpassen
      noInvitationsYet   Du hast noch keine Talente eingeladen

    customerWorkEdit
      cancel   Abbrechen
      error   Es ist ein Fehler aufgetreten  Bitte versuche es spÃ¤ter nochmals
      submit   Speichern
      success   Deine Ãnderungen wurden gespeichert
      title   Auftrag bearbeiten

    customerWorkModerate
      cancel   Cancel
      error   An error has occurred  Please try again later
      submit   Save
      success   Your changes have been saved
      title   Amend job

    customerWorksList
      createWork   Jetzt Auftrag erstellen
      noInvitationsWarning   Keine Talente eingeladen
      noPendingWorksMessage   Hast Du bereits ein Projekt  das Du erledigt haben mÃ¶chtest oder bei dem Du UnterstÃ¼tzung brauchst  Dann erstelle jetzt einen Auftrag  damit sich unsere Talente bei Dir melden kÃ¶nnen
      noPendingWorksTitle   Du hast noch keine laufenden AuftrÃ¤ge
      workOverview   AuftragsÃ¼bersicht

    dashboard
      privateWork   privater Auftrag
      tabs
        archived   Archiviert
        pending   Aktuell


    emailEdit
      currentPassword   Aktuelles Passwort
      email   Neue E Mail Adresse
      responseError   Es ist ein Fehler aufgetreten  Die E Mail Adresse wurde nicht geÃ¤ndert  MÃ¶glicherweise ist Dein aktuelles Passwort falsch
      submit   Speichern
      success   E Mail Adresse erfolgreich geÃ¤ndert
      title   E Mail Adresse Ã¤ndern

    footer
      aboutLawoon   Ãber Lawoon
      contact   Kontakt
      faq   FAQ
      jobs   Jobs
      linksCaption   Das ist Lawoon
      terms   Rechtliches

    forbidden
      helpText   Du hast keinen Zugriff auf diese Ressource
      title   Stopp

    home
      advantages
        competentTalentCaption   Kompetente und zuverlÃ¤ssige Talente
        competentTalentDescription   Unsere Talente sind Profis und Nebenjobber  welche stets bemÃ¼ht sind  deinen Auftrag einwandfrei durchzufÃ¼hren  Unsere Talente sind pÃ¼nktlich  zuverlÃ¤ssig und werden regelmÃ¤ssig von uns geprÃ¼ft
        guaranteedOfferCaption   Garantierte Offerte innerhalb von wenigen Stunden
        guaranteedOfferDescription   Nachdem der Auftrag Ã¶ffentlich platziert wurde  erhÃ¤ltst du bereits in wenigen Stunden einige interessante und unverbindliche Offerten  Nimm die passende Offerte an und lass deinen Auftrag erledigen
        satisfactoryPaymentCaption   Bezahlung erst bei zufriedenstellend ausgefÃ¼hrter Leistung
        satisfactoryPaymentDescription   Nachdem der Auftrag zu deiner vollen Zufriedenheit erledigt wurde  musst du nur noch kurz die Rechnung akzeptieren und kannst anschliessend zurÃ¼cklehnen  Sollte etwas nicht so sein wie du es dir vorgestellt hast  melde dich bei uns  wir kÃ¼mmern uns gerne darum
        title   So machen wir Dein Leben einfacher

      knownFrom   Bekannt aus
      ourPartners   Unsere Partner
      process
        customer
          createWork   Auftrag erstellen
          createWorkDescription   Platziere mit wenigen Klicks einen Auftrag auf Lawoon  Du kannst den Auftrag Ã¶ffentlich ausschreiben  sodass Dir interessierte Talente gleich eine Offerte schreiben kÃ¶nnen oder lade Dein Wunschtalent gleich selber fÃ¼r den Auftrag ein  Normalerweise erhÃ¤ltst du die ersten Offerten bereits nach wenigen Stunden
          payment   Einfache Bezahlung
          paymentDescription   Nachdem du die Rechnung des Talents akzeptiert hast wird Dir der Betrag der Kreditkarte belastet und der Lohn direkt dem Talent Ã¼berwiesen  Du hast jetzt noch die MÃ¶glichkeit  das Talent zu bewerten
          selectOffer   Offerte auswÃ¤hlen
          selectOfferDescription   WÃ¤hle die fÃ¼r Dich passende Offerte aus
          start   Jetzt Auftrag erstellen
          title   Du hast einen Auftrag der erledigt werden muss
          workPending   Auftrag wird erledigt
          workPendingDescription   Das ausgewÃ¤hlte Talent wird Deinen Auftrag zum abgemachten Zeitpunkt ausfÃ¼hren

        talent
          doWork   Job erledigen
          doWorkDescription   Deine Offerte wurde angenommen und Du erledigst den Job zum abgemachten Zeitpunkt
          findWork   Auftrag finden
          findWorkDescription   Melde Dich als Talent auf Lawoon an und bewirb Dich fÃ¼r interessante AuftrÃ¤ge oder warte bis ein Auftraggeber Dich fÃ¼r einen Job einlÃ¤dt
          getPaid   Bezahlt werden
          getPaidDescription   Nach spÃ¤testens 5 Arbeitstagen ist Dein Lohn auf Deinem Konto
          start   Jetzt Talent werden
          title   So einfach kannst Du als Talent Geld verdienen
          writeBill   Rechnung stellen
          writeBillDescription   Auftrag erledigt    Stelle die definitive Rechnung aus  Du hast hier die MÃ¶glichkeit  nicht vorhergesehene AufwÃ¤nde wie z B  Materialkosten oder Ãberstunden weiter zu verrechnen
          writeOffer   Offerte schreiben
          writeOfferDescription   Schreibe dem Auftraggeber eine Offerte und vielleicht hast Du schon bald einen neuen Auftrag

        title   Und so einfach gehts

      teaser
        goOrder   Auftrag erstellen
        goTalent   Talent werden
        subtitle   Der Schweizer Marktplatz fÃ¼r Auftragsvermittlung
        title   Lawoon   lass es tun

      testimonials
        testimonialFirst
          mention   Schnelle und unkomplizierte Abwicklung von KleinauftrÃ¤gen   von der Erfassung von Adresslisten bis hin zu Grafikarbeiten
          signatureName   Dariush Daftarian
          signaturePosition   Partner cdg Beratungen

        testimonialSecond
          mention   Unkomplizierte Beauftragung  sensationeller Service und perfekte Auftragserledigung  Lawoon hat unsere Erwartungen schon mehrmals Ã¼bertroffen   jederzeit wieder
          signatureName   Alain Friedrich
          signaturePosition   Luzern

        testimonialThird
          mention   Ich habe Ã¼ber Lawoon bereits mehrere AuftrÃ¤ge abgewickelt   MÃ¶bel aufbauen  Lampe montieren und sogar das Hochzeitscatering habe ich Ã¼ber Lawoon gebucht  Die Plattform ist sehr gut und simpel aufgebaut  Man kann einfach einen Auftrag platzieren und kurze Zeit spÃ¤ter kommen bereits interessante Offerten  Jederzeit gerne wieder
          signatureName   Fabienne Reiter
          signaturePosition   BÃ¤retswil

        title   Kundenmeinungen


    imprint
      about   Impressum
      toBeContinued   Informationen folgen

    lawoonCostListing
      amountWithVat   im Betrag von
      amountWithoutVat   im Nettobetrag von
      percentageOfBill   12 5  Ihrer Rechnung
      total   Total
      totalWithVat   Total inkl    vatRate   Mehrwertsteuer
      vat   Mehrwertsteuer

    login
      error   Es ist ein Fehler aufgetreten
      notAuthorized   E Mail oder Passwort falsch
      resetPasswordSuccess   Das Passwort wurde erfolgreich geÃ¤ndert  Bitte logge Dich mit dem neuen Passwort ein

    loginForm
      emailLabel   E Mail
      emailPlaceholder   E Mail
      noLogin   Du hast noch kein Profil
      passwordForgotten   Passwort vergessen
      passwordLabel   Passwort
      passwordPlaceholder   Passwort
      register   Registrieren
      signIn   Anmelden

    metaData
      completedWorks
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Abgeschlossene AuftrÃ¤ge

      customerLandingpage
        description   Platziere Deine AuftrÃ¤ge auf Lawoon und finde Profis fÃ¼r Handwerk  Garten  Reinigung  Umzug  IT  Grafik  Finanzen  Marketing  Sport und Beauty
        title   AuftrÃ¤ge platzieren auf Lawoon

      default
        description   Die unkomplizierte Arbeitsvermittlung  Jetzt kostenlos registrieren  Der einfachste Weg  die richtige Person fÃ¼r den richtigen Job zu finden
        title   Lawoon   lass es tun

      jobs
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Lawoon   Offene Stellen  Projektleiter

      talentLandingpage
        description   Lawoon hilft Dir  neue ArbeitsauftrÃ¤ge zu finden  Egal ob Du Student  Freelancer oder eine Fachkraft bist  erstelle jetzt Dein Profil
        title   Profil erstellen auf Lawoon

      talents
        description   Der einfachste Weg  die richtige Person fÃ¼r den richtigen Job zu finden  Jetzt Talente fÃ¼r Deinen individuellen Auftrag finden
        title   Lawoon Talente

      works
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Lawoon AuftrÃ¤ge


    navbar
      blue
        browseAnnouncements   AuftrÃ¤ge finden
        browseTalents   Talente finden
        createWork   Auftrag erstellen

      browseTalents   Talente finden
      customer
        profile   Profil
        roleName   Ich als Auftraggeber
        tabSearchWorks
          archivedWorks   Belege
          createWork   Auftrag erstellen
          pendingWorks   Laufende AuftrÃ¤ge
          terms   Rechtliches

        talents   Talente stÃ¶bern
        works   Meine AuftrÃ¤ge

      lawoon   Lawoon
      right
        dashboard   Meine AuftragsÃ¼bersicht
        login   anmelden
        logout   abmelden

      talent
        browseAnnouncements   AuftrÃ¤ge stÃ¶bern
        createWork   Auftrag erstellen
        profile   Profil
        roleName   Ich als Talent
        tabMyWorks
          bills   Rechnungen
          declinedOffers   Abgelehnte Offerten
          invitations   Einladungen
          offers   Offerten
          onGoingOffers   AuftrÃ¤ge
          receipts   Belege
          terms   Rechtliches

        works   Meine Arbeit


    noConnection
      info   Verbindung zu Lawoon fehlgeschlagen
      reload   Seite neu laden

    notificationSettings
      dailySummary
        daily   TÃ¤glich
        description   Du kannst Dir eine tÃ¤gliche Zusammenfassung mit allen offenen AuftrÃ¤gen zustellen lassen
        never   Niemals
        title   TÃ¤gliche Zusammenfassung

      disabledWarning   Bist Du Dir sicher  Du verpasst so vermutlich wichtige Ereignisse
      email   E Mail
      keyMappings
        billPaid   Rechnung wurde bezahlt
        billReminder   Erinnerung um Rechnung zu erstellen
        customerDeclinedOffer   Offerte wurde abgelehnt
        newBill   Rechnung wurde gestellt
        newContract   Offerte wurde akzeptiert
        newInvitation   Neue Einladung
        newMessage   Neue Nachricht
        newOffer   Neue Offerte
        workStartReminder   Erinnerung an Arbeitsbeginn

      noCustomerPhoneNumberError   Du hast in Deinem Auftraggeberprofil keine Handy Nummer hinterlegt
      push   Push
      pushHintHasApp   Push Notifications werden Dir direkt auf Dein Mobiltelefon geschickt  auch wenn du die App geschlossen hast
      pushHintHasNoApp   Hol Dir jetzt die Lawoon Mobile App  und bleib mit Push Notifications auf dem Laufenden
      sms   SMS
      submit   Speichern
      title   Benachrichtigungen
      updateError   Fehler beim Aktualisieren der Einstellungen
      updateSuccess   Einstellungen gespeichert
      workSuggestions
        descriptionInterval   Sobald ein neuer Auftrag in Deinen unten ausgewÃ¤hlten Kategorien erstellt wird  erhÃ¤ltst Du eine Benachrichtigung  WÃ¤hle aus  wie oft und wie Du benachrichtigt werden willst
        descriptionSubcategories   Welche Kategorien interessieren Dich
        interval
          daily   TÃ¤glich
          immediate   Sofort
          never   Niemals

        title   Spannende AuftrÃ¤ge fÃ¼r Dich


    notifications
      noMessagesYet   Du hast noch keine Benachrichtigungen

    offerAcceptModal
      accept   Offerte annehmen
      cancel   Abbrechen
      text   Bist du sicher  dass du diese Offerte annehmen willst
      title   Offerte annehmen

    offerDeclineModal
      cancel   Abbrechen
      decline   Offerte ablehnen
      errorMessage   Bitte einen Grund angeben
      otherReason   Anderer Grund
      otherReasonPlaceholder   Was hat Dir an der Offerte nicht gepasst
      title   Grund fÃ¼r Absage

    offerShow
      hideDetails   Details verstecken
      offerText   Detailinformationen
      offered   Offeriert    amount
      possibleTimes   Das Talent hat Dir folgende Auswahl zur Erledigung des Auftrags gegeben
      showDetails   Details anzeigen
      workIsDoneOn   Der Job wird zu folgender Zeit erledigt
      workPlace   AusfÃ¼hrungsort

    pageNotFound
      description   Die gewÃ¼nschte Seite konnte nicht aufgerufen werden
      title   404  Seite nicht gefunden

    pagination
      first    lsaquo  lsaquo
      last    rsaquo  rsaquo
      next    rsaquo
      previous    lsaquo

    passwordEdit
      currentPassword   Aktuelles Passwort
      description   Lange PasswÃ¶rter mit vielen Zeichen sind sicherer als kurze
      password   Neues Passwort
      passwordConfirmation   Neues Passwort  Sicherheitseingabe
      responseError   Es ist ein Fehler aufgetreten  Das Passwort wurde nicht geÃ¤ndert  MÃ¶glicherweise ist Dein aktuelles Passwort falsch
      submit   Speichern
      success   Passwort erfolgreich geÃ¤ndert
      title   Passwort Ã¤ndern

    passwordForgotten
      description   Setze das Passwort zurÃ¼ck  indem Du Deine E mail Adresse eingibst
      emailPlaceholder   Deine E Mail Adresse
      error   Es ist ein Fehler aufgetreten  Bitte versuche es erneut
      modalTitle   Passwort vergessen
      navigateToLogin   Zum Login
      resetInstructions   Du bekommst nun auf die angegebene Adresse eine E Mail mit einem Link  mit welchem Du Dein Passwort zurÃ¼cksetzen kannst
      submit   Passwort zurÃ¼cksetzen

    passwordReset
      modalTitle   Passwort neu setzen
      passwordConfirmationPlaceholder   Neues Passwort wiederholen
      passwordPlaceholder   Neues Passwort
      resetFailed   Es ist ein Fehler aufgetreten  Das Passwort wurde nicht zurÃ¼ckgesetzt  Bitte versuche es erneut
      submit   Passwort zurÃ¼cksetzen

    passwordValidator
      invalidConfirmation   Die PasswÃ¶rter stimmen nicht Ã¼berein
      invalidLength   Das Passwort muss aus mindestens 8 Zeichen bestehen

    payment
      bankAccount
        bankAccountForm
          accountName
            label   Konto lautend auf
            missing   Bitte gib einen Namen ein
            placeholder   Peter Muster

          iban
            label   IBAN
            missing   Bitte gib eine gÃ¼ltige Schweizer IBAN ein
            placeholder   CH93 0076 2011 6238 5295 7
            wrongFormat   Bitte gib eine gÃ¼ltige Schweizer IBAN ein

          submit   Bankdaten erfassen
          updatedSuccessful   Die Bankdaten wurden aktualisiert
          updatedUnsuccessful   Es gab ein Problem beim aktualisieren der Bankdaten


      paymentMethods
        dialog
          description   Bitte Zahlungsmittel eingeben
          name   Lawoon
          panelLabel   Karte hinterlegen

        endingWith   endet mit
        errors
          missingPaymentMethod   Du musst ein Zahlungsmittel auswÃ¤hlen

        explanation   Um Rechnungen auf einfachste Art zu begleichen  muss ein Zahlungsmittel hinterlegt werden  SelbstverstÃ¤ndlich belasten wir Deine Kreditkarte nie ohne Deine Erlaubnis
        privacyInformation   Deine Daten werden verschlÃ¼sselt durch einen zertifizierten Drittanbieter Ã¼bermittelt
        storePaymentMethod   Neues Zahlungsmittel hinterlegen
        title   Deine Zahlungsmittel

      stripe
        authorize
          connected   Verbindung hergestellt
          connecting   Verbindung wird hergestellt
          retry   Nochmal versuchen
          serverError   Es ist ein unbekannter Fehler aufgetreten
          stripeError   Es ist ein Fehler aufgetreten  Der Stripe Account konnte nicht erstellt und verbunden werden
          title   Bankdaten aktualisieren

        connect
          button   Bankdaten erfassen mithilfe von Stripe
          connected   Account bereits verbunden
          defaultProductDescription   Ich bin ein Lawooner
          refreshTalentBankAccount   Bankdaten aktualisieren

        explanation   Um Rechnungen auf einfachste Art zu begleichen  muss eine Bankverbindung hinterlegt werden  damit Lawoon Dir Geld Ã¼berweisen kann


    print
      title   Druckansicht

    privacy
      dataPrivacyStatement   DatenschutzerklÃ¤rung
      toBeContinued   Informationen folgen

    profilePictureComponent
      altText   Profilbild
      professionalBadgeText   Profi

    profileSettings
      title   Einstellungen

    profileSubnavbar
      account   Account
      notifications   Benachrichtigungen
      payment   Zahlungsmittel
      talent   Talentprofil
      user   Benutzerprofil

    publicAnnouncementFilter
      newestEntries   Neuste EintrÃ¤ge
      oldestEntries   Ãlteste EintrÃ¤ge
      operationPlace   oder in der NÃ¤he von
      showOnlyOpenAnnouncements   Nur offene AuftrÃ¤ge anzeigen
      sortBy   Sortieren nach

    publicWorkList
      filter   AuftrÃ¤ge filtern
      lawoonAdButton   Jetzt Auftrag erstellen
      lawoonAdText   Du hast einen Auftrag der erledigt werden muss
      next   Weiter
      noWorksFound   Keine AuftrÃ¤ge gefunden
      profilesPerPage   Profile pro Seite anzeigen
      title    AuftrÃ¤ge stÃ¶bern
      writeOffer   Offerte schreiben

    quickAction
      adminPanel   Admin Dashboard
      customer
        roleName   Auftraggeberprofil

      logout   Abmelden
      settings   Einstellungen
      talent
        roleName   Talentprofil


    receiptList
      title   Rechnungen   Belege

    regionSelector
      invalidSelection   Bitte aus der Liste auswÃ¤hlen
      placeholder   Ort eingeben

    register
      error   Es ist ein Fehler aufgetreten  Stelle sicher dass Dein Passwort mindestens 8 Zeichen lang ist oder wÃ¤hle eine Mailaddress die noch nicht verwendet wird
      notAuthorized   E Mail schon vorhanden

    registration
      alreadyHaveLogin   Sie haben bereits ein Profil
      createAccount   Account erstellen
      emailLabel   E Mail
      emailPlaceholder   E Mail
      login   Anmelden
      passwordLabel   Passwort
      passwordPlaceholder   Passwort
      registration   Registrieren

    selectedTalentList
      invite   Jetzt einladen
      noSelectedTalentsInfo   Du hast noch keine Talente zum Einladen ausgewÃ¤hlt
      remove   Entfernen

    subcategorySelection
      allCategories   Alle
      descriptionCategories   Hauptkategorien
      descriptionSubcategories   Unterkategorien
      exampleDescription
        subcategory10   z Bsp  Wir haben eine neue Dusche  welche in unserem Badezimmer montiert werden muss
        subcategory11   z Bsp  Die neu gekaufte KÃ¼che muss in unserem Einfamilienhaus eingebaut werden
        subcategory12   z Bsp  Wir haben rund um das Haus 100qm Rasen  der bis Ende nÃ¤chster Woche gemÃ¤ht werden soll
        subcategory2   z Bsp  Bilder im Wohnzimmer aufhÃ¤ngen  Weihnachtsbeleuchtung anbringen usw
        subcategory3   z Bsp  Parkettboden muss im Wohnzimmer sowie in den Kinderzimmern verlegt werden
        subcategory4   z Bsp  Lampe muss im Wohnzimmer montiert und angeschlossen werden
        subcategory5   z Bsp  Kunstrasen verlegen  Rasenroboter installieren
        subcategory6   z Bsp  Rasenroboter in Betrieb nehmen sowie Begrenzungskabel verlegen
        subcategory7   z Bsp  Im ganzen Haus mÃ¼ssen diverse LÃ¼ftungsgitter neu angebracht werden
        subcategory8   z Bsp  Eine BÃ¼rowand  24 m2  muss neu gestrichen werden
        subcategory9   z Bsp  FÃ¼r das neue gekaufte Gartenhaus soll ein Fundament erstellt werden

      exampleTitle
        subcategory10   z Bsp  KÃ¼che einbauen
        subcategory11   z Bsp  Gartenhaus aufstellen
        subcategory12   z Bsp  Rasen mÃ¤hen
        subcategory2   z Bsp  diverse Arbeiten rund ums Haus
        subcategory3   z Bsp  Parkettboden verlegen
        subcategory4   z Bsp  Lampe montieren
        subcategory5   z Bsp  Kunstrasen verlegen  Rasenroboter installieren
        subcategory6   z Bsp  LÃ¼ftungsgitter montieren
        subcategory7   z Bsp  WÃ¤nde streichen
        subcategory8   z Bsp  Fundament fÃ¼r Gartenhaus
        subcategory9   z Bsp  Dusche montieren


    submitButton
      formInvalid   Bitte leere oder ungÃ¼ltige Felder ausfÃ¼llen
      label   Absenden

    successStory
      customerRating   Bewertung des Auftraggebers
      finishedSince   Vor   days   Tagen abgeschlossen
      showLess    Weniger
      showMore    Mehr
      showTalentProfile   Profil des Talents anschauen

    supportBox
      email   info lawoon com
      greeting   Hallo  Ich bin Nathalie
      howToHelp   Hast du Fragen oder darf ich ein Profil fÃ¼r dich erstellen
      openingHours   Ich bin gerne von Mo Fr von 08 00 17 00 fÃ¼r dich da
      phoneNr    41 44 687 19 19
      title   Support

    tabSubnavbar
      bill   Rechnung
      invitations   Talente
      offers   Offerten
      overview   Ãbersicht
      rating   Bewertung
      users   All Users
      works   Jobs Moderation
      yourOffer   Deine Offerte

    talentArchive
      details   Details
      noPendingWorksTitle   Du hast noch keine archivierten AuftrÃ¤ge
      workFlowStatus
        declinedInvitation   ZurÃ¼ckgezogene Einladung
        declinedOffer   Offerte wurde abgelehnt
        receipt   Abgeschlossen


    talentBillDetail
      connectToBankAccount   Wir kÃ¶nnen Dir noch kein Geld Ã¼berweisen
      connectToBankAccountInfo   Du musst zuerst Deine Bankinformationen hinterlegen bevor Du eine Rechnung stellen kannst
      createBill   Rechnung erstellen
      edit   Rechnung anpassen
      noBillCreatedYet   Du hast noch keine Rechnung fÃ¼r diesen Auftrag erstellt
      notAbleToCreateBillYet   Du kannst noch keine Rechnung fÃ¼r diesen Auftrag stellen

    talentBillEdit
      billCreatedError   Beim Rechnung erstellen ist ein Fehler aufgetreten
      billCreatedSuccess   Rechnung wurde erfolgreich erstellt
      billUpdatedError   Es ist ein Fehler aufgetreten
      billUpdatedSuccess   Rechnung wurde erfolgreich aktualisiert
      cancel   Abbrechen
      createSubmit   Abschicken
      createTitle   Rechnung erstellen
      editSubmit   Speichern
      editTitle   Rechnung bearbeiten
      offeredTotal   Kosten total

    talentBills
      amountForYou   Davon zu Deinen Gunsten
      billedTotal   Totalbetrag
      details   Details
      pendingBills
        one   Du hast eine Rechnung  die vom Kunde akzeptiert werden muss  5 Tage nach Rechnungsstellung wird sie automatisch akzeptiert
        other   Du hast   count   Rechnungen  die vom Kunde akzeptiert werden mÃ¼ssen  Rechnungen werden 5 Tage nach Rechnungsstellung automatisch akzeptiert

      title   Rechnungen

    talentBrowse
      costsPerHour    pro Stunde
      details   Mehr anzeigen
      invite   Anfragen
      lawoonAdButton   Jetzt Talent werden
      lawoonAdText   Du willst auch ein Talent werden
      profilesPerPage   Profile pro Seite anzeigen

    talentContracts
      detailLinkText   Details   Rechnung
      noPendingContracts   Du hast keine laufende AuftrÃ¤ge
      pendingContracts
        one   Du hast einen laufenden Auftrag
        other   Du hast   count   laufende AuftrÃ¤ge

      title   Deine AuftrÃ¤ge

    talentDashboard
      details   Details
      workFlowStatus
        bill   Wartet auf Bezahlung
        contract   AuszufÃ¼hren
        contractDone   Wartet auf Rechnungsstellung
        declinedInvitation   ZurÃ¼ckgezogene Einladung
        declinedOffer   Offerte wurde abgelehnt
        offer   Wartet auf Offertenannahme
        receipt   Abgeschlossen
        workInvitation   Wartet auf Offerte


    talentDeclinedOfferDetail
      backToOverview   ZurÃ¼ck zur Ãbersicht
      reason   Grund

    talentDeclinedOffers
      amountForYou   Davon zu Deinen Gunsten
      billedTotal   Totalbetrag
      declinedOffersCount
        one   Du hast eine abgelehnte Offerte
        other   Du hast   count   abgelehnte Offerten

      details   Details
      title   Abgelehnte Offerten

    talentFilter
      allQualifications   Alle
      location   In der NÃ¤he von
      nonprofessional   Nebenjobber
      professional   Profi
      professionalHint   geprÃ¼fte und zertifizierte Person Unternehmen
      qualification   Qualifikation
      search   Suchen
      searchPlaceholder   Beispiel  Maler

    talentLandingpage
      description1   Erstelle jetzt Dein Profil und erzÃ¤hl uns  was Dein Spezialgebiet ist   egal ob Handwerk  Garten  Reinigung  Umzug  IT  Grafik  Finanzen  Marketing  Ausbildung  Sport oder Beauty
      description2   Anschliessend kÃ¶nnen Dich Auftraggeber direkt anschreiben oder Du kannst Dich auf offene AuftrÃ¤ge bewerben  Erstelle dabei Deine individuellen Offerten und erhalte viele neue Jobs
      description3   Die Rechnungsabwicklung und GeldÃ¼berweisung nach erfolgreicher ArbeitsausfÃ¼hrung erledigen wir fÃ¼r Dich  So geniesst Du einen stressfreien Feierabend
      descriptionHead   Auf lawoon ch helfen wir Dir  neue ArbeitsauftrÃ¤ge zu finden  Dabei spielt es keine Rolle  ob Du Student  Freelancer oder eine Fachkraft bist  Wichtig ist  dass Du ein Talent hast in dem Bereich  den Du anbietest
      title   Erstelle jetzt ein Profil und erhalte Deine ersten AuftrÃ¤ge
      title1   Profil erstellen
      title2   AuftrÃ¤ge erhalten
      title3   Garantierte Bezahlung

    talentList
      filter   Talente filtern
      noResultsHint   Wenn Du den Job Ã¶ffentlich ausschreibst  kÃ¶nnen die Talente Dich finden
      noTalentsFound   Keine Talente gefunden
      talentAddedHint   Talent wurde zum Einladen bereit gelegt  WÃ¤hle weitere Talente und schicke die Einladung ganz oben ab
      title    Talente stÃ¶bern

    talentOfferDetail
      createOffer   Offerte erstellen
      deleteOffer   Offerte lÃ¶schen
      edit   Offerte anpassen
      offerDeletedSuccessful   Offerte wurde gelÃ¶scht
      offerText   Detailinformationen
      reasonChangedMyMind   Ich habe mich umentschieden
      reasonNoTime   Ich bin verhindert

    talentOfferEdit
      cancel   Abbrechen
      error   Es ist ein Fehler aufgetreten
      success   Die Ãnderungen wurden erfolgreich gespeichert
      title   Offerte bearbeiten
      updateOffer   Speichern

    talentOfferList
      details   Details einsehen
      pendingOffers
        one   Du hast eine unbeantwortete Offerte
        other   Du hast   count   unbeantwortete Offerten

      title   Unbeantwortete Offerten

    talentOfferNew
      addItem   Kostenpunkt hinzufÃ¼gen
      addItemError   UngÃ¼ltige Eingabe  Bitte gib eine Beschreibung  einen Preis und eine Menge an
      answerFollowingQuestions   Interview
      answerPlaceholder   Deine Antwort
      cancel   Abbrechen
      chooseTimeInfo   WÃ¤hle verbindlich aus  wann Du die Arbeit ausfÃ¼hren wirst
      costItemDescritpionPlaceholder   Beispiel  Reisekosten
      createOffer   Offerte erstellen
      detailInfos   Hier kannst Du dem Auftraggeber zusÃ¤tzliche Informationen geben  optional
      detailInfosPlaceholder   z B  Ich muss zusÃ¤tzlich zwei Reifen organisieren
      offeredTotal   Offerierte Kosten total
      selectDateTime   Zeitpunkt wÃ¤hlen
      selectWorkPlace   WÃ¤hle einen Ort fÃ¼r die DurchfÃ¼hrung des Auftrags
      sendOffer   Offerte abschicken
      submitError   Es ist ein Fehler aufgetreten
      submitSuccess   Offerte wurde erfolgreich erstellt
      yourEffort   Dein Aufwand

    talentOnboarding
      searchPublicAnnouncements   AuftrÃ¤ge finden
      searchPublicAnnouncementsIntro   Du willst gleich AuftrÃ¤ge finden und mit der Arbeit starten  Dann stÃ¶bere doch ein wenig durch die Ausschreibungen
      welcomeMessage   Dein Account wurde erfolgreich erstellt  Willkommen auf Lawoon

    talentProfileBankAccountEdit
      title   Bankdaten bearbeiten

    talentProfileCurrentStep
      back   ZurÃ¼ck
      beforeUnloadAlert   Deine Ãnderungen gehen verloren  wenn Du die Seite verlÃ¤sst
      step   Profil erstellen   Schritt   step   von 2

    talentProfileEdit
      error   Es ist ein Fehler aufgetreten
      save   Speichern
      title   Profil bearbeiten
      updateSuccessful   Ãnderungen erfolgreich aktualisiert

    talentProfileMisc
      address   Adresse
      iCompensateVat   Ich bin MwSt  pflichtig
      mobileNumber   Mobiltelefon Nummer
      mobileNumberPlaceholder   Beispiel   41 79 111 11 11
      selectPlaceHint   FÃ¼ge Strasse  Hausnummer und Ort hinzu
      vatNumber   Mehrwertsteuernummer
      vatNumberInfo   Gib hier Deine Mehrwertsteurnummer an
      vatNumberPlaceholder   Beispiel  CHE 123 456 789
      vatRate   Mehrwertsteuersatz
      vatRateInfo   Gib hier Deinen Steuersatz an  In der Schweiz liegt dieser normalerweise bei 7 7

    talentProfilePersonalInfo
      cancelRegistration   Abbrechen
      companyDetailsMissing   Gib entweder die Unternehmens Identifikationsnummer oder Website deiner Firma an
      companyName   Firmenname  optional
      companyNamePlaceholder   Beispiel  Malerei Meister
      companyUidRegisterNumber   Unternehmens Identifikationsnummer  UID
      companyUidRegisterNumberPlaceholder   Beispiel  CHE 492 117 729
      createProfileInfo   Erstelle komplett unverbindlich und kostenlos ein Profil auf Lawoon
      editProfilePicture   Profilfoto Ã¤ndern
      errorPhoto   Bitte lade ein Profilfoto hoch
      errors
        missingAttributes   Bitte leere oder ungÃ¼ltige Felder ausfÃ¼llen und stelle sicher  dass Du ein Profilfoto hochgeladen hast

      firstName   Vorname
      firstNamePlaceholder   Beispiel  Max
      iAmAProfessional   Ich bin Profi
      iAmAProfessionalInfo   Du Ã¼bst diese Dienstleistung hauptberuflich aus  hast eine abgeschlossene Ausbildung in diesem Gebiet und schon mehrere Jahre Berufserfahrung
      lastName   Nachname
      lastNameInfo   Wir zeigen nur Deinen Vornamen im Ã¶ffentlichen Profil
      lastNamePlaceholder   Beispiel  Meister
      maxFilesize   HÃ¶chstens 10MB
      profilePicture   Profilfoto
      profileVisibility   Mein Profil verstecken
      profileVisibilityInfo   Damit ist Dein Profil nicht mehr fÃ¼r Auftraggeber sichtbar
      saveAndContinue   Speichern und weiter
      serviceDescription   Welche Dienstleistungen bietest Du an
      serviceDescriptionPlaceholder   z Bsp    Reinigungen von KÃ¼che  Bad und Wohnzimmer
      tellSomethingAboutYou   ErzÃ¤hle uns etwas mehr Ã¼ber Deine Person
      tellSomethingAboutYouPlaceholder   Beispiel  Ich habe acht Jahre Berufserfahrung als Maler und so weiter
      uploadProfilePicture   Profilfoto hochladen
      website   Webseite
      websitePlaceholder   Beispiel  https   example com

    talentProfileQualification
      createError   Es ist ein Fehler aufgetreten
      createProfile   Profil erstellen
      createSuccess   Talentprofil wurde erfolgreich erstellt  Du kannst Dein Profil in den Einstellungen vervollstÃ¤ndigen
      education   Ausbildung  optional
      educationPlaceholder   Beispiel  2005 2009  Lehre als Maler mit eidg  Fachausweis
      experience   Berufserfahrung  optional
      experiencePlaceholder   Beispiel  2009 jetzt  FÃ¼hrung der Malerei Meister
      projectPlaceholder   Beispiel  2010 2011  Mitarbeit am Prime Tower
      projectPortfolio   ReferenzauftrÃ¤ge  optional
      title   Professionelle Erfahrung  optional
      titleInfo   Die erfolgreichsten Talente auf Lawoon ergÃ¤nzen Ihre Profile mit Ihrer professionellen Erfahrung und erhalten so Ã¶fter Zusagen

    talentPublicShow
      aboutLabel   Ãber mich
      qualification
        education   Ausbildung
        experience   Berufserfahrung
        projectPortfolio   ReferenzauftrÃ¤ge

      serviceDescriptionLabel   Ich biete folgende Dienstleistungen an

    talentRating
      continue   Keine Bewertung Abgeben
      sendRating   Bewertung abschicken

    talentRatings
      noComment    ohne Kommentar
      ratings   Bewertungen

    talentReceipt
      back   ZurÃ¼ck zur Ãbersicht
      billNumber   Rechnung Nr    referenceNumber
      paid   Betrag wurde bereits bezahlt
      print   Rechnung drucken
      vat   MwSt Nr

    talentReceiptDetail
      backToReceipts   ZurÃ¼ck zur Ãbersicht
      linkToBillCustomer   Rechnung an den Auftraggeber
      linkToBillLawoon   Rechnung von Lawoon

    talentReceiptLawoon
      billNumber   Rechnung Nr    referenceNumber
      introduction   FÃ¼r unsere Vermittlungsleistung fakturieren wir Ihnen unsere ServicegebÃ¼hr  Sie wurde dem Auftraggeber weiterverrechent und wird nicht von Ihrem Talente Lohn abgezogen
      sender
        address   SÃ¤gereistrasse 9
        city   Schindellegi
        company   Lawoon AG
        vatNumber   CHE 492 117 729 MWST
        zip   8834


    talentReceipts
      linkToBillCustomer   Rechnung an Auftraggeber
      linkToBillLawoon   Rechnung von Lawoon
      loadMore   Weitere laden
      noReceiptsYet   Du hast noch keine abgeschlossenen AuftrÃ¤ge
      totalCost   Kosten total    amount
      workWasDone   Auftrag ausgefÃ¼hrt am

    talentRegistration
      alreadyHaveLogin   Sie haben bereits ein Profil
      createAccount   Weiter zur Profilerstellung
      emailLabel   E Mail
      firstNameLabel   Vorname
      firstNamePlaceholder   z Bsp  Hans
      lastNameInfo   Wir zeigen nur Deinen Vornamen im Ã¶ffentlichen Profil
      lastNameLabel   Nachname
      lastNamePlaceholder   z Bsp  Mustermann
      leaveRegistrationConfirmation   Registration wirklich verlassen
      login   Anmelden
      passwordLabel   Passwort
      title   Profil erstellen

    talentVisibilities
      privateDescription   Du bist nirgends auf dem Portal ersichtlich  Du musst Dich selbst auf AuftrÃ¤ge bewerben
      privateTitle   Verborgen
      publicDescription   Dein Profil ist Ã¶ffentlich ersichtlich  Deine Chancen  gefunden zu werden und AuftrÃ¤ge zu erhalten erhÃ¶hen sich
      publicTitle   Ãffentlich sichtbar

    talentWorkDetail
      acceptInvitation   Willst Du die Einladung annehmen
      deleteInvitation   Einladung ablehnen
      deleteInvitationConfirmation   Einladung wirklich ablehnen
      no   Nein
      yes   Ja

    talentWorksList
      noPendingWorksMessage   Suche nach offenen AuftrÃ¤gen und bewirb Dich mit einer Offerte dafÃ¼r
      noPendingWorksTitle   Du hast noch keine laufenden AuftrÃ¤ge
      searchWorks   Jetzt AuftrÃ¤ge finden
      workOverview   AuftragsÃ¼bersicht

    timeSelection
      addTime   Zeit hinzufÃ¼gen
      date   Datum
      noTimesSelected   Du hast noch keine Zeit ausgewÃ¤hlt
      time   Zeit

    timeSelectionForm
      addTime   Zeit hinzufÃ¼gen
      cancel   Abbrechen
      errorMessage
        invalid   Du hast kein gÃ¼ltiges Datum gewÃ¤hlt
        notInFuture   Das gewÃ¤hlte Datum liegt in der Vergangenheit


    unauthorized
      pleaseLogin   Bitte logge Dich zuerst ein
      title   Nicht angemeldet

    userProfile
      description   Passe hier Deine Benutzerdaten an
      error   Es ist ein Fehler aufgetreten  Deine Ãnderungen wurden nicht gespeichert
      save   Speichern
      subtitle   Benutzerdaten
      success   Deine Benutzerdaten wurden erfolgreich gespeichert

    userProfileForm
      address   Adresse
      firstName   Vorname
      firstNamePlaceholder   Beispiel  Max
      lastName   Nachname
      lastNamePlaceholder   Beispiel  Meister
      phoneNumber   Telefonnummer
      phoneNumberPlaceholder   Beispiel   41 79 876 54 32
      selectPlaceHint   WÃ¤hle Deine Strasse  Hausnummer und Ort aus der Liste aus

    userProfileInput
      info   ErgÃ¤nze Deine Profilinformationen  damit Dich das Talent kontaktieren kann
      title   Profilinformationen

    utils
      createdSince     durationString   erstellt

    workAnswerListing
      answeredQuestions   Interview

    workDescription
      estimatedWorkDuration   GeschÃ¤tzter Aufwand
      referenceNumber   Ref  Nr
      workCategory   Kategorie des Auftrags
      workDescription   Beschreibung des Auftrags
      workLocation   AusfÃ¼hrungsort
      workTimes   MÃ¶gliche AusfÃ¼hrungszeiten

    workForm
      isSpecificWorkPlace   AusfÃ¼hrungsort  PLZ Ort
      isSpecificWorkPlaceInfo   Kein spezifischer AusfÃ¼hrungsort
      isWorkPublic   Ãffentlich sichtbar
      isWorkPublicInfo   Damit wird der Auftrag Ã¶ffentlich gelistet und Du erhÃ¤ltst mehrere Offerten
      pictureWarning   Achtung  Alte Bilder werden Ã¼berschrieben

    workNew
      addQuestion   Frage hinzufÃ¼gen
      cancel   Abbrechen
      deleteImage   LÃ¶schen
      errors
        missingSubcategory   WÃ¤hle eine Kategorie und Unterkategorie aus

      estimatedWorkDuration   Wie lange dauert Dein Auftrag ungefÃ¤hr   Als Richtwert fÃ¼r die Talente
      hasTalentToBeAvailableAtSpecificTime   Muss Dein Talent zu einer bestimmten Zeit verfÃ¼gbar sein
      hornbach
        footer
          text   Die Plattform Lawoon ch  Plattform  wird durch die Firma Lawoon AG  CHE 492 117 729   SÃ¤gereistrasse 9  8834 Schindellegi betrieben  Lawoon AG ist ein von Hornbach unabhÃ¤ngiges Unternehmen  welches Auftraggebern und Dienstleistern eine Plattform fÃ¼r AuftrÃ¤ge verschiedenster Art zur VerfÃ¼gung stellt  Die Nutzung der Plattform bestimmt sich nach den Allgemeine Vertragsbedingungen der Lawoon AG  www lawoon com terms   Hornbach haftet in keiner Weise fÃ¼r die Dienstleistungen  die Ã¼ber Plattform bezogen werden
          title   Rechtliches

        title   Lawoon   in Kooperation mit Hornbach

      imOnlyAvailableAtSpecificTimeCheckbox   Ja  ich suche jemanden zu einem spezifischen Zeitpunkt
      infoNote   Telefonnummern und E Mail Adressen sind in der Auftragsbeschreibung nicht erlaubt  Sobald Du eine Offerte eines Talents angenommen hast  werden dem Talent deine Kontaktdaten mitgeteilt  resp  umgekehrt
      introduction   Du erhÃ¤ltst komplett unverbindlich und kostenlos Offerten Ã¼ber Lawoon  FÃ¼lle einfach dieses Formular aus und los gehts
      invitationInfo   Folgendem Talent wird nach Erstellung des Auftrags eine Einladung zugeschickt  Du kannst spÃ¤ter auch noch weitere Talente einladen
      maxUploadSize   HÃ¶chstens 10 MB pro Bild
      phoneNumber   Telefonnummer
      phoneNumberPlaceholder   Beispiel   41 79 111 11 11
      questionNotValid   Bitte gib eine gÃ¼ltige Frage ein
      questionsToTheTalent   Fragen an das Talent
      questionsToTheTalentPlaceholder   Beispiel  Wie viele Jahre Berufserfahrung hast Du
      selectPossibleTimes   Wann kannst Du den Auftrag erledigen
      selectPossibleTimesHint   Falls Du mehrere VorschlÃ¤ge machst  muss der Arbeitgeber einen Termin auswÃ¤hlen
      submit   Auftrag ausschreiben
      submitError   Es ist ein Fehler aufgetreten
      submitSuccess   Arbeit wurde erfolgreich erstellt und wird nun von Lawoon innerhalb von 24h freigeschaltet
      submitSuccessWithInvitationHint   Vergiss nicht  Talente dazu einzuladen
      termsCheckbox   AGBs
      termsCheckboxInfo1   Ja  ich habe die
      termsCheckboxInfo2   AGBs gelesen
      termsCheckboxInfo3   und akzeptiere sie
      timeAndQuestions   Zeitpunkt und Fragen  optional
      title   Auftrag erstellen
      uploadPlaceholder   Bilder hochladen  optional
      whatHasToBeDone   Was soll genau gemacht werden
      whatHasToBeDonePlaceholder   z Bsp  Lampe muss im Wohnzimmer montiert und angeschlossen werden
      workTitle   Auftragsbezeichnung
      workTitlePlaceholder   z Bsp  Lampe montieren

    workRating
      comment   Bitte begrÃ¼nde Deine Bewertung  optional
      commentPlaceholder   Beispiel  Die Arbeit wurde wie gewÃ¼nscht und sauber erledigt  Jedoch hat das Talent etwas lÃ¤nger gebraucht  als offeriert
      starRatingHint   Bewerte die Zusammenarbeit mit 1   5 Sternen
      title   Talent bewerten

    workStateListItem
      archivedWarning   Auftrag abgelehnt
      delete   Auftrag ablehnen
      deleteConfirmation   Willst Du den Auftrag wirklich ablehnen  Dann kannst Du keine Offerte mehr schreiben  Diese Aktion kann nicht rÃ¼ckgÃ¤ngig gemacht werden
      moreDates
        one      ein weiteres
        other        count   weitere

      showMore   Mehr anzeigen
      workAssigned   Auftrag vergeben


  en
    aboutLawoon
      renuoDescription   Renuo AG  headquartered in Wallisellen near Zurich  is a web agency that currently employs over 14 people  Renuo develops high quality  secure and stable web software  In close cooperation with Lawoon  Renuo has developed the platform and is constantly improving it
      techPartner   Development partner
      title   About Lawoon

    addressSelector
      placeholder   Example  Example street 45  8045 Zurich

    adminUsers
      allUsers   All users
      customerPhone   Employer tel
      email   E Mail
      name   Name
      signInAs   Login

    adminWorks
      actions   Actions
      assignMyself   assign myself
      callClient   Call the client
      clientContacts   Client Contacts
      createdAt   Created At
      deleteDraft   Delete Draft
      email   E Mail
      job   Job
      jobsModeration   Jobs Moderation
      moderate   Moderate
      moderateJob   Moderate job
      moderationComments   Moderation comments
      name   Name
      notAssigned   Not assigned
      phoneNumber   Phone Number
      publish   Publish
      saveDraft   Save Draft

    archivedWorkDetail
      noArchivedOffers   You have no quotes

    authentication
      errors
        acceptAgbs   You must accept the Terms
        invalidEmail   Enter a valid email address
        noPassword   Enter a password
        shortPassword   Your password must consist of at least 8 characters

      loginSuccess   Login successful  Welcome back
      registrationSuccess   Registration successful  Welcome

    categorySelection
      descriptionCategory   Main category
      descriptionSubcategory   Subcategory
      placeholderCategory   Select category
      placeholderSubcategory   Select subcategory

    chat
      messages
        contentPlaceholder   Your message
        customerTitle    Customer
        deleteConfirm   Are you sure you want to delete this message
        submit   Send message
        title   Questions and answers

      privateWorkChat
        helpText   This conversation is visible to you and the recipient only

      publicWorkChat
        helpText   As long as the order has not been placed  all messages can be seen by all registered users

      usageAgreement   Telephone numbers and email addresses are not allowed in the chat  Offers must be placed directly by means of the button  Create offer  located above  As soon as the client has accepted your offer  we will inform you of the details such as name  address  telephone number etc

    collapsibleTalentInfo
      aboutLabel   Personal information
      hideDetails   Hide details
      serviceDescriptionLabel   I provide the following services
      showDetails   Show details

    completedWorkList
      profilesPerPage   Show profile on each page
      title   Completed tasks

    contractAddressDetails
      customer   Client
      email   E Mail
      phoneNumber   Phone number
      talent   Talent
      title   Contact details
      workPlace   Place of performance

    costForm
      addCostItem   Enter costs
      amount   Quantity
      cancel   Cancel
      cost   Costs
      costBelowMinimum   The minimum amount is 20 CHF
      costEstimation   Cost estimation
      costIsInvalid   The costs entered are invalid
      costItemBelowMinimum   The minimum amount is 0 45 CHF
      costItems   Additional expenses
      enterCostDescription   The amount you have offered is not fixed  You can adjust the amount before you send the customer the final invoice  It may be the case that you were dealing with higher or lower costs
      enterFixCostDescription   The amount you have offered is fixed  You cannot adjust the amount before you send the final invoice to the customer
      fixedPrice   Package deal
      fixedRate   Fixed Rate
      fixedRateInfo   What you charge for your work
      netHourlyRate   Your hourly rate
      netHourlyRateInfo   Actual earnings per hour  excluding VAT for service fees
      price   Price
      submit   Add
      total   Costs
      workCostBelowMinimum   The minimum amount for your work is 3 CHF

    costListing
      amount   Quantity
      amountOfServiceFee   Service fees in the amount of   fee
      amountShort   Units
      cost   Expense
      subtotal   Subtotal
      timeRequired   Working hours
      total   Total
      vat   Value added tax
      vatShort     percent   VAT

    customerArchive
      details   Details
      noArchivedWorksTitle   You have no archived jobs
      workState
        canceled   Cancelled
        done   Completed


    customerBillDetail
      complaintHelp   If the invoice does not comply with the agreement or you wish to dispute an invoice  contact the talent to find a suitable solution  If you are unable to find a suitable solution with the talent  contact
      complaintLink   Lawoon
      definitiveCost   Total costs    amount
      paymentMethodTitle   You  re going to pay with the following card
      paymentMethodUnfold   Pay differently
      processingBillPayment   Payment is being sent
      receiptCreate   Accept and pay invoice
      receiptCreatedError   An error occurred during payment  Please contact Lawoon for more information or choose another payment method
      receiptCreatedSuccess   You have successfully accepted the invoice

    customerBills
      billedTotal   Total amount
      costAdjusted    The total amount has changed since the original quote
      details   Details
      pendingBills
        one   You have an invoice awaiting approval  This will be automatically accepted after 5 days
        other   You have   count   invoices awaiting approval  These will be automatically accepted after 5 days

      title   Invoices

    customerContractNew
      acceptOffer   Accept quote
      chooseTime   Choose one of the times suggested
      declineOffer   decline
      declineSuccess   Quote was successfully declined
      error   An error has occurred
      reasonOtherTalent   I have chosen a different talent
      reasonToExpensive   Too expensive
      success   Quote was successfully accepted
      warning   Important
      warningInfo   By accepting a quote  you are obliged to carry out the work by the agreed deadline

    customerContracts
      details   Details Contact
      pendingContracts
        one   You have one job in progress
        other   You have   count   jobs in progress

      title   Jobs

    customerDashboard
      offer
        one     count   Quote
        other     count   Quotes

      workState
        canceled   Cancelled
        done   Completed
        draft   Awaiting unlocking
        offering   Awaiting quotes
        offeringWithOffers   Waiting for quotes to be accepted
        payment   Awaiting payment
        rating   Awaiting review
        running   Awaiting completion
        waitingForBill   Awaiting invoice


    customerInvitationDetails
      archivedWarning   Important  This invitation has been deleted and is only visible to you
      backToOverview   Back to overview
      delete   Block talent
      deleteConfirmation   Are you sure you want to block this talent  The talent will not be able to submit any more quotes  This action cannot be reversed
      edit   Edit

    customerInvitations
      decline   Cancel
      description   Here you will find all talents invited by you to submit a quote
      details   Details
      inviteTalent
        description   Search for talents and start receiving quotes
        title   Invite talents to submit a quote

      status
        declinedByCustomer   Cancelled
        declinedByTalent   Offer to quote withdrawn
        offer   Quote received
        pending   Awaiting response

      title   Talents

    customerLandingpage
      description1   At lawoon ch you can find professionals and freelancers working in the areas skilled trade  garden  cleaning  removal  IT  graphics  finances  marketing  training  sport  beauty and many more  Here  you can place your job offer   no matter whether it is painting work  a cleaning project or language tuition   quickly and without charge  and soon you will receive a range of bids  Select the best and agree further details with your contractor
      description2   At lawoon ch it doesn t matter whether you offer a job privately for yourself or for a company  and you can offer as many jobs as you wish  As soon as you have found the appropriate workforce and the job has been performed  the costs will be taken from you and sent automatically to the worker  This leaves you more time for the really important things in your life  Try it out
      descriptionHead   Are you looking for a tradesman  gardener or electrician  Do you need help with your computer or tax return  Then Lawoon is exactly the right address for you
      title   Place your job offers on Lawoon
      title1   Place a job offer
      title2   Find a worker

    customerOfferDetail
      archivedOffers   Archived quotes
      noOffersForPrivateWork   You have no quotes requiring a response  This is a private job posting  Have you invited talents so that you can start receiving quotes
      noOffersForPublicWork   You have no quotes requiring a response  You can also invite talents directly to submit a quote

    customerOffers
      details   Details
      pendingOffers
        one   You have one outstanding quote which requires a response
        other   You have   count   outstanding quotes which require a response

      title   Quotes
      total   Total amount

    customerOnboarding
      createWork   Create job
      createWorkIntro   Do you have a project that you would like to have undertaken or with which you require assistance  Then create your job posting today and let our talents get in touch
      searchTalents   Find talents
      searchTalentsIntro   Is your project still in the planning phase  Are you unsure which qualifications your talents need  Then take a look at our talent database
      welcomeMessage   Your account has been successfully created  Welcome to Lawoon

    customerPublicAnnouncements
      details   Details
      pendingPublicAnnouncements
        one   You have one publicly listed job
        other   You have   count   publicly listed jobs

      title   Public jobs

    customerRating
      alreadyRated   You have already rated this collaboration
      back   Back
      ratingSuccess   Success  Your review has been submitted
      sendRating   Submit review

    customerReceiptDetail
      backToArchive   Back to overview
      backToReceipts   Back to overview
      printBill   Print view
      ratingCreate   Rate talent now
      ratingExplanation   You have not yet rated the talent for this job

    customerReceipts
      linkToBill   Invoice
      loadMore   Load more
      noReceiptsYet   You have no completed jobs
      totalCost   Total costs    amount
      workWasDone   Job completed on

    customerWorkDetail
      deleteConfirmation   Are you sure you want to delete this job  All incoming quotes will be automatically declined  This action cannot be reversed
      deleteWork   Delete job
      editWork   Update job
      noInvitationsYet   You have not invited any talents yet

    customerWorkEdit
      cancel   Cancel
      error   An error has occurred  Please try again later
      submit   Save
      success   Your changes have been saved
      title   Amend job

    customerWorkModerate
      cancel   Cancel
      error   An error has occurred  Please try again later
      submit   Save
      success   Your changes have been saved
      title   Amend job

    customerWorksList
      createWork   Create job now
      noInvitationsWarning   No talents invited yet
      noPendingWorksMessage   Do you have a project that you would like to have undertaken or with which you require assistance  Then create your job posting today and let our talents get in touch
      noPendingWorksTitle   You do not have any jobs in progress
      workOverview   Job overview

    dashboard
      privateWork   private job
      tabs
        archived   Archived
        pending   Current


    emailEdit
      currentPassword   Current password
      email   New email address
      responseError   An error has occurred  The email address was not updated  Your current password may be incorrect
      submit   Save
      success   E Mail address successfully updated
      title   Update email address

    footer
      aboutLawoon   About Lawoon
      contact   Contact
      faq   FAQs
      jobs   Jobs
      linksCaption   This is Lawoon
      terms   Legal

    forbidden
      helpText   You do not have access to this resource
      title   Stop

    home
      advantages
        competentTalentCaption   Highly competent  reliable and talented team
        competentTalentDescription   Our talented team are professionals and part time workers who always strive to perform your work flawlessly  Our talented team are punctual  reliable and are regularly assessed by us
        guaranteedOfferCaption   Guaranteed offers within a few hours
        guaranteedOfferDescription   Once the order has been publicly placed you will receive interesting  non binding offers within a few hours  Accept the offer that suits you to process your order
        satisfactoryPaymentCaption   Payment only after satisfactorily completed service
        satisfactoryPaymentDescription   Once an order has been completed to your utmost satisfaction  simply accept the invoice and let us do the work  If something isn t quite what you had imagined then contact us and we will assist you
        title   We make your life easier

      knownFrom   Known from
      ourPartners   Our partners
      process
        customer
          createWork   Create a job
          createWorkDescription   Post a job on Lawoon in just a few clicks  Make your job public so that interested talents can submit a quote or invite a specific talent to quote  You will normally start receiving quotes within several hours
          payment   Simple payment
          paymentDescription   After accepting your talent s invoice  the amount will be debited from your card and transferred directly to the talent  You now have the option to rate the talent
          selectOffer   Select quote
          selectOfferDescription   Choose your preferred quote
          start   Create a job now
          title   Do you have a job that needs completing
          workPending   Job processed
          workPendingDescription   Your chosen talent will complete this job by the deadline specified

        talent
          doWork   Process job
          doWorkDescription   Your quote has been accepted and your job will be completed by the agreed deadline
          findWork   Find a job
          findWorkDescription   Register as a talent with Lawoon and apply for jobs that interest you or alternatively wait for an employer to send you an invite
          getPaid   Get paid
          getPaidDescription   Payments are made to your account within 5 working days
          start   Become a talent today
          title   Easily earn money as a talent
          writeBill   Create invoice
          writeBillDescription   Job completed    Create an invoice  Here you have the option to invoice for additional expenses such as material costs or overtime
          writeOffer   Submit a quote
          writeOfferDescription   Submit a quote to the employer and increase your chances of a new job

        title   It  s this easy

      teaser
        goOrder   Create job
        goTalent   Become a talent
        subtitle   The Swiss marketplace for order placements
        title   Lawoon   let it do

      testimonials
        testimonialFirst
          mention   Fast  simple processing of smaller orders   from recording address lists to graphic design work
          signatureName   Dariush Daftarian
          signaturePosition   Partner cdg consultancy

        testimonialSecond
          mention   Uncomplicated order process  sensational service and perfect job execution  Lawoon has already exceeded our expectations many times   every time
          signatureName   Alain Friedrich
          signaturePosition   Luzern

        testimonialThird
          mention   I have processed several orders using Lawoon   I have use Lawoon to book furniture assembly  fitting lamps and even wedding catering  The platform is set up in a really good  simple way  You can just place an job  and then you receive interesting offers very soon afterwards  I d be happy to go back any time
          signatureName   Fabienne Reiter
          signaturePosition   BÃ¤retswil

        title   Testimonials


    imprint
      about   Legal notice
      toBeContinued   Information

    lawoonCostListing
      amountWithVat   in the amount of
      amountWithoutVat   in the net amount of
      percentageOfBill   12 5  of your invoice
      total   Total
      totalWithVat   Total including   vatRate   value added tax
      vat   Value added tax

    login
      error   An error has occurred
      notAuthorized   E Mail or password incorrect
      resetPasswordSuccess   Password successfully updated  Please log in using your new password

    loginForm
      emailLabel   E Mail
      emailPlaceholder   E Mail
      noLogin   Not created a profile yet
      passwordForgotten   Forgotten password
      passwordLabel   Password
      passwordPlaceholder   Password
      register   Register
      signIn   Login

    metaData
      completedWorks
        description   Find new jobs now  Lawoon creates and sends invoices  and guarantees payment on time  Register now for free
        title   Completed tasks

      customerLandingpage
        description   Place your jobs on Lawoon and find professionals for trade  garden  cleaning  moving  IT  graphics  finance  marketing  sports and beauty
        title   Placing jobs on Lawoon

      default
        description   Uncomplicated job placement  Register now for free  The easiest way to find the right person for the right job
        title   Lawoon   let it do

      jobs
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Lawoon   Offene Stellen  Projektleiter

      talentLandingpage
        description   Lawoon helps you find new jobs  No matter if you are a student  freelancer or a professional  create your profile now
        title   Create a profile on Lawoon

      talents
        description   The easiest way to find the right person for the right job Find talents for your jobs now
        title   Lawoon talents

      works
        description   Find new job postings now  Lawoon creates and sends invoices  and guarantees payment on time  Register now for free
        title   Lawoon jobs


    navbar
      blue
        browseAnnouncements   Find jobs
        browseTalents   Find talents
        createWork   Create a job

      browseTalents   Find talents
      customer
        profile   Profile
        roleName   Me as the customer
        tabSearchWorks
          archivedWorks   Testimonials
          createWork   Create a job
          pendingWorks   Jobs in progress
          terms   Legal

        talents   Browse talents
        works   My jobs

      lawoon   Lawoon
      right
        dashboard   My jobs overview
        login   Login
        logout   Log out

      talent
        browseAnnouncements   Browse jobs
        createWork   Create a job
        profile   Profile
        roleName   Me as a talent
        tabMyWorks
          bills   Invoices
          declinedOffers   Declined quotes
          invitations   Invitations
          offers   Quotes
          onGoingOffers   Jobs
          receipts   Testimonials
          terms   Legal

        works   My work


    noConnection
      info   Connection to Lawoon failed
      reload   Reload page

    notificationSettings
      dailySummary
        daily   Daily
        description   Create a daily summary detailing all outstanding jobs
        never   Never
        title   Daily summary

      disabledWarning   Are you sure  You might miss out on important events
      email   E Mail
      keyMappings
        billPaid   Invoice has been paid
        billReminder   Create invoice reminder
        customerDeclinedOffer   Quote was declined
        newBill   Invoice has been submitted
        newContract   Quote was accepted
        newInvitation   New invitation
        newMessage   New message
        newOffer   New quote
        workStartReminder   Reminder when starting work

      noCustomerPhoneNumberError   You have not provided a mobile number in your customer profile
      push   Push
      pushHintHasApp   Push notifications will be sent directly to your mobile phone  even if you have closed the app
      pushHintHasNoApp   Get the Lawoon mobile app now and stay up to date with push notifications
      sms   SMS
      submit   Save
      title   Notifications
      updateError   Error when updating settings
      updateSuccess   Settings saved
      workSuggestions
        descriptionInterval   You will be notified when a new job is available in your chosen categories  Choose your preferred method and frequency of notifications
        descriptionSubcategories   Which categories interest you
        interval
          daily   Daily
          immediate   Immediately
          never   Never

        title   Exciting jobs for you


    notifications
      noMessagesYet   You have no notifications

    offerAcceptModal
      accept   Accept quote
      cancel   Cancel
      text   Are you sure you want to accept this quote
      title   Accept quote

    offerDeclineModal
      cancel   Cancel
      decline   Decline quote
      errorMessage   Please provide a reason
      otherReason   Other reason
      otherReasonPlaceholder   Why did the quote not work for you
      title   Reason for declining

    offerShow
      hideDetails   Hide details
      offerText   Detailed information
      offered   Quoted    amount
      possibleTimes   A talent has submitted the following for completion of your job
      showDetails   Show details
      workIsDoneOn   The job will be completed by
      workPlace   Place of performance

    pageNotFound
      description   The page requested cannot be displayed
      title   404  Page not found

    pagination
      first
      last
      next
      previous

    passwordEdit
      currentPassword   Current password
      description   Longer passwords with several symbols are more secure than shorter ones
      password   New password
      passwordConfirmation   New password  confirm password
      responseError   An error has occurred  Password not updated  Your current password may be incorrect
      submit   Save
      success   Password updated successfully
      title   Change password

    passwordForgotten
      description   Enter your email address to reset your password
      emailPlaceholder   Your email address
      error   An error has occurred  Please try again
      modalTitle   Forgotten password
      navigateToLogin   To Login
      resetInstructions   A link has been sent to your email address to reset your password
      submit   Reset password

    passwordReset
      modalTitle   Enter new password
      passwordConfirmationPlaceholder   Re enter new password
      passwordPlaceholder   New password
      resetFailed   An error has occurred  Password not reset  Please try again
      submit   Reset password

    passwordValidator
      invalidConfirmation   The passwords do not match
      invalidLength   Your password must consist of at least 8 characters

    payment
      bankAccount
        bankAccountForm
          accountName
            label   Account name
            missing   Please enter a name
            placeholder   Joe Bloggs

          iban
            label   IBAN
            missing   Please enter a valid Swiss IBAN
            placeholder   CH93 0076 2011 6238 5295 7
            wrongFormat   Please enter a valid Swiss IBAN

          submit   Bank details verified
          updatedSuccessful   Bank details have been updated
          updatedUnsuccessful   There was a problem when updating your bank details


      paymentMethods
        dialog
          description   Please enter a payment method
          name   Lawoon
          panelLabel   Add card

        endingWith   ending in
        errors
          missingPaymentMethod   You must select a payment method

        explanation   You must add a payment method in order to easily settle your invoices  We will never debit your card without your consent
        privacyInformation   Your details are encrypted by a certified third party
        storePaymentMethod   Add new payment method
        title   Your payment method

      stripe
        authorize
          connected   Connection established
          connecting   Connection is being established
          retry   Please try again
          serverError   An unknown error has occurred
          stripeError   An error has occurred  Your Stripe Account could not be created and authorised
          title   Update bank details

        connect
          button   Identify bank details using Stripe
          connected   Account already linked
          defaultProductDescription   I am a Lawoon customer
          refreshTalentBankAccount   Update bank details

        explanation   Provide details of your bank account so that Lawoon can easily transfer your payments to you


    print
      title   Print view

    privacy
      dataPrivacyStatement   Privacy statement
      toBeContinued   Information

    profilePictureComponent
      altText   Profile picture
      professionalBadgeText   Expert

    profileSettings
      title   Settings

    profileSubnavbar
      account   Account
      notifications   Notifications
      payment   Payment method
      talent   Talent profile
      user   User profile

    publicAnnouncementFilter
      newestEntries   Latest entries
      oldestEntries   Oldest entries
      operationPlace   or in the region of
      showOnlyOpenAnnouncements   Display outstanding jobs only
      sortBy   Sort by

    publicWorkList
      filter   Filter jobs
      lawoonAdButton   Create a job now
      lawoonAdText   Do you have a job that needs completing
      next   Continue
      noWorksFound   No jobs found
      profilesPerPage   Show profile on each page
      title   Browse jobs
      writeOffer   Submit a quote

    quickAction
      adminPanel   Admin dashboard
      customer
        roleName   Customer profile

      logout   Log out
      settings   Settings
      talent
        roleName   Talent profile


    receiptList
      title   Invoices  Receipts

    regionSelector
      invalidSelection   Please choose from the list
      placeholder   Enter location

    register
      error   An error has occurred  Check that your password contains at least 8 characters and that your email address has not already been used
      notAuthorized   This email has already been used

    registration
      alreadyHaveLogin   Already have a profile
      createAccount   Create account
      emailLabel   E Mail
      emailPlaceholder   E Mail
      login   Login
      passwordLabel   Password
      passwordPlaceholder   Password
      registration   Register

    selectedTalentList
      invite   Invite now
      noSelectedTalentsInfo   You have not yet selected any talents to invite
      remove   Remove

    subcategorySelection
      allCategories   All
      descriptionCategories   main categories
      descriptionSubcategories   subcategories
      exampleDescription
        subcategory10   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory11   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory12   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory2   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory3   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory4   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory5   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory6   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory7   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory8   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
        subcategory9   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week

      exampleTitle
        subcategory10   e g  cleaning of apartment
        subcategory11   e g  cleaning of apartment
        subcategory12   e g  cleaning of apartment
        subcategory2   e g  cleaning of apartment
        subcategory3   e g  cleaning of apartment
        subcategory4   e g  cleaning of apartment
        subcategory5   e g  cleaning of apartment
        subcategory6   e g  cleaning of apartment
        subcategory7   e g  cleaning of apartment
        subcategory8   e g  cleaning of apartment
        subcategory9   e g  cleaning of apartment


    submitButton
      formInvalid   Please fill out empty or invalid fields
      label   Send

    successStory
      customerRating   Rating the customer
      finishedSince   Completed   days   days early
      showLess   Less
      showMore   More
      showTalentProfile   View talent profile

    supportBox
      email   info lawoon com
      greeting   Hello  I m Nathalie
      howToHelp   Do you have a question or can I assist in creating your profile
      openingHours   I am available to help you from Mon Fri 8am to 5pm
      phoneNr    41 44 687 19 19
      title   Support

    tabSubnavbar
      bill   Invoice
      invitations   Talents
      offers   Quotes
      overview   Overview
      rating   Review
      users   All Users
      works   Jobs Moderation
      yourOffer   Your quotes

    talentArchive
      details   Details
      noPendingWorksTitle   You have no archived jobs
      workFlowStatus
        declinedInvitation   Withdrawn invitation
        declinedOffer   Quote was declined
        receipt   Closed


    talentBillDetail
      connectToBankAccount   We are unable to transfer your payment
      connectToBankAccountInfo   You must provide your bank details in order to create an invoice
      createBill   Create an invoice
      edit   Amend invoice
      noBillCreatedYet   You have not yet created an invoice for this job
      notAbleToCreateBillYet   You are currently unable to invoice this job

    talentBillEdit
      billCreatedError   An error occurred when creating the invoice
      billCreatedSuccess   Invoice successfully created
      billUpdatedError   An error has occurred
      billUpdatedSuccess   Invoice successfully updated
      cancel   Cancel
      createSubmit   Send
      createTitle   Create an invoice
      editSubmit   Save
      editTitle   Edit invoice
      offeredTotal   Total costs

    talentBills
      amountForYou   Of which in your favour
      billedTotal   Total amount
      details   Details
      pendingBills
        one   You have an invoice awaiting acceptance from the client  This will be automatically accepted after 5 days
        other   You have   count   invoices awaiting acceptance from the client  These will be automatically accepted after 5 days

      title   Invoices

    talentBrowse
      costsPerHour   per hour
      details   Show more
      invite   Requests
      lawoonAdButton   Become a talent today
      lawoonAdText   Do you also want to become a talent
      profilesPerPage   Show profile on each page

    talentContracts
      detailLinkText   Details Invoice
      noPendingContracts   You have no jobs in progress
      pendingContracts
        one   You have one job in progress
        other   You have   count   jobs in progress

      title   Your jobs

    talentDashboard
      details   Details
      workFlowStatus
        bill   Awaiting payment
        contract   To be completed
        contractDone   Awaiting invoice
        declinedInvitation   Withdrawn invitation
        declinedOffer   Quote was declined
        offer   Waiting for quotes to be accepted
        receipt   Closed
        workInvitation   Awaiting quote to be accepted


    talentDeclinedOfferDetail
      backToOverview   Back to overview
      reason   Reason

    talentDeclinedOffers
      amountForYou   Of which in your favour
      billedTotal   Total amount
      declinedOffersCount
        one   You have one declined quote
        other   You have   count   declined quotes

      details   Details
      title   Declined quotes

    talentFilter
      allQualifications   All
      location   In the region of
      nonprofessional   Part time worker
      professional   Expert
      professionalHint   verified and certified person company
      qualification   Qualification
      search   Search
      searchPlaceholder   Example  Painter

    talentLandingpage
      description1   Create your profile and tell us what your specialist area is   no matter whether it is skilled trade  garden  cleaning  removal  IT  graphics  finances  marketing  training  sport  or beauty
      description2   Then the employers can write directly to you or you can apply for open job offers  Create your individual bids and receive lots of new jobs
      description3   We perform the accounting and money transfer for you once the job has been successfully completed  In this way  you can enjoy a stress free evening
      descriptionHead   At lawoon ch we help you find new job contracts  Here it doesn t matter whether you are a student  freelancer or a specialist  What is important is that you are talented in the area you are offering
      title   Create a profile now and receive your first jobs
      title1   Create profile
      title2   Receive jobs
      title3   Guaranteed payment

    talentList
      filter   Filter talent
      noResultsHint   By making a job public  talents will be able to find your jobs
      noTalentsFound   No talents found
      talentAddedHint   Talent already invited  Choose other talents and send an invitation
      title   Browse talents

    talentOfferDetail
      createOffer   Create quote
      deleteOffer   Delete quote
      edit   Amend quote
      offerDeletedSuccessful   Quote has been deleted
      offerText   Detailed information
      reasonChangedMyMind   I have changed my mind
      reasonNoTime   I am prevented

    talentOfferEdit
      cancel   Cancel
      error   An error has occurred
      success   Your details have been successfully updated
      title   Edit quote
      updateOffer   Save

    talentOfferList
      details   View details
      pendingOffers
        one   You have one unanswered quote
        other   You have   count   unanswered quotes

      title   Unanswered quotes

    talentOfferNew
      addItem   Enter costs
      addItemError   Invalid entry  Please provide a description  a price and a quantity
      answerFollowingQuestions   Interview
      answerPlaceholder   Your answer
      cancel   Cancel
      chooseTimeInfo   Specify a binding deadline for completing the work
      costItemDescritpionPlaceholder   Example  Travel expenses
      createOffer   Create quote
      detailInfos   You can provide additional information for the employer here  optional
      detailInfosPlaceholder   e g  I need to organise two extra tyres
      offeredTotal   Total of quoted costs
      selectDateTime   Choose a date
      selectWorkPlace   Choose a location for completing the work
      sendOffer   Submit quote
      submitError   An error has occurred
      submitSuccess   Quote successfully created
      yourEffort   Your expenses

    talentOnboarding
      searchPublicAnnouncements   Find jobs
      searchPublicAnnouncementsIntro   Are you looking for a job  Then have a browse through the jobs advertised
      welcomeMessage   Your account has been successfully created  Welcome to Lawoon

    talentProfileBankAccountEdit
      title   Edit bank details

    talentProfileCurrentStep
      back   Back
      beforeUnloadAlert   Your changes will be lost if you leave this page
      step   Create a profile   Step   step   of 2

    talentProfileEdit
      error   An error has occurred
      save   Save
      title   Edit profile
      updateSuccessful   Changes successfully updated

    talentProfileMisc
      address   Address
      iCompensateVat   I am liable for VAT
      mobileNumber   Mobile number
      mobileNumberPlaceholder   Example   41 79 111 11 11
      selectPlaceHint   Enter street  house number and town
      vatNumber   VAT number
      vatNumberInfo   Enter your VAT number here
      vatNumberPlaceholder   Example  CHE 123 456 789
      vatRate   VAT rate
      vatRateInfo   Enter your VAT rate here  This is typically 7 7  in Switzerland

    talentProfilePersonalInfo
      cancelRegistration   Cancel
      companyDetailsMissing   Enter either the enterprise Identification Number  UID  or website of your company
      companyName   Company name  optional
      companyNamePlaceholder   Example  Painting Professionals
      companyUidRegisterNumber   Enterprise Identification Number  UID
      companyUidRegisterNumberPlaceholder   Example  CHE 492 117 729
      createProfileInfo   Create a free  non binding profile on Lawoon
      editProfilePicture   Change profile picture
      errorPhoto   Please upload a profile picture
      errors
        missingAttributes   Please complete empty or invalid fields and ensure that you have uploaded a profile picture

      firstName   First name
      firstNamePlaceholder   Example  Joe
      iAmAProfessional   I am a professional
      iAmAProfessionalInfo   The talent practices this service as his or her main career  has achieved relevant qualifications and has several years  experience in this field
      lastName   Surname
      lastNameInfo   We will display your first name in your public profile
      lastNamePlaceholder   Example  Master Technician
      maxFilesize   Maximum 10 mb
      profilePicture   Profile picture
      profileVisibility   Hide my profile
      profileVisibilityInfo   You profile will no longer be visible to employers
      saveAndContinue   Save and continue
      serviceDescription   Which services are you offering
      serviceDescriptionPlaceholder   e g  kitchen  bathroom and living room cleaning
      tellSomethingAboutYou   Tell us more about yourself
      tellSomethingAboutYouPlaceholder   Example  I have eight years  experience as a painter  etc
      uploadProfilePicture   Upload profile picture
      website   Website  optional
      websitePlaceholder   Example  https   example com

    talentProfileQualification
      createError   An error has occurred
      createProfile   Create profile
      createSuccess   Talent profile successfully created  You can complete your profile by visiting the settings
      education   Education  optional
      educationPlaceholder   Example  2005 2009  apprenticeship as a state recognised painter Certificate
      experience   Work experience  optional
      experiencePlaceholder   Example  2009 date  manager of Painting Professionals
      projectPlaceholder   Example  2010 2011  work on Prime Tower
      projectPortfolio   Reference jobs  optional
      title   Professional experience  optional
      titleInfo   The most successful talents on Lawoon include their professional experience on their profile to get more accepted quotes

    talentPublicShow
      aboutLabel   Personal information
      qualification
        education   Training
        experience   Professional experience
        projectPortfolio   Reference jobs

      serviceDescriptionLabel   I provide the following services

    talentRating
      continue   No reviews available
      sendRating   Submit review

    talentRatings
      noComment    no comment
      ratings   Reviews

    talentReceipt
      back   Back to overview
      billNumber   Invoice no    referenceNumber
      paid   Invoice has already been paid
      print   Print invoice
      vat   VAT no

    talentReceiptDetail
      backToReceipts   Back to overview
      linkToBillCustomer   Invoice client
      linkToBillLawoon   Lawoon invoice

    talentReceiptLawoon
      billNumber   Invoice no    referenceNumber
      introduction   We will send you an invoice for our brokerage service  This will be passed on to the employer and is not deducted from your talent payments
      sender
        address   SÃ¤gereistrasse 9
        city   Schindellegi
        company   Lawoon AG
        vatNumber   CHE 492 117 729 VAT
        zip   8834


    talentReceipts
      linkToBillCustomer   Invoice client
      linkToBillLawoon   Lawoon invoice
      loadMore   Load more
      noReceiptsYet   You have no completed jobs
      totalCost   Total costs    amount
      workWasDone   Job completed on

    talentRegistration
      alreadyHaveLogin   Already have a profile
      createAccount   Continue to Create a profile
      emailLabel   E Mail
      firstNameLabel   First name
      firstNamePlaceholder   e g  Joe
      lastNameInfo   We will display your first name in your public profile
      lastNameLabel   Surname
      lastNamePlaceholder   e g  Bloggs
      leaveRegistrationConfirmation   Are you sure you want to leave registration
      login   Login
      passwordLabel   Password
      title   Create profile

    talentVisibilities
      privateDescription   You are not visible on the portal  You must respond to job postings yourself
      privateTitle   Hidden
      publicDescription   Your profile is publicly listed  Your chances of being discovered and winning jobs are much greater
      publicTitle   Publicly visible

    talentWorkDetail
      acceptInvitation   Do you want to accept the invitation
      deleteInvitation   Decline invitation
      deleteInvitationConfirmation   Are you sure you want to decline this invitation
      no   No
      yes   Yes

    talentWorksList
      noPendingWorksMessage   Search for available jobs and submit a quote
      noPendingWorksTitle   You do not have any jobs in progress
      searchWorks   Find jobs now
      workOverview   Job overview

    timeSelection
      addTime   Add time
      date   Date
      noTimesSelected   You have not selected a time
      time   Time

    timeSelectionForm
      addTime   Add time
      cancel   Cancel
      errorMessage
        invalid   The date you have selected is invalid
        notInFuture   The date you have chosen has expired


    unauthorized
      pleaseLogin   Please log in again
      title   Not logged in

    userProfile
      description   Update your user details here
      error   An error has occurred  Your changes have not been saved
      save   Save
      subtitle   User details
      success   Your user details have been successfully updated

    userProfileForm
      address   Address
      firstName   First name
      firstNamePlaceholder   Example  Joe
      lastName   Surname
      lastNamePlaceholder   Example  Master Technician
      phoneNumber   Phone number
      phoneNumberPlaceholder   Example   41 79 876 54 32
      selectPlaceHint   Choose your street  house number and town from the list

    userProfileInput
      info   Complete your profile information so that talents can contact you
      title   Profile information

    utils
      createdSince   Created   durationString

    workAnswerListing
      answeredQuestions   Interview

    workDescription
      estimatedWorkDuration   Estimated costs
      referenceNumber   Ref  no
      workCategory   Job category
      workDescription   Description of request
      workLocation   Place of performance
      workTimes   Potential time required

    workForm
      isSpecificWorkPlace   Place of performance  Postcode   town
      isSpecificWorkPlaceInfo   No specific place of performance
      isWorkPublic   Publicly visible
      isWorkPublicInfo   The job has been publicly listed and you should receive more quotes
      pictureWarning   Warning  Older pictures will be overwritten

    workNew
      addQuestion   Submit a question
      cancel   Cancel
      deleteImage   Delete
      errors
        missingSubcategory   Choose a category and subcategory

      estimatedWorkDuration   Approximately how long will the work take   as a guideline for talents
      hasTalentToBeAvailableAtSpecificTime   Does your talent need to be available for a specific period of time
      hornbach
        footer
          text   Die Plattform Lawoon ch  Plattform  wird durch die Firma Lawoon AG  CHE 492 117 729   SÃ¤gereistrasse 9  8834 Schindellegi betrieben  Lawoon AG ist ein von Hornbach unabhÃ¤ngiges Unternehmen  welches Auftraggebern und Dienstleistern eine Plattform fÃ¼r AuftrÃ¤ge verschiedenster Art zur VerfÃ¼gung stellt  Die Nutzung der Plattform bestimmt sich nach den Allgemeine Vertragsbedingungen der Lawoon AG  www lawoon com terms   Hornbach haftet in keiner Weise fÃ¼r die Dienstleistungen  die Ã¼ber Plattform bezogen werden
          title   Rechtliches

        title   Lawoon   in cooperation with Hornbach

      imOnlyAvailableAtSpecificTimeCheckbox   Yes  I am looking for someone who is available during a specific time
      infoNote   Telephone numbers and e mail addresses are not permitted in the work description  As soon as you have accepted an offer from a talent  the talent will be given your contact details and vice versa
      introduction   You will receive free  non binding quotes via Lawoon  Simply fill in this form to get started
      invitationInfo   The following talent has been sent an invitation regarding this job  You can also invite other talents later
      maxUploadSize   Maximum 10 mb per image
      phoneNumber   Phone number
      phoneNumberPlaceholder   Example   41 79 111 11 11
      questionNotValid   Please enter a valid question
      questionsToTheTalent   Ask the talent a question
      questionsToTheTalentPlaceholder   Example  How many years of experience do you have
      selectPossibleTimes   When can you do the job by
      selectPossibleTimesHint   If you offer multiple proposals  the customer must choose a deadline
      submit   Schedule Job for Moderation
      submitError   An error has occurred
      submitSuccess   Job has been successfully created and will be unlocked by Lawoon within 24h
      submitSuccessWithInvitationHint   Don t forget to invite talents
      termsCheckbox   General Terms and Conditions
      termsCheckboxInfo1   Yes  I have read
      termsCheckboxInfo2   and accept
      termsCheckboxInfo3   the Terms and Conditions
      timeAndQuestions   Deadline and questions  optional
      title   Create a job
      uploadPlaceholder   Upload images  optional
      whatHasToBeDone   What exactly does the work involve
      whatHasToBeDonePlaceholder   e g  cleaning of kitchen  bathroom and living room Living room is 67 m2  Needs to be cleaned some time next week
      workTitle   Job description
      workTitlePlaceholder   e g  cleaning of apartment

    workRating
      comment   Please justify your review  optional
      commentPlaceholder   Example  The work was carried out as required and in a clean manner  However  the talent took a little longer than quoted
      starRatingHint   Rate this collaboration with 1 to 5 stars
      title   Rate talent

    workStateListItem
      archivedWarning   Job declined
      delete   Decline job
      deleteConfirmation   Are you sure you want to decline this job offer  You will not be able to submit any more quotes  This action cannot be reversed
      moreDates
        one      another reason
        other        count   other reasons

      showMore   Show more
      workAssigned   Task already assigned


  fr
    aboutLawoon
      renuoDescription   Renuo AG  dont le si ge se trouve   Wallisellen pr s de Zurich  est une agence web qui emploie actuellement plus de 14 personnes  Renuo d veloppe des logiciels web de haute qualit   s curis s et stables  En  troite collaboration avec Lawoon  Renuo a d velopp  la plate forme et l  am liore constamment
      techPartner   Partenaire de d veloppement
      title     propos de Lawoon

    addressSelector
      placeholder   Exemple  Musterstrasse 45  8045 Zurich

    adminUsers
      allUsers   Tous les utilisateurs
      customerPhone   T l  Donneur d ordre
      email   E mail
      name   Nom
      signInAs   Se connecter

    adminWorks
      actions   Actions
      assignMyself   assign myself
      callClient   Call the client
      clientContacts   Client Contacts
      createdAt   Created At
      deleteDraft   Delete Draft
      email   E Mail
      job   Job
      jobsModeration   Jobs Moderation
      moderate   Moderate
      moderateJob   Moderate job
      moderationComments   Moderation comments
      name   Name
      notAssigned   Not assigned
      phoneNumber   Phone Number
      publish   Publish
      saveDraft   Save Draft

    archivedWorkDetail
      noArchivedOffers   Tu n avais aucune offre

    authentication
      errors
        acceptAgbs   Tu dois accepter les conditions g n rales
        invalidEmail   Saisis une adresse e mail valide
        noPassword   Saisis un mot de passe
        shortPassword   Le mot de passe doit contenir au moins 8 caract res

      loginSuccess   Connexion r ussie  Bienvenue
      registrationSuccess   Inscription r ussie  Bienvenue

    categorySelection
      descriptionCategory   Cat gorie principale
      descriptionSubcategory   Sous cat gorie
      placeholderCategory   S lectionner la cat gorie
      placeholderSubcategory   S lectionner la sous cat gorie

    chat
      messages
        contentPlaceholder   Ton message
        customerTitle    Donneur d ordre
        deleteConfirm   Veux tu vraiment supprimer le message
        submit   Envoyer le message
        title   Questions et r ponses

      privateWorkChat
        helpText   Cette discussion n est visible que par toi et le destinataire

      publicWorkChat
        helpText   Tant que la commande n est pas pass e  tous les messages sont visibles pour tous les utilisateurs enregistr s

      usageAgreement   Des num ros de t l phone et adresses e mail ne sont pas autoris s dans le chat  Les offres doivent  tre plac s directement   l  aide du bouton  Cr er une offre  ci dessus  D s que le client a accept  votre offre  nous vous communiquerons les coordonn es d taill es  nom  adresse  num ro de t l phone  etc

    collapsibleTalentInfo
      aboutLabel     propos de moi
      hideDetails   Masquer les d tails
      serviceDescriptionLabel   Je propose les services suivants
      showDetails   Afficher les d tails

    completedWorkList
      profilesPerPage   Afficher profils par page
      title   Missions termin es

    contractAddressDetails
      customer   Donneur se d ordre
      email   E mail
      phoneNumber   Num ro de t l phone
      talent   Talent
      title   Coordonn es
      workPlace   Lieu de r alisation

    costForm
      addCostItem   Ajouter des frais suppl mentaires
      amount   Quantit
      cancel   Annuler
      cost   Frais
      costBelowMinimum   Le montant minimum est de 20 CHF
      costEstimation   Estimation des co ts
      costIsInvalid   Les montants indiqu s ne sont pas encore valides
      costItemBelowMinimum   Le montant minimum est de 0 45 CHF
      costItems   D penses suppl mentaires
      enterCostDescription   Le montant que tu proposes n est pas fixe  Tu peux ajuster le montant avant d envoyer la facture finale au client  Il se peut que tes efforts aient  t  plus ou moins importants
      enterFixCostDescription   Le montant que tu proposes est fixe  Tu ne peux plus ajuster le montant avant d envoyer la facture finale au client
      fixedPrice   Prix fixe
      fixedRate   Prix fixe
      fixedRateInfo   Ce que tu factures pour le travail
      netHourlyRate   Ton tarif horaire
      netHourlyRateInfo   Ce que tu gagnes r ellement   l heure  hors TVA de la commission de service
      price   Prix
      submit   Ajouter
      total   Frais
      workCostBelowMinimum   Le montant minimum est de 3 CHF

    costListing
      amount   Quantit
      amountOfServiceFee   Commission de service d un montant de   fee
      amountShort   Pi ce
      cost   D penses
      subtotal   Sous total
      timeRequired   Temps de travail
      total   Total
      vat   Taxe sur la valeur ajout e
      vatShort     percent   TVA

    customerArchive
      details   D tails
      noArchivedWorksTitle   Tu n as encore aucune mission archiv e
      workState
        canceled   Annul
        done   Effectu


    customerBillDetail
      complaintHelp   Si la facture ne correspond pas   l accord pr alable ou si tu n es pas d accord avec la facture  prends contact avec le talent et trouve une solution avec lui ou elle  Si tu ne r ussis pas   trouver un terrain d entente avec le talent
      complaintLink   contacte Lawoon
      definitiveCost   Co t total    amount
      paymentMethodTitle   Vous paierez avec la carte suivante
      paymentMethodUnfold   Payer diff remment
      processingBillPayment   Le paiement est en cours
      receiptCreate   Accepter et r gler la facture
      receiptCreatedError   Une erreur s  est produite lors du paiement  Veuillez contacter Lawoon pour plus d  informations ou choisir un autre mode de paiement
      receiptCreatedSuccess   Tu as accept  la facture avec succ s

    customerBills
      billedTotal   Montant total
      costAdjusted    Le montant total a  t  modifi  et est diff rent de celui de l offre
      details   D tails
      pendingBills
        one   Une facture est disponible pour le paiement  Celle ci sera accept e automatiquement 5 jours apr s la facturation
        other     count   factures sont disponibles pour le paiement  Celles ci seront accept es automatiquement 5 jours apr s la facturation

      title   Factures

    customerContractNew
      acceptOffer   Accepter l offre
      chooseTime   S lectionne l une des dur es propos es
      declineOffer   refuser
      declineSuccess   L offre a  t  refus e avec succ s
      error   Une erreur est survenue
      reasonOtherTalent   J ai pr f r  un autre talent
      reasonToExpensive   Trop cher
      success   L offre a  t  accept e avec succ s
      warning   Attention
      warningInfo   Lorsque tu acceptes une offre  tu t engages   ce que le travail soit effectu  dans le temps imparti

    customerContracts
      details   D tails   Contact
      pendingContracts
        one   Tu as une mission en cours
        other   Tu as   count   missions en cours

      title   Missions

    customerDashboard
      offer
        one     count   offre
        other     count   offres

      workState
        canceled   Annul
        done   Effectu
        draft   En attente du d verrouillage
        offering   En attente d offres
        offeringWithOffers   En attente de l acceptation d une offre
        payment   En attente de paiement
        rating   En attente d  valuation
        running   En attente de r alisation
        waitingForBill   En attente de facturation


    customerInvitationDetails
      archivedWarning   Attention  Cette invitation a  t  supprim e et n est plus visible que par toi
      backToOverview   Retour   la vue d ensemble
      delete   D commander le talent
      deleteConfirmation   Veux tu vraiment d commander le talent  Le talent ne pourra alors plus  crire d offre  Cette action est irr versible
      edit    diter

    customerInvitations
      decline   Retirer
      description   Ici  tu trouveras tous les talents que tu as invit s   faire des offres
      details   D tails
      inviteTalent
        description   Recherche des talents et invite les te faire une offre
        title   Inviter des talents   faire une offre

      status
        declinedByCustomer   Retir
        declinedByTalent   Invitation   faire une offre refus e
        offer   Recevoir une offre
        pending   En attente de r ponse

      title   Talents

    customerLandingpage
      description1   Sur lawoon ch  vous trouverez des professionnels et des ind pendants dans le domaine de du commerce  du jardinage  du nettoyage  du d m nagement  de l  informatique  du graphisme  de la finance  du marketing  de la formation  du sport  de la beaut  et bien d  autres m tiers encore  Ici  vous passez votre commande   qu  il s  agisse de travaux de peinture  de nettoyages ou de cours de langue   rapidement et gratuitement et vous recevez rapidement des offres diverses  Choisissez la meilleure et convenez des autres d tails importants avec votre artisan
      description2   Sur lawoon ch  il importe peu que vous passiez votre commande pour vous m me ou pour une entreprise et vous pouvez passer autant de commandes que vous le souhaitez  D s que vous avez trouv  votre artisan appropri  et que le travail a  t  ex cut   les co ts vous seront factur s et transf r s automatiquement   l  artisan  Cela vous laisse plus de temps pour les choses vraiment importantes dans la vie  Essayez le maintenant
      descriptionHead   Vous cherchez un bricoleur  un jardinier ou un  lectricien   Avez vous besoin d  aide avec votre ordinateur ou votre d claration de revenus   Alors Lawoon est l  endroit id al pour vous
      title   Passez vos commandes sur Lawoon
      title1   Passer une commande
      title2   Trouver un artisan

    customerOfferDetail
      archivedOffers   Offres archiv es
      noOffersForPrivateWork   Aucune offre n attend de r ponse de ta part  Ceci est une mission non publique  As tu invit  des talents   d poser des offres
      noOffersForPublicWork   Aucune offre n attend de r ponse de ta part  Tu peux  galement inviter directement des talents   faire des offres

    customerOffers
      details   D tails
      pendingOffers
        one   Tu as une offre en attente   laquelle tu dois r pondre
        other   Tu as   count   offres en attente auxquelles tu dois r pondre

      title   Offres
      total   Montant total

    customerOnboarding
      createWork   Cr er une mission
      createWorkIntro   As tu un projet que tu souhaites r aliser ou pour lequel tu as besoin d aide  Cr e maintenant une mission afin que nos talents puissent te contacter
      searchTalents   Trouver des talents
      searchTalentsIntro   Ton projet est encore en phase de planification  Tu ne sais pas encore avec certitude de quelles qualifications tes talents auront besoin  Commence par fouiller dans notre base de donn es de talents
      welcomeMessage   Ton compte a  t  cr   avec succ s  Bienvenue sur Lawoon

    customerPublicAnnouncements
      details   D tails
      pendingPublicAnnouncements
        one   Tu as une mission publique disponible
        other   Tu as   count   missions publiques disponibles

      title   Missions publiques

    customerRating
      alreadyRated   Tu as d j   valu  la collaboration
      back   Retour
      ratingSuccess   Bien jou   L  valuation a  t  transmise
      sendRating   Envoyer l  valuation

    customerReceiptDetail
      backToArchive   Retour   la vue d ensemble
      backToReceipts   Retour   la vue d ensemble
      printBill   Aper u avant impression
      ratingCreate    valuer le talent maintenant
      ratingExplanation   Tu n as pas encore  valu  le talent sur cette mission

    customerReceipts
      linkToBill   Facture
      loadMore   Charger plus
      noReceiptsYet   Tu n as encore termin  aucune mission
      totalCost   Co t total    amount
      workWasDone   Mission r alis e le

    customerWorkDetail
      deleteConfirmation   Veux tu vraiment supprimer la mission  Toutes les offres correspondantes seront automatiquement supprim es  Cette action est irr versible
      deleteWork   Supprimer la mission
      editWork   Ajuster la mission
      noInvitationsYet   Tu n as encore invit  aucun talent pour le moment

    customerWorkEdit
      cancel   Annuler
      error   Une erreur est survenue  Essaie de nouveau plus tard
      submit   Enregistrer
      success   Tes modifications ont  t  enregistr es
      title    diter la mission

    customerWorkModerate
      cancel   Cancel
      error   An error has occurred  Please try again later
      submit   Save
      success   Your changes have been saved
      title   Amend job

    customerWorksList
      createWork   Cr er une mission
      noInvitationsWarning   Aucun talent invit
      noPendingWorksMessage   As tu un projet que tu souhaites r aliser ou pour lequel tu as besoin d aide  Cr e maintenant une mission afin que nos talents puissent te contacter
      noPendingWorksTitle   Tu n as actuellement aucune mission en cours
      workOverview   Aper u de la mission

    dashboard
      privateWork   Mission priv e
      tabs
        archived   Archiv
        pending   Actuel


    emailEdit
      currentPassword   Mot de passe actuel
      email   Nouvelle adresse e mail
      responseError   Une erreur est survenue  L adresse e mail n a pas  t  modifi e  Il est possible que ton mot de passe actuel soit erron
      submit   Enregistrer
      success   L adresse e mail a  t  modifi e avec succ s
      title   Modifier l adresse e mail

    footer
      aboutLawoon     propos de Lawoon
      contact   Contact
      faq   FAQ
      jobs   Jobs
      linksCaption   Voici Lawoon
      terms   Juridique

    forbidden
      helpText   Tu n as pas acc s   ces ressources
      title   Stop

    home
      advantages
        competentTalentCaption   Des talents comp tents et fiables
        competentTalentDescription   Nos talents sont des professionnels et des gens qui font ce travail comme deuxi me emploi  Ils prennent toujours   c ur l ex cution sans souci de ta mission  Nos talents sont ponctuels  fiables et nous les contr lons r guli rement
        guaranteedOfferCaption   Des offres garanties en quelques heures
        guaranteedOfferDescription   Une fois que la mission a  t  publi e  tu re ois en quelques heures des offres int ressantes et sans engagement  Accepte les offres qui correspondent   tes besoins et fais r aliser ta mission
        satisfactoryPaymentCaption   Paiement uniquement apr s ex cution satisfaisante du service
        satisfactoryPaymentDescription   Une fois que la mission a  t  remplie et te donne enti re satisfaction  il te suffit simplement d accepter la facture   Si quelque chose ne correspond pas   tes attentes  prends contact avec nous et nous nous en occuperons
        title   Ainsi  nous te rendons la vie plus facile

      knownFrom   connu de
      ourPartners   Nos partenaires
      process
        customer
          createWork   Cr er une mission
          createWorkDescription   Place une mission sur Lawoon en peu de clics  Tu peux publier des missions publiques afin que les talents int ress s te contactent et t envoient des offres ou inviter toi m me les talents de ton choix pour r aliser ta mission  En temps normal  tu re ois les premi res offres quelques heures apr s avoir publi  ta mission
          payment   Paiement facile
          paymentDescription   Apr s avoir accept  la facture du talent  le montant est retir  de ta carte de cr dit et le salaire est directement transf r  au talent  Tu as d sormais la possibilit  d  valuer le talent
          selectOffer   S lectionner l offre
          selectOfferDescription   S lectionne l offre la plus adapt e
          start   Cr er une mission
          title   Tu as une mission   effectuer
          workPending   La mission est effectu e
          workPendingDescription   Le talent s lectionn  r alisera ta mission avant la date choisie

        talent
          doWork   Effectuer un travail
          doWorkDescription   Ton offre a  t  accept e et tu dois r aliser le travail dans le temps imparti
          findWork   Trouver une mission
          findWorkDescription   Inscris toi en tant que talent sur Lawoon et postule pour des missions int ressantes ou attend qu un donneur d ordre t invite   r aliser un travail
          getPaid    tre pay
          getPaidDescription   Au plus tard 5 jours ouvr s  le salaire est sur ton compte
          start   Devenir un talent
          title   Gagne facilement de l argent en tant que talent
          writeBill    tablir une facture
          writeBillDescription   Mission effectu e     tablis la facture d finitive  Tu as ici encore la possibilit  de facturer des d penses impr vues comme les frais de mat riaux ou des heures suppl mentaires
          writeOffer   Faire une offre
          writeOfferDescription    cris une offre au donneur d ordre et peut  tre que tu auras bient t une mission   effectuer

        title   C est un jeu d enfant

      teaser
        goOrder   Passer un ordre
        goTalent   Devenir un talent
        subtitle   Le march  suisse pour des transmissions d  emplois
        title   Lawoon   et c est parti

      testimonials
        testimonialFirst
          mention   Traitement simple et rapide des petites commandes   de la collecte des listes d  adresses aux travaux graphiques
          signatureName   Dariush Daftarian
          signaturePosition   Partenaire de cdg Beratungen

        testimonialSecond
          mention   Simple passation d ordre  service sensationnel et parfaite ex cution des commandes  Lawoon a d pass  nos attentes   maintes reprises   de nouveau   tout moment
          signatureName   Alain Friedrich
          signaturePosition   Luzern

        testimonialThird
          mention   J  ai d j  r alis  plusieurs commandes par l  interm diaire de Lawoon   installation de meubles  montage de lampes et m me r serv  un traiteur par le biais de Lawoon  La plateforme est con ue et de mani re parfaite et simple  Il suffit de passer un ordre et des offres int ressantes arrivent peu de temps apr s  Bien volontiers   tout moment
          signatureName   Fabienne Reiter
          signaturePosition   BÃ¤retswil

        title   T moignages


    imprint
      about   Mentions l gales
      toBeContinued   Plus d informations

    lawoonCostListing
      amountWithVat   montant de
      amountWithoutVat   montant net de
      percentageOfBill   12 5  de la facture
      total   Total
      totalWithVat   Total   vatRate   TVA comprise
      vat   Taxe sur la valeur ajout e

    login
      error   Une erreur est survenue
      notAuthorized   E mail ou mot de passe incorrect
      resetPasswordSuccess   Le mot de passe a  t  modifi  avec succ s  Connecte toi avec le nouveau mot de passe

    loginForm
      emailLabel   E Mail
      emailPlaceholder   E Mail
      noLogin   Tu n as pas encore de profil
      passwordForgotten   Mot de passe oubli
      passwordLabel   Mot de passe
      passwordPlaceholder   Mot de passe
      register   S inscrire
      signIn   Se connecter

    metaData
      completedWorks
        description   Trouve maintenant de nouvelles missions  Lawoon g n re et envoie la facture et garantit un paiement rapide  S inscrire gratuitement maintenant
        title   Missions termin es

      customerLandingpage
        description   Passez vos commandes sur Lawoon et trouvez des professionnels et des ind pendants dans le domaine de du commerce  du jardinage  du nettoyage  du d m nagement  de l  informatique  du graphisme  de la finance  du marketing  de la formation  du sport et de la beaut
        title   Passez vos commandes sur Lawoon

      default
        description   Le recrutement facile  S inscrire gratuitement maintenant  La mani re la plus simple de trouver la bonne personne pour r aliser le travail
        title   Lawoon   et c est parti

      jobs
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Lawoon   Offene Stellen  Projektleiter

      talentLandingpage
        description   Lawoon vous aide   trouver de nouvelles missions  Que vous soyez  tudiant  freelance ou professionnel  cr ez votre profil d s maintenant
        title   Cr er un profil sur Lawoon

      talents
        description   La mani re la plus simple de trouver la bonne personne pour r aliser le travail  Trouver des talents pour r aliser ta mission maintenant
        title   Talents Lawoon

      works
        description   Trouve maintenant de nouvelles missions  Lawoon g n re et envoie la facture et garantit un paiement rapide  S inscrire gratuitement maintenant
        title   Missions Lawoon


    navbar
      blue
        browseAnnouncements   Trouver des missions
        browseTalents   Trouver des talents
        createWork   Cr er une mission

      browseTalents   Trouver des talents
      customer
        profile   Profil
        roleName   Moi en tant que Donneur d ordre
        tabSearchWorks
          archivedWorks   Justificatifs
          createWork   Cr er une mission
          pendingWorks   Missions en cours
          terms   Juridique

        talents   Fouiller dans les talents
        works   Mes missions

      lawoon   Lawoon
      right
        dashboard   Aper u de mes missions
        login   se connecter
        logout   se d connecter

      talent
        browseAnnouncements   Fouiller dans les missions
        createWork   Cr er une mission
        profile   Profil
        roleName   Moi en tant que Talent
        tabMyWorks
          bills   Factures
          declinedOffers   Offres refus es
          invitations   Invitations
          offers   Offres
          onGoingOffers   Missions
          receipts   Justificatifs
          terms   Juridique

        works   Mon travail


    noConnection
      info   La connexion   Lawoon a  chou
      reload   Charger   nouveau la page

    notificationSettings
      dailySummary
        daily   Tous les jours
        description   Tu peux recevoir quotidiennement un r sum  de toutes les missions publiques
        never   Jamais
        title   R sum  quotidien

      disabledWarning   Es tu s r e   Tu vas probablement manquer des  v nements importants
      email   E mail
      keyMappings
        billPaid   La facture a  t  pay e
        billReminder   Rappel pour  tablir la facture
        customerDeclinedOffer   L offre a  t  refus e
        newBill   La facture a  t   tablie
        newContract   L offre a  t  accept e
        newInvitation   Nouvelle invitation
        newMessage   Nouveau message
        newOffer   Nouvelle offre
        workStartReminder   Rappel de d but de mission

      noCustomerPhoneNumberError   Tu n as pas saisi de num ro de t l phone portable sur ton profil de donneur d ordre
      push   Push
      pushHintHasApp   Les notifications push veulent  tre directement sur ton portable  m me si tu as ferm  l  application
      pushHintHasNoApp   Obtenez l  application mobile Lawoon maintenant et restez   jour avec les notifications push
      sms   SMS
      submit   Enregistrer
      title   Notifications
      updateError   Erreur lors de l actualisation des param tres
      updateSuccess   Param tres enregistr s
      workSuggestions
        descriptionInterval   D s qu une nouvelle mission sera cr  e qui correspond aux cat gories s lectionn es  tu recevras une notification  S lectionne   quelle fr quence et comment tu souhaites recevoir les notifications
        descriptionSubcategories   Quelles sont les cat gories qui t int ressent
        interval
          daily   Tous les jours
          immediate   Imm diatement
          never   Jamais

        title   Missions int ressantes pour toi


    notifications
      noMessagesYet   Tu n as aucune notification actuellement

    offerAcceptModal
      accept   Accepter l offre
      cancel   Annuler
      text   Accepter l offre
      title   Veux tu vraiment accepter cet offre

    offerDeclineModal
      cancel   Annuler
      decline   Refuser l offre
      errorMessage   S lectionne un motif
      otherReason   Autre motif
      otherReasonPlaceholder   En quoi l offre n  tait elle pas adapt e   ton besoin
      title   Motif du refus

    offerShow
      hideDetails   Masquer les d tails
      offerText   Informations d taill es
      offered   Offre    amount
      possibleTimes   Le talent te propose les caract ristiques suivantes pour la r alisation de ta mission
      showDetails   Afficher les d tails
      workIsDoneOn   Le travail doit  tre effectu  dans le temps imparti
      workPlace   Lieu de r alisation

    pageNotFound
      description   La page souhait e n a pas pu  tre charg e
      title   404  Page introuvable

    pagination
      first
      last
      next
      previous

    passwordEdit
      currentPassword   Mot de passe actuel
      description   Les mots de passe longs contenant beaucoup de caract res sont plus s rs
      password   Nouveau mot de passe
      passwordConfirmation   Nouveau mot de passe  confirmation
      responseError   Une erreur est survenue  Le mot de passe n a pas  t  modifi   Il est possible que ton mot de passe actuel soit erron
      submit   Enregistrer
      success   Le mot de passe a  t  modifi  avec succ s
      title   Modifier le mot de passe

    passwordForgotten
      description   R initialise le mot de passe afin de pouvoir saisir ton adresse e mail
      emailPlaceholder   Ton adresse e mail
      error   Une erreur est survenue  Essaye de nouveau
      modalTitle   Mot de passe oubli
      navigateToLogin   Connexion
      resetInstructions   Tu vas recevoir   l adresse indiqu e un lien te permettant de r initialiser ton mot de passe
      submit   R initialiser le mot de passe

    passwordReset
      modalTitle   Saisir un nouveau mot de passe
      passwordConfirmationPlaceholder   Confirmer le nouveau mot de passe
      passwordPlaceholder   Nouveau mot de passe
      resetFailed   Une erreur est survenue  Le mot de passe n a pas  t  r initialis   Essaye de nouveau
      submit   R initialiser le mot de passe

    passwordValidator
      invalidConfirmation   Les mots de passe ne correspondent pas
      invalidLength   Le mot de passe doit contenir au moins 8 caract res

    payment
      bankAccount
        bankAccountForm
          accountName
            label   Compte courant sur
            missing   Indique un nom
            placeholder   Pierre Mod le

          iban
            label   IBAN
            missing   Saisis un IBAN suisse valable
            placeholder   CH93 0076 2011 6238 5295 7
            wrongFormat   Saisis un IBAN suisse valable

          submit   Saisir les coordonn es bancaires
          updatedSuccessful   Les coordonn es bancaires ont  t  actualis es
          updatedUnsuccessful   Un probl me est survenu lors de l actualisation des coordonn es bancaires


      paymentMethods
        dialog
          description   Saisir un moyen de paiement
          name   Lawoon
          panelLabel   Enregistrer la carte

        endingWith   fini avec
        errors
          missingPaymentMethod   Tu dois s lectionner un moyen de paiement

        explanation   Afin de pouvoir r gler les factures le plus facilement possible  tu dois choisir un moyen de paiement  Bien entendu  nous ne chargerons jamais ta carte de cr dit sans ton autorisation
        privacyInformation   Tes donn es sont transmises de mani re crypt e par les services d un prestataire tiers
        storePaymentMethod   Enregistrer un nouveau moyen de paiement
        title   Tes moyens de paiement

      stripe
        authorize
          connected   Connexion  tablie
          connecting   Connexion en cours
          retry   Essayer   nouveau
          serverError   Une erreur inconnue est survenue
          stripeError   Une erreur est survenue  le compte Stripe n a pas pu  tre cr   et li
          title   Actualiser les coordonn es bancaires

        connect
          button   Saisir les coordonn es bancaires   l aide de Stripe
          connected   Compte d j  li
          defaultProductDescription   Je suis un Lawooner
          refreshTalentBankAccount   Actualiser les coordonn es bancaires

        explanation   Afin de pouvoir r gler les factures le plus facilement possible  tu dois enregistrer tes coordonn es bancaires pour que Lawoon puisse te transf rer de l argent


    print
      title   Aper u avant impression

    privacy
      dataPrivacyStatement   D claration de protection des donn es
      toBeContinued   Plus d informations

    profilePictureComponent
      altText   Photo de profil
      professionalBadgeText   Professionnel

    profileSettings
      title   Param tres

    profileSubnavbar
      account   Compte
      notifications   Notifications
      payment   Moyen de paiement
      talent   Profil Talent
      user   Profil Utilisateur

    publicAnnouncementFilter
      newestEntries   Entr es les plus r centes
      oldestEntries   Entr es les plus anciennes
      operationPlace   ou   proximit  de
      showOnlyOpenAnnouncements   Afficher seulement les missions ouvertes
      sortBy   Trier par

    publicWorkList
      filter   Filtrer les missions
      lawoonAdButton   Cr er une mission
      lawoonAdText   Tu as une mission   effectuer
      next   Continuer
      noWorksFound   Aucune mission trouv e
      profilesPerPage   Afficher profils par page
      title   Fouiller dans les missions
      writeOffer   Faire une offre

    quickAction
      adminPanel   Tableau de bord Admin
      customer
        roleName   Profil Donneur d ordre

      logout   Se d connecter
      settings   Param tres
      talent
        roleName   Profil Talent


    receiptList
      title   Factures   Justificatifs

    regionSelector
      invalidSelection   S lectionner dans la liste
      placeholder   Saisir un lieu

    register
      error   Une erreur est survenue  Assure toi que ton mot de passe contient au moins 8 caract res ou choisis une adresse e mail encore non utilis e
      notAuthorized   E mail d j  utilis

    registration
      alreadyHaveLogin   Vous avez d j  un profil
      createAccount   Cr er un compte
      emailLabel   E Mail
      emailPlaceholder   E Mail
      login   Se connecter
      passwordLabel   Mot de passe
      passwordPlaceholder   Mot de passe
      registration   S inscrire

    selectedTalentList
      invite   Charger maintenant
      noSelectedTalentsInfo   Tu n as s lectionn  aucun talent   inviter pour le moment
      remove   Retirer

    subcategorySelection
      allCategories   Tous
      descriptionCategories   Cat gories principales
      descriptionSubcategories   Sous cat gories
      exampleDescription
        subcategory10   par ex  nous avons une nouvelle douche qui doit  tre mont e dans la salle de bains
        subcategory11   par ex  la nouvelle cuisine doit  tre install e dans notre maison
        subcategory12   par ex  ous avons pr s de 100 m2 de pelouse qui doit  tre tondue d ici la fin de la semaine prochaine
        subcategory2   par ex  accrocher des tableaux au mur  mettre en place l  clairage de No l  etc
        subcategory3   par ex  le parquet doit  tre pos  dans le salon et les chambres des enfants
        subcategory4   par ex  la lampe doit  tre mont e dans le salon et raccord e
        subcategory5   par ex  poser du gazon synth tique  installer une tondeuse robot
        subcategory6   par ex  faire fonctionner la tondeuse robot et installer le c ble p riph rique
        subcategory7   par ex  plusieurs grilles de ventilation doivent  tre install es dans toute la maison
        subcategory8   par ex  il faut repeindre   neuf un mur de bureau  24 m2
        subcategory9   par ex  des fondations doivent  tre cr  es pour le nouvel abri de jardin

      exampleTitle
        subcategory10   par ex  monter une cuisine
        subcategory11   par ex  monter un abri de jardin
        subcategory12   par ex  tondre la pelouse
        subcategory2   par ex  divers travaux dans la maison
        subcategory3   par ex  poser du parquet
        subcategory4   par ex  monter une lampe
        subcategory5   par ex  poser du gazon synth tique  installer une tondeuse robot
        subcategory6   par ex  monter des grilles de ventilation
        subcategory7   par ex  peindre les murs
        subcategory8   par ex  fondations pour un abri de jardin
        subcategory9   par ex  monter une douche


    submitButton
      formInvalid   Remplis les champs vides ou incorrects
      label   Envoyer

    successStory
      customerRating    valuation du donneur d ordre
      finishedSince   Termin  il y a   days   jours
      showLess   Moins
      showMore   Plus
      showTalentProfile   Montrer le profil du talent

    supportBox
      email   info lawoon com
      greeting   Bonjour  Je m appelle Nathalie
      howToHelp   As tu des questions ou as tu besoin d aide pour cr er un acc s
      openingHours   Je suis disponible du lundi jusqu au vendredi de 8 00   17 00
      phoneNr    41 44 687 19 19
      title   Assistance

    tabSubnavbar
      bill   Facture
      invitations   Talents
      offers   Offres
      overview   Vue d ensemble
      rating    valuation
      users   All Users
      works   Jobs Moderation
      yourOffer   Tes offres

    talentArchive
      details   D tails
      noPendingWorksTitle   Tu n as encore aucune mission archiv e
      workFlowStatus
        declinedInvitation   Invitation annul e
        declinedOffer   L offre a  t  refus e
        receipt   Termin


    talentBillDetail
      connectToBankAccount   Nous ne pouvons pas te transf rer d argent pour l instant
      connectToBankAccountInfo   Tu dois d abord saisir tes coordonn es bancaires avant de pouvoir  tablir une facture
      createBill   Cr er la facture
      edit   Ajuster la facture
      noBillCreatedYet   Tu n as pas encore cr   de facture pour cette mission
      notAbleToCreateBillYet   Tu ne peux pas cr er de facture pour cette mission pour l instant

    talentBillEdit
      billCreatedError   Une erreur est survenue pendant la cr ation de la facture
      billCreatedSuccess   La facture a  t  cr  e avec succ s
      billUpdatedError   Une erreur est survenue
      billUpdatedSuccess   La facture a  t  actualis e avec succ s
      cancel   Annuler
      createSubmit   Envoyer
      createTitle   Cr er la facture
      editSubmit   Enregistrer
      editTitle    diter la facture
      offeredTotal   Co t total

    talentBills
      amountForYou   dont en ta faveur
      billedTotal   Montant total
      details   D tails
      pendingBills
        one   Tu as une facture en attente d acceptation par le client  Celle ci sera accept e automatiquement 5 jours apr s la facturation
        other   Tu as   count   factures en attente d acceptation par le client  Celles ci seront accept es automatiquement 5 jours apr s la facturation

      title   Factures

    talentBrowse
      costsPerHour   par heure
      details   Afficher plus
      invite   Demander
      lawoonAdButton   Devenir un talent
      lawoonAdText   Tu veux devenir un talent toi aussi
      profilesPerPage   Afficher profils par page

    talentContracts
      detailLinkText   D tails   Facture
      noPendingContracts   Tu n as aucune mission en cours
      pendingContracts
        one   Tu as une mission en cours
        other   Tu as   count   missions en cours

      title   Tes missions

    talentDashboard
      details   D tails
      workFlowStatus
        bill   En attente de paiement
        contract     r aliser
        contractDone   En attente de facturation
        declinedInvitation   Invitation annul e
        declinedOffer   L offre a  t  refus e
        offer   En attente de l acceptation d une offre
        receipt   Termin
        workInvitation   En attente d une offre


    talentDeclinedOfferDetail
      backToOverview   Retour   la vue d ensemble
      reason   Motif

    talentDeclinedOffers
      amountForYou   dont en ta faveur
      billedTotal   Montant total
      declinedOffersCount
        one   Tu as une offre refus e
        other   Tu as   count   offres refus es

      details   D tails
      title   Offres refus es

    talentFilter
      allQualifications   Tous
      location     proximit  de
      nonprofessional     temps partiel
      professional   Professionnel
      professionalHint   Personne   Entreprise agr e et certifici e
      qualification   Qualification
      search   Chercher
      searchPlaceholder   Exemple  Peintres

    talentLandingpage
      description1   Cr ez votre profil maintenant et dites nous quelle est votre sp cialit    que ce soit l  artisanat  le jardinage  le nettoyage  le d m nagement  l  informatique  le graphisme  la finance  le marketing  l   ducation  le sport ou la beaut
      description2   Par la suite  les clients peuvent vous contacter directement ou vous pouvez postuler pour des emplois   pourvoir  Cr ez vos offres individuelles et obtenez de nombreux nouveaux emplois
      description3   Nous nous chargeons pour vous du traitement des factures et du transfert d  argent apr s une ex cution r ussie du travail  Pour que vous puissiez profiter d  une fin de journ e sans stress
      descriptionHead   Chez lawoon ch  nous vous aidons   trouver des nouveaux emplois  Peu importe que vous soyez  tudiant  freelance ou professionnel  L  important  c  est que vous ayez un talent dans le domaine que vous offrez
      title   Cr ez un profil maintenant et obtenez vos premiers emplois
      title1   Cr er un profil
      title2   Recevoir des commandes
      title3   Paiement garanti

    talentList
      filter   Filtrer les talents
      noResultsHint   Lorsque tu publies un travail publiquement  les talents peuvent te trouver
      noTalentsFound   Aucun talent trouv
      talentAddedHint   Les talents sont pr ts    tre invit s  S lectionne des talents et envoie leur une invitation en haut de la page
      title   Fouiller dans les talents

    talentOfferDetail
      createOffer   Cr er l offre
      deleteOffer   Supprimer l offre
      edit   Ajuster l offre
      offerDeletedSuccessful   L offre a  t  supprim e
      offerText   Informations d taill es
      reasonChangedMyMind   J ai chang  d avis
      reasonNoTime   J ai un emp chement

    talentOfferEdit
      cancel   Annuler
      error   Une erreur est survenue
      success   Les modifications ont  t  enregistr es
      title    diter l offre
      updateOffer   Enregistrer

    talentOfferList
      details   Voir les d tails
      pendingOffers
        one   Tu as une offre sans r ponse
        other   Tu as   count   offres sans r ponse

      title   Offres sans r ponse

    talentOfferNew
      addItem   Ajouter des frais suppl mentaires
      addItemError   Entr e invalide  Saisis une description  un prix et une quantit
      answerFollowingQuestions   Entretien
      answerPlaceholder   Ta r ponse
      cancel   Annuler
      chooseTimeInfo   Indique de mani re d finitive quand tu r aliseras le travail
      costItemDescritpionPlaceholder   Exemple  Frais de d placement
      createOffer   Cr er l offre
      detailInfos   Ici  tu peux donner au donneur d ordre des informations compl mentaires  facultatif
      detailInfosPlaceholder   par ex  je dois commander deux pneus suppl mentaires
      offeredTotal   Co t total propos
      selectDateTime   S lectionner un d lai
      selectWorkPlace   S lectionner un lieu pour la r alisation de la mission
      sendOffer   Envoyer l offre
      submitError   Une erreur est survenue
      submitSuccess   L offre a  t  cr  e avec succ s
      yourEffort   Tes d penses

    talentOnboarding
      searchPublicAnnouncements   Trouver des missions
      searchPublicAnnouncementsIntro   Tu veux trouver des missions et commencer   travailler d s maintenant  Alors fouille un peu dans les missions publi es
      welcomeMessage   Ton compte a  t  cr   avec succ s  Bienvenue sur Lawoon

    talentProfileBankAccountEdit
      title    diter les coordonn es bancaires

    talentProfileCurrentStep
      back   Retour
      beforeUnloadAlert   Tes modifications seront perdues si tu quittes cette page
      step   Cr er le profil    tape   step   sur 2

    talentProfileEdit
      error   Une erreur est survenue
      save   Enregistrer
      title    diter le profil
      updateSuccessful   Les modifications ont  t  actualis es avec succ s

    talentProfileMisc
      address   Adresse
      iCompensateVat   Je suis soumis e    la TVA
      mobileNumber   Num ro de t l phone mobile
      mobileNumberPlaceholder   Exemple   41 79 111 11 11
      selectPlaceHint   Ajoute la rue  le num ro et la ville
      vatNumber   Num ro de TVA
      vatNumberInfo   Saisis ici ton num ro de TVA
      vatNumberPlaceholder   Exemple  CHE 123 456 789
      vatRate   Taxe sur la valeur ajout e
      vatRateInfo   Saisis ici ton taux d imposition  En Suisse  celui ci s  l ve g n ralement   7 7

    talentProfilePersonalInfo
      cancelRegistration   Annuler
      companyDetailsMissing   Entrez le num ro d identification des entreprises  IDE  ou le site Web de votre entreprise
      companyName   Nom de l entreprise  facultatif
      companyNamePlaceholder   Exemple  Peinture Lema tre
      companyUidRegisterNumber   Num ro d identification des entreprises  IDE
      companyUidRegisterNumberPlaceholder   Exemple  CHE 492 117 729
      createProfileInfo   Cr e ton profil gratuitement et sans obligation sur Lawoon
      editProfilePicture   Modifier la photo du profil
      errorPhoto   T l charge une photo de profil
      errors
        missingAttributes   Remplis les champs vides ou incorrects et assure toi d avoir bien t l charg  une photo de profil

      firstName   Pr nom
      firstNamePlaceholder   Exemple  Max
      iAmAProfessional   Je suis un professionnel
      iAmAProfessionalInfo   Tu exerces cette activit    temps plein  tu poss des un dipl me dans ce domaine et m me d j  quelques ann es d exp rience professionnelle
      lastName   Nom
      lastNameInfo   Nous affichons uniquement ton pr nom sur ton profil public
      lastNamePlaceholder   Exemple  Lema tre
      maxFilesize   10Mo maximum
      profilePicture   Photo de profil
      profileVisibility   Cacher mon profil
      profileVisibilityInfo   Ainsi  ton profil n est plus visible pour les donneurs d ordre
      saveAndContinue   Enregistrer et continuer
      serviceDescription   Quels services proposes tu
      serviceDescriptionPlaceholder   par ex  nettoyage de cuisine  salle de bain et salle de s jour
      tellSomethingAboutYou   Dis nous en un peu plus sur toi
      tellSomethingAboutYouPlaceholder   Exemple  J ai huit ans d exp rience professionnelle en tant que peintre etc
      uploadProfilePicture   T l charger une photo de profil
      website   Site web  facultatif
      websitePlaceholder   Exemple  https   exemple com

    talentProfileQualification
      createError   Une erreur est survenue
      createProfile   Cr er le profil
      createSuccess   Le profil de talent a  t  cr   avec succ s  Tu peux compl ter ton profil dans les param tres
      education   Formation  facultatif
      educationPlaceholder   Exemple  2005 2009  Apprentissage en tant que peintre avec brevet f d ral
      experience   Exp rience professionnelle  facultatif
      experiencePlaceholder   Exemple  2009 aujourd hui  Direction de l entreprise Peinture Lema tre
      projectPlaceholder   Exemple  2010 2011  Ai travaill  chez Prime Tower
      projectPortfolio   R f rences  facultatif
      title   Dipl mes et exp rience  facultatif
      titleInfo   Les talents qui r ussissent le mieux sur Lawoon compl tent leur profil en pr cisant leur formation  en indiquant leur exp rience professionnelle et en donnant des r f rences  Ils obtiennent ainsi plus souvent des r ponses positives

    talentPublicShow
      aboutLabel     propos de moi
      qualification
        education   Formation
        experience   Exp rience professionnelle
        projectPortfolio   R f rences

      serviceDescriptionLabel   Je propose les services suivants

    talentRating
      continue   Ne pas faire d  valuation
      sendRating   Envoyer l  valuation

    talentRatings
      noComment    sans commentaire
      ratings    valuations

    talentReceipt
      back   Retour   la vue d ensemble
      billNumber   Facture n    referenceNumber
      paid   Le montant a d j   t  r gl
      print   Imprimer la facture
      vat   N  de TVA

    talentReceiptDetail
      backToReceipts   Retour   la vue d ensemble
      linkToBillCustomer   Facture envoy e au donneur d ordre
      linkToBillLawoon   Facture de Lawoon

    talentReceiptLawoon
      billNumber   Facture n    referenceNumber
      introduction   Nous facturons notre commission de service pour notre service de m diation  Elle est factur e au donneur d ordre en plus de ton tarif et n est pas retir e de ton salaire de talent
      sender
        address   SÃ¤gereistrasse 9
        city   8834 Schindellegi
        company   Lawoon AG
        vatNumber   CHE 492 117 729 TVA
        zip   8834


    talentReceipts
      linkToBillCustomer   Facture pour le donneur d ordre
      linkToBillLawoon   Facture de Lawoon
      loadMore   Charger plus
      noReceiptsYet   Tu n as encore termin  aucune mission
      totalCost   Co t total    amount
      workWasDone   Mission r alis e le

    talentRegistration
      alreadyHaveLogin   Vous avez d j  un profil
      createAccount   Continuer de cr er le profil
      emailLabel   E Mail
      firstNameLabel   Pr nom
      firstNamePlaceholder   par ex  Henri
      lastNameInfo   Nous affichons uniquement ton pr nom sur ton profil public
      lastNameLabel   Nom
      lastNamePlaceholder   par ex  Mod le
      leaveRegistrationConfirmation   Veux tu vraiment abandonner l inscription
      login   Se connecter
      passwordLabel   Mot de passe
      title   Cr er le profil

    talentVisibilities
      privateDescription   Tu n es visible nulle part sur le portail  Tu dois postuler toi m me aux missions
      privateTitle   Cach
      publicDescription   Ton profil est public  Les chances que l on te trouve et que l on te contacte pour des missions sont maintenant plus  lev es
      publicTitle   Visible de mani re publique

    talentWorkDetail
      acceptInvitation   Voulez vous accepter l  offre d  emploi
      deleteInvitation   Refuser l invitation
      deleteInvitationConfirmation   Veux tu vraiment refuser l invitation
      no   Aucun
      yes   Oui

    talentWorksList
      noPendingWorksMessage   Recherche des missions ouvertes et postule en cr ant une offre
      noPendingWorksTitle   Tu n as actuellement aucune mission en cours
      searchWorks   Trouver des missions maintenant
      workOverview   Aper u de la mission

    timeSelection
      addTime   Ajouter une dur e
      date   Date
      noTimesSelected   Tu n as pas encore s lectionn  de dur e
      time   Dur e

    timeSelectionForm
      addTime   Ajouter une dur e
      cancel   Annuler
      errorMessage
        invalid   Tu n as pas choisi une date valide
        notInFuture   La date choisie se situe dans le pass


    unauthorized
      pleaseLogin   Tu dois d abord te connecter
      title   Non connect

    userProfile
      description   Indique ici tes informations d utilisateur
      error   Une erreur est survenue  Les modifications n ont pas  t  enregistr es
      save   Enregistrer
      subtitle   Informations utilisateur
      success   Tes informations d utilisateur ont  t  enregistr es avec succ s

    userProfileForm
      address   Adresse
      firstName   Pr nom
      firstNamePlaceholder   Exemple  Max
      lastName   Nom
      lastNamePlaceholder   Exemple  Lema tre
      phoneNumber   Num ro de t l phone
      phoneNumberPlaceholder   Exemple   41 79 876 54 32
      selectPlaceHint   S lectionne la rue  le num ro et la ville dans la liste

    userProfileInput
      info   Compl te les informations de ton profil afin que les talents puissent te contacter
      title   Informations profil

    utils
      createdSince   Cr     durationString

    workAnswerListing
      answeredQuestions   Entretien

    workDescription
      estimatedWorkDuration   D penses estim es
      referenceNumber   N  de r f
      workCategory   Cat gorie de la mission
      workDescription   Description de la mission
      workLocation   Lieu de r alisation
      workTimes   Dates possibles de r alisation

    workForm
      isSpecificWorkPlace   Lieu de r alisation  Code postal   Ville
      isSpecificWorkPlaceInfo   Pas de lieu de r alisation sp cifique
      isWorkPublic   Visible de mani re publique
      isWorkPublicInfo   De cette mani re  la mission est list e et publique  et tu peux recevoir de nombreuses offres
      pictureWarning   Attention  De vieilles images ont  t   cras es

    workNew
      addQuestion   Ajouter une question
      cancel   Annuler
      deleteImage   Supprimer
      errors
        missingSubcategory   S lectionne une cat gorie et une sous cat gorie

      estimatedWorkDuration   Combien de temps environ la mission doit elle durer   valeur indicative pour les talents
      hasTalentToBeAvailableAtSpecificTime   Ton talent doit il  tre disponible durant une p riode pr cise
      hornbach
        footer
          text   La plateforme Lawoon ch  plateforme  est exploit e par l  entreprise Lawoon AG  CHE 492 117 729   SÃ¤gereistrasse 9  8834 Schindellegi  Lawoon AG est une entreprise ind pendante d  Hornbach qui met   disposition des donneurs d  ordre et prestataires de service une plateforme pour diff rents contrats  L  utilisation de la plateforme est soumise aux conditions contractuelles g n rales de Lawoon AG  www lawoon com terms   Hornbach ne saurait  tre tenu pour responsable des services souscrits sur la plateforme
          title   Dispositions juridiques

        title   Lawoon   en coop ration avec Hornbach

      imOnlyAvailableAtSpecificTimeCheckbox   Oui  je cherche quelqu un de disponible sur une p riode sp cifique
      infoNote   Les num ros de t l phone et les adresses e mail ne sont pas autoris s dans la description de la mission  D s que vous avez accept  une offre d  un talent  le talent recevra vos coordonn es ou vice versa
      introduction   Tu obtiens des offres gratuites et sans obligation sur Lawoon  Remplis simplement ce formulaire et c est parti
      invitationInfo   Le talent suivant recevra une invitation apr s la cr ation de la mission  Tu pourras encore inviter d autres talents plus tard
      maxUploadSize   10Mo maximum par image
      phoneNumber   Num ro de t l phone
      phoneNumberPlaceholder   Exemple   41 79 111 11 11
      questionNotValid   Saisis une question valide
      questionsToTheTalent   Questions pos es au talent
      questionsToTheTalentPlaceholder   Exemple  Combien d ann es d exp rience as tu
      selectPossibleTimes   Quand peux tu commencer la mission
      selectPossibleTimesHint   Si tu proposes plusieurs dates  le client choisira la date qui lui convient
      submit   Publier la mission
      submitError   Une erreur est survenue
      submitSuccess   Le travail a  t  cr   avec succ s et sera d verrouill  par Lawoon d  ici 24h
      submitSuccessWithInvitationHint   N oublie pas d inviter des talents
      termsCheckbox   CGV
      termsCheckboxInfo1   Oui  j ai lu les
      termsCheckboxInfo2   CGV
      termsCheckboxInfo3   et je les accepte
      timeAndQuestions   Dur e et questions  facultatif
      title   Cr er une mission
      uploadPlaceholder   T l charger des images  facultatif
      whatHasToBeDone   Quel est le travail   r aliser exactement
      whatHasToBeDonePlaceholder   par ex  La lampe doit  tre mont e dans le salon et raccord e
      workTitle   Description de la mission
      workTitlePlaceholder   par ex  Monter une lampe

    workRating
      comment   Donne un motif   ton  valuation  facultatif
      commentPlaceholder   Exemple  Le travail a  t  effectu  proprement et exactement selon mes souhaits  Cependant  le talent a pris plus de temps que pr vu
      starRatingHint    value la collaboration sur une  chelle de 1   5  toiles
      title    valuer le talent

    workStateListItem
      archivedWarning   Mission refus e
      delete   Refuser la mission
      deleteConfirmation   Veux tu vraiment refuser la mission  Tu ne pourras plus proposer d offre  Cette action est irr versible
      moreDates
        one      un autre
        other        count   autres

      showMore   Afficher plus
      workAssigned   Mission d j  assign e


  it
    aboutLawoon
      renuoDescription   Renuo AG  con sede a Wallisellen vicino a Zurigo    un   agenzia web che conta attualmente pi  di 14 dipendenti  In stretta collaborazione con Lawoon  Renuo ha sviluppato la piattaforma e la perfeziona costantemente
      techPartner   Partner di sviluppo
      title   A proposito di Lawoon

    addressSelector
      placeholder   Esempio  Via XX 45  8045 Zurigo

    adminUsers
      allUsers   Tutti gli utenti
      customerPhone   Tel  committente
      email   E mail
      name   Nome
      signInAs   Effettua il login

    adminWorks
      actions   Actions
      assignMyself   assign myself
      callClient   Call the client
      clientContacts   Client Contacts
      createdAt   Created At
      deleteDraft   Delete Draft
      email   E Mail
      job   Job
      jobsModeration   Jobs Moderation
      moderate   Moderate
      moderateJob   Moderate job
      moderationComments   Moderation comments
      name   Name
      notAssigned   Not assigned
      phoneNumber   Phone Number
      publish   Publish
      saveDraft   Save Draft

    archivedWorkDetail
      noArchivedOffers   Non avevi offerte

    authentication
      errors
        acceptAgbs   Devi accettare le Condizioni generali di contratto
        invalidEmail   Inserisci un indirizzo e mail valido
        noPassword   Inserisci una password
        shortPassword   La password deve essere composta da almeno 8 caratteri

      loginSuccess   Login avvenuto con successo  Bentornato
      registrationSuccess   Registrazione avvenuta con successo  Benvenuti

    categorySelection
      descriptionCategory   Categoria principale
      descriptionSubcategory   Sottocategoria
      placeholderCategory   Seleziona categoria
      placeholderSubcategory   Seleziona sottocategoria

    chat
      messages
        contentPlaceholder   Il tuo messaggio
        customerTitle    committente
        deleteConfirm   Desideri veramente cancellare il messaggio
        submit   Invia messaggio
        title   Domande e risposte

      privateWorkChat
        helpText   Questa conversazione   visibile solamente per te e il destinatario

      publicWorkChat
        helpText   Tutti i messaggi sono visibili per tutti gli utenti registrati finch  l  incarico non   stato assegnato

      usageAgreement   I numeri di telefono e indirizzi e mail non sono consentiti nella chat  Le offerte devono essere fatte direttamente tramite il pulsante sopra indicato  Effettuare l  offerta   Non appena il committente ha accettato la tua offerta  ti forniamo i dati precisi come il nome  l  indirizzo  il numero di telefono  ecc

    collapsibleTalentInfo
      aboutLabel   Su di me
      hideDetails   Nascondi i dettagli
      serviceDescriptionLabel   Offro i seguenti servizi
      showDetails   Visualizza i dettagli

    completedWorkList
      profilesPerPage   Visualizzare profili per pagina
      title   Incarichi completati

    contractAddressDetails
      customer   Committente
      email   E mail
      phoneNumber   Numero di telefono
      talent   Talento
      title   Dettagli del contatto
      workPlace   Luogo di esecuzione

    costForm
      addCostItem   Aggiungi prezzo
      amount   Quantit
      cancel   Interrompi
      cost   Costi
      costBelowMinimum   L   importo minimo   di 20 CHF
      costEstimation   Stima del costo
      costIsInvalid   I costi inseriti non sono ancora validi
      costItemBelowMinimum   L  importo minimo   di 0 45 CHF
      costItems   Tempo aggiuntivo
      enterCostDescription   L  importo da te offerto non   fisso  Puoi modificare l  importo prima di inviare la fattura definitiva al cliente  Infatti pu  darsi che tu abbia bisogno di pi  o meno tempo
      enterFixCostDescription   L  importo da te offerto   fisso  Non puoi modificare l  importo prima di inviare la fattura definitiva al cliente
      fixedPrice   prezzo globale
      fixedRate   prezzo globale
      fixedRateInfo   Cosa si paga per il lavoro
      netHourlyRate   La tua tariffa oraria
      netHourlyRateInfo   Quanto guadagni all ora  senza IVA dei costi di servizio
      price   Prezzo
      submit   Aggiungi
      total   Costi
      workCostBelowMinimum   L  importo minimo   di 3 CHF

    costListing
      amount   Quantit
      amountOfServiceFee   Costi di servizio dell importo di   fee
      amountShort   Pz
      cost   Tempo
      subtotal   Subtotale
      timeRequired   Tempo di lavoro
      total   Totale
      vat   IVA
      vatShort     percent   IVA

    customerArchive
      details   Dettagli
      noArchivedWorksTitle   Ancora non hai degli incarichi archiviati
      workState
        canceled   Interrompere
        done   Eseguito


    customerBillDetail
      complaintHelp   Se la fattura non dovesse essere conforme a quanto concordato o non sei d accordo con la fattura  contatta il talento e trovate una soluzione  Se non dovessi riuscire a trovare una soluzione adeguata con il talento  contatta
      complaintLink   Lawoon
      definitiveCost   Costi totali    amount
      paymentMethodTitle   Pagherai con la seguente carta
      paymentMethodUnfold   Paga diversamente
      processingBillPayment   Il pagamento viene attivato
      receiptCreate   Accettare e pagare la fattura
      receiptCreatedError   Si   verificato un errore durante il pagamento  Si prega di contattare Lawoon per ulteriori informazioni o scegliere un altro metodo di pagamento
      receiptCreatedSuccess   Hai accettato la fattura con successo

    customerBills
      billedTotal   Somma totale
      costAdjusted    la somma totale   cambiata da quando   stata fatta l offerta
      details   Dettagli
      pendingBills
        one   Hai una fattura da attivare  5 giorni dopo aver presentato la fattura questa viene accettata automaticamente
        other   Hai   count   fattura da attivare  5 giorni dopo aver presentato la fattura queste vengono accettate automaticamente

      title   Fatture

    customerContractNew
      acceptOffer   Accettare offerta
      chooseTime   Seleziona uno degli orari proposti
      declineOffer   rifiuta
      declineSuccess   L offerta   stata rifiutata correttamente
      error   Si   verificato un errore
      reasonOtherTalent   Ho scelto un altro talento
      reasonToExpensive   Troppo costoso
      success   L offerta   stata accettata correttamente
      warning   Attenzione
      warningInfo   Se accetti l offerta  ti impegni ad effettuare il lavoro con le scadenze indicate

    customerContracts
      details   Dettagli   Contatti
      pendingContracts
        one   Hai un incarico in corso
        other   Hai   count   incarichi in corso

      title   Incarichi

    customerDashboard
      offer
        one     count   Offerta
        other     count   Offerte

      workState
        canceled   Interrompere
        done   Eseguito
        draft   Attendi lo sbloccaggio
        offering   Attendi offerte
        offeringWithOffers   Attendi accettazione offerta
        payment   Attendi pagamento
        rating   Attendi recensione
        running   Attendi completamento
        waitingForBill   Attendi fatturazione


    customerInvitationDetails
      archivedWarning   Avvertenza  Questo invito   cancellato e visibile solo a te
      backToOverview   Torna alla schermata generale
      delete   Scarica talento
      deleteConfirmation   Vuoi veramente scaricare il talento  Il talento non sar  pi  in grado di scrivere offerte  Questa operazione non pu  essere annullata
      edit   Modifica

    customerInvitations
      decline   Ritiro
      description   Qui trovi tutti i talenti che hai invitato a presentarti un offerta
      details   Dettagli
      inviteTalent
        description   Cerca talento e fatti mandare da questi un offerta
        title   Invita talento per presentare offerte

      status
        declinedByCustomer   Ritirato
        declinedByTalent   Invito per offerta rifiutato
        offer   Offerta ricevuta
        pending   Attendi risposta

      title   Talenti

    customerLandingpage
      description1   Su lawoon ch trovi professionisti e freelance dei settori artigianato  giardinaggio  pulizie  traslochi  informatica  grafica  finanze  marketing  formazione  sport  bellezza e molti altri  Qui puoi inserire il tuo incarico   che si tratti di lavori di imbiancatura  di pulizia o di supporto linguistico   rapidamente e gratuitamente e riceverai in breve tempo varie offerte  Scegli il meglio e concorda gli altri aspetti con chi si aggiudica l  incarico
      description2   Su lawoon ch non   determinante se tu inserisci il tuo incarico a scopo privato oppure per un  impresa e puoi inserire quanti incarichi vuoi  Non appena avrai trovato la manodopera adatta e una volta portato a termine un incarico  ti saranno addebitate le spese con accredito automatico a chi ha eseguito il lavoro  Cos  avrai pi  tempo per le cose che contano davvero nella vita  Prova subito
      descriptionHead   Cerchi un artigiano  un giardiniere o un elettricista  Ti serve aiuto con il computer o per la dichiarazione dei redditi  Su Lawoon sei proprio nel posto giusto
      title   Inserisci i tuoi incarichi su Lawoon
      title1   Inserisci incarico
      title2   Trova manodopera

    customerOfferDetail
      archivedOffers   Offerte archiviate
      noOffersForPrivateWork   Non hai offerte alle quali devi rispondere  Questo non   un incarico pubblico  Hai invitato talenti per ricevere offerte
      noOffersForPublicWork   Non hai offerte alle quali devi rispondere  Puoi anche invitare direttamente talenti per offrire  per ricevere delle offerte

    customerOffers
      details   Dettagli
      pendingOffers
        one   Non hai offerte in corso alle quali devi rispondere
        other   Hai   count   offerte in corso  alle quali devi rispondere

      title   Offerte
      total   Somma totale

    customerOnboarding
      createWork   Crea incarico
      createWorkIntro   Hai gi  un progetto che vorresti aver gi  terminato o dove hai bisogno di aiuto  Crea allora l incarico in modo tale che i nostri talenti ti possano contattare
      searchTalents   Trova talento
      searchTalentsIntro   Il tuo progetto si trova ancora nella fase di pianificazione  Ancora non sei sicuro sulle qualifiche che devono avere i tuoi talenti  Allora consulta prima la nostra banca dati di talenti
      welcomeMessage   Il tuo account   stato creato con successo  Benvenuto su Lawoon

    customerPublicAnnouncements
      details   Dettagli
      pendingPublicAnnouncements
        one   Hai un incarico pubblico
        other   Hai   count   incarichi pubblici

      title   Incarichi pubblici

    customerRating
      alreadyRated   Hai gi  valutato la collaborazione
      back   Indietro
      ratingSuccess   Successo  La tua valutazione   stata recapitata
      sendRating   Invia segnalazione

    customerReceiptDetail
      backToArchive   Torna alla schermata generale
      backToReceipts   Torna alla schermata generale
      printBill   Versione stampa
      ratingCreate   Valuta ora il talento
      ratingExplanation   Ancora non hai valutato il talento per questo incarico

    customerReceipts
      linkToBill   Fattura
      loadMore   Carica altri
      noReceiptsYet   Ancora non hai degli incarichi conclusi
      totalCost   Costi totali    amount
      workWasDone   Incarico effettuato il

    customerWorkDetail
      deleteConfirmation   Desideri veramente cancellare l incarico  Vengono poi rifiutate automaticamente tutte le offerte in entrata  Questa operazione non pu  essere annullata
      deleteWork   Cancella incarico
      editWork   Adatta incarico
      noInvitationsYet   Ancora non hai invitato talenti

    customerWorkEdit
      cancel   Interrompi
      error   Si   verificato un errore  Riprova pi  tardi
      submit   Salva
      success   Le modifiche sono state salvate
      title   Modifica incarico

    customerWorkModerate
      cancel   Cancel
      error   An error has occurred  Please try again later
      submit   Save
      success   Your changes have been saved
      title   Amend job

    customerWorksList
      createWork   Crea incarico
      noInvitationsWarning   Ancora non hai invitato talenti
      noPendingWorksMessage   Hai gi  un progetto che vorresti aver gi  terminato o dove hai bisogno di aiuto  Crea allora l incarico in modo tale che i nostri talenti ti possano contattare
      noPendingWorksTitle   Ancora non hai degli incarichi in corso
      workOverview   Panoramica degli incarichi

    dashboard
      privateWork   incarico privato
      tabs
        archived   Archiviato
        pending   Attuale


    emailEdit
      currentPassword   Password attuale
      email   Nuovo indirizzo e mail
      responseError   Si   verificato un errore  L indirizzo e mail non   stato modificato    possibile che la tua password attuale sia errata
      submit   Salva
      success   Indirizzo e mail modificato con successo
      title   Modifica indirizzo e mail

    footer
      aboutLawoon   A proposito di Lawoon
      contact   Contatto
      faq   Domande frequenti
      jobs   Jobs
      linksCaption   Questo   Lawoon
      terms   Aspetti giuridici

    forbidden
      helpText   Non hai nessun accesso a questa risorsa
      title   Stop

    home
      advantages
        competentTalentCaption   Talenti competenti ed affidabili
        competentTalentDescription   I nostri talenti sono dei professionisti e persone che svolgono un secondo lavoro  che si impegnano sempre per eseguire il tuo ordine in modo impeccabile  I nostri talenti sono puntuali  affidabili e sottoposti a regolari controlli
        guaranteedOfferCaption   Offerta garantita entro poche ore
        guaranteedOfferDescription   Gi  poche ore dopo aver effettuato l ordine ricevi diverse offerte interessanti e non vincolanti  Accetta l offerta che preferisci e fai eseguire il tuo ordine
        satisfactoryPaymentCaption   Pagamento solamente con prestazione soddisfacente
        satisfactoryPaymentDescription   Dopo che l ordine   stato effettuato in modo completamente soddisfacente  devi solo accettare la fattura e poi puoi metterti comodo  Se qualcosa non dovesse andare come ti eri immaginato  noi siamo lieti di occuparcene
        title   In questo modo facilitiamo la tua vita

      knownFrom   conosciuto da
      ourPartners   Nostri partner
      process
        customer
          createWork   Crea incarico
          createWorkDescription   Con pochi clic puoi piazzare un incarico su Lawoon  Puoi rendere l incarico pubblico  in modo tale che i talenti interessati possano inviarti immediatamente un offerta o invita subito da solo il tuo talento desiderato per l incarico  Normalmente ricevi le prime offerte gi  dopo poche ore
          payment   Pagamento semplice
          paymentDescription   Dopo aver accettato la fattura del talento  l importo ti verr  addebitato sulla carta di credito e il compenso sar  versato direttamente al talento  Hai ancora la possibilit  di valutare il talento
          selectOffer   Seleziona offerta
          selectOfferDescription   Scegli l offerta adatta
          start   Crea incarico
          title   Hai un incarico che deve essere eseguito
          workPending   L incarico viene eseguito
          workPendingDescription   Il talento selezionato effettuer  il tuo incarico al momento stabilito

        talent
          doWork   Eseguire lavoro
          doWorkDescription   La tua offerta   stata accettata ed esegui il lavoro al momento stabilito
          findWork   Trova incarico
          findWorkDescription   Iscriviti come talento su Lawoon e candidati per delle interessanti offerte o aspetta che un committente ti inviti per un lavoro
          getPaid   Farsi pagare
          getPaidDescription   Dopo massimo 5 giorni lavorativi il tuo compenso sar  sul tuo conto corrente
          start   Diventa ora talento
          title   In questo modo puoi guadagnare facilmente denaro come talento
          writeBill   Emettere fattura
          writeBillDescription   Incarico eseguito    Rilascia la fattura finale  Qui hai la possibilit  di addebitare le spese impreviste  come per es  i costi di materiale e le ore straordinarie
          writeOffer   Scrivere offerta
          writeOfferDescription   Scrivi un offerta al committente e forse riceverai presto un nuovo incarico

        title     semplicissimo

      teaser
        goOrder   Crea incarico
        goTalent   Diventa un talento
        subtitle   Il Mercato Svizzero per mediazioni di ordini
        title   Lawoon   lascia fare

      testimonials
        testimonialFirst
          mention   Gestione veloce e semplice dei piccoli ordini   dalla raccolta delle liste di indirizzi fino ai lavori di grafica
          signatureName   Dariush Daftarian
          signaturePosition   Partner cdg consulenze

        testimonialSecond
          mention   Incarichi semplici  servizio sensazionale e completamento ottimale dell incarico  Lawoon ha superato le nostre aspettative gi  molte volte   per questo lo riutilizzerei in qualsiasi momento
          signatureName   Alain Friedrich
          signaturePosition   Luzern

        testimonialThird
          mention   Ho gi  fatto eseguire diversi lavori con Lawoon   montaggio di mobili e lampade e con Lawoon ho addirittura ordinato il catering per il matrimonio  La piattaforma   strutturata molto bene e in modo semplice    sufficiente mettere l ordine e in breve tempo arriveranno delle offerte interessanti  Felice di poterlo riutilizzare in qualsiasi momento
          signatureName   Fabienne Reiter
          signaturePosition   BÃ¤retswil

        title   Testimonianze


    imprint
      about   Colophon
      toBeContinued   Seguire le informazioni

    lawoonCostListing
      amountWithVat   dell importo di
      amountWithoutVat   dell importo netto di
      percentageOfBill   12 5  della tua fattura
      total   Totale
      totalWithVat   Totale incl    vatRate   IVA
      vat   IVA

    login
      error   Si   verificato un errore
      notAuthorized   Indirizzo e mail o password errati
      resetPasswordSuccess   La password   stata modificata con successo  Effettua il login con la nuova password

    loginForm
      emailLabel   E Mail
      emailPlaceholder   E Mail
      noLogin   Ancora non hai un profilo
      passwordForgotten   Password dimenticata
      passwordLabel   Password
      passwordPlaceholder   Password
      register   Registrati
      signIn   Effettua l accesso

    metaData
      completedWorks
        description   Trova nuovi incarichi di lavoro  Lawoon genera e invia la fattura e garantisce il pagamento tempestivo  Registrati ora gratuitamente
        title   Incarichi completati

      customerLandingpage
        description   Inserisci i tuoi incarichi su Lawoon e trovi professionisti dei settori artigianato  giardinaggio  pulizie  traslochi  informatica  grafica  finanze  marketing  formazione  sport e bellezza
        title   Inserisci i tuoi incarichi su Lawoon

      default
        description   Il mediatore di lavoro facile  Registrati ora gratuitamente  Il modo pi  semplice per trovare la persona adatta per il lavoro giusto
        title   Lawoon   lascia fare

      jobs
        description   Finde jetzt neue ArbeitsauftrÃ¤ge  Lawoon generiert und verschickt die Rechnung und garantiert die rechtzeitige Bezahlung  Jetzt kostenlos registrieren
        title   Lawoon   Offene Stellen  Projektleiter

      talentLandingpage
        description   Lawoon ti aiuta a trovare nuovi incarichi di lavoro  Non importa se sei uno studente  un freelance o un professionista  crea il tuo profilo ora
        title   Creare un profilo su Lawoon

      talents
        description   Il modo pi  semplice per trovare la persona adatta per il lavoro giusto  Trova ora i talenti per il tuo incarico personalizzato
        title   Talenti Lawoon

      works
        description   Trova nuovi incarichi di lavoro  Lawoon genera e invia la fattura e garantisce il pagamento tempestivo  Registrati ora gratuitamente
        title   Incarichi Lawoon


    navbar
      blue
        browseAnnouncements   Trova incarichi
        browseTalents   Trova talento
        createWork   Crea incarico

      browseTalents   Trova talento
      customer
        profile   Profilo
        roleName   Io come committente
        tabSearchWorks
          archivedWorks   Giustificativi
          createWork   Crea incarico
          pendingWorks   Incarichi in corso
          terms   Aspetti giuridici

        talents   Cerca talento
        works   I miei incarichi

      lawoon   Lawoon
      right
        dashboard   La mia panoramica degli incarichi
        login   effettua l accesso
        logout   uscire

      talent
        browseAnnouncements   Cerca incarichi
        createWork   Crea incarico
        profile   Profilo
        roleName   Io come talento
        tabMyWorks
          bills   Fatture
          declinedOffers   Offerte rifiutate
          invitations   Inviti
          offers   Offerte
          onGoingOffers   Incarichi
          receipts   Giustificativi
          terms   Aspetti giuridici

        works   Il mio lavoro


    noConnection
      info   Connessione su Lawoon non riuscita
      reload   Ricarica la pagina

    notificationSettings
      dailySummary
        daily   Giornalmente
        description   Puoi farti inoltrare un riepilogo giornaliero con tutti gli incarichi aperti
        never   Mai
        title   Riepilogo giornaliero

      disabledWarning   Sei sicuro  In questo modo perdi degli avvenimenti importanti
      email   E mail
      keyMappings
        billPaid   La fattura   stata pagata
        billReminder   Promemoria per la creazione della fattura
        customerDeclinedOffer   L offerta   stata rifiutata
        newBill   La fattura   stata creata
        newContract   L offerta   stata accettata
        newInvitation   Nuovo invito
        newMessage   Nuovo messaggio
        newOffer   Nuova offerta
        workStartReminder   Promemoria dell inizio del lavoro

      noCustomerPhoneNumberError   Nel tuo profilo di committente non hai inserito un numero di cellulare
      push   Push
      pushHintHasApp   Le notifiche push vogliono essere direttamente sul tuo cellulare  anche se hai chiuso l  app
      pushHintHasNoApp   Acquista subito l  app mobile Lawoon e tieniti aggiornato con le notifiche push
      sms   SMS
      submit   Salva
      title   Notifiche
      updateError   Errore durante l aggiornamento delle impostazioni
      updateSuccess   Impostazioni salvate
      workSuggestions
        descriptionInterval   Non appena viene creato un incarico nelle tue categorie da te selezionate riceverai una notifica  Seleziona quante volte vuoi ricevere le notifiche
        descriptionSubcategories   Quali categorie ti interessano
        interval
          daily   Giornalmente
          immediate   Subito
          never   Mai

        title   Avvincenti incarichi per te


    notifications
      noMessagesYet   Ancora non hai notifiche

    offerAcceptModal
      accept   Accettare offerta
      cancel   Interrompi
      text   Accettare offerta
      title   Desideri veramente accettare questa offerta

    offerDeclineModal
      cancel   Interrompi
      decline   Rifiutare offerta
      errorMessage   Inserisci un motivo
      otherReason   Altro motivo
      otherReasonPlaceholder   Cosa non andava bene nell offerta
      title   Motivo per il rifiuto

    offerShow
      hideDetails   Nascondi i dettagli
      offerText   Informazioni di dettaglio
      offered   Offerto    amount
      possibleTimes   Il talento ti ha dato la seguente scelta per effettuare l incarico
      showDetails   Visualizza i dettagli
      workIsDoneOn   Il lavoro viene eseguito al seguente orario
      workPlace   Luogo di esecuzione

    pageNotFound
      description   Non   stato possibile aprire la pagina desiderata
      title   404  Pagina non trovata

    pagination
      first
      last
      next
      previous

    passwordEdit
      currentPassword   Password attuale
      description   Le password con tanti segni sono pi  sicure rispetto a quelle pi  brevi
      password   Nuova password
      passwordConfirmation   Nuova password  inserimento di sicurezza
      responseError   Si   verificato un errore  La password non   stata modificata    possibile che la tua password attuale sia errata
      submit   Salva
      success   Password modificata con successo
      title   Modifica password

    passwordForgotten
      description   Ripristina la password inserendo l indirizzo e mail
      emailPlaceholder   Il tuo indirizzo e mail
      error   Si   verificato un errore  Riprova di nuovo
      modalTitle   Password dimenticata
      navigateToLogin   Vai al login
      resetInstructions   Riceverai una e mail con un link all indirizzo inserito con il quale potrai ripristinare la tua password
      submit   Ripristina password

    passwordReset
      modalTitle   Inserisci nuova password
      passwordConfirmationPlaceholder   Ripeti nuova password
      passwordPlaceholder   Nuova password
      resetFailed   Si   verificato un errore  La password non   stata ripristinata  Riprova di nuovo
      submit   Ripristina password

    passwordValidator
      invalidConfirmation   Le password non corrispondono
      invalidLength   La password deve essere composta da almeno 8 caratteri

    payment
      bankAccount
        bankAccountForm
          accountName
            label   Conto corrente intestato a
            missing   Inserisci una nome
            placeholder   Mario Rossi

          iban
            label   IBAN
            missing   Inserisci un IBAN svizzero valido
            placeholder   CH93 0076 2011 6238 5295 7
            wrongFormat   Inserisci un IBAN svizzero valido

          submit   Registrare i dati bancari
          updatedSuccessful   I dati bancari sono stati aggiornati
          updatedUnsuccessful   Si   verificato un errore durante l aggiornamento dei dati bancari


      paymentMethods
        dialog
          description   Inserire il metodo di pagamento
          name   Lawoon
          panelLabel   Registrare carta

        endingWith   termina con
        errors
          missingPaymentMethod   Devi selezionare un metodo di pagamento

        explanation   Per saldare in modo semplice le fatture   necessario registrare un metodo di pagamento  Naturalmente non autorizziamo addebiti sulla tua carta di credito senza il tuo consenso
        privacyInformation   I tuoi dati vengono trasmessi codificati tramite un prestatore di servizi terzo certificato
        storePaymentMethod   Registrare nuovo metodo di pagamento
        title   Il tuo metodo di pagamento

      stripe
        authorize
          connected   Connessione effettuata
          connecting   La connessione   in corso
          retry   Riprova
          serverError   Si   verificato un errore non identificato
          stripeError   Si   verificato un errore  Non   stato possibile realizzare e connettere lo Stipe Account
          title   Aggiornare i dati bancari

        connect
          button   Registrare i dati bancari con l ausilio di Stripe
          connected   Account gi  collegato
          defaultProductDescription   Io sono un Lawooner
          refreshTalentBankAccount   Aggiornare i dati bancari

        explanation   Per poter saldare le fatture in modo semplice   necessario registrare un conto corrente affinch  Lawoon possa versarti il denaro


    print
      title   Versione stampa

    privacy
      dataPrivacyStatement   Informativa sulla tutela dei dati personali
      toBeContinued   Seguire le informazioni

    profilePictureComponent
      altText   Immagine del profilo
      professionalBadgeText   Professionista

    profileSettings
      title   Impostazioni

    profileSubnavbar
      account   Account
      notifications   Notifiche
      payment   Metodo di pagamento
      talent   Profilo talento
      user   Profilo utente

    publicAnnouncementFilter
      newestEntries   Registrazioni pi  recenti
      oldestEntries   Registrazioni pi  vecchie
      operationPlace   o nei pressi di
      showOnlyOpenAnnouncements   Mostrare solo incarichi aperti
      sortBy   Ordinare secondo

    publicWorkList
      filter   Filtra incarichi
      lawoonAdButton   Crea incarico
      lawoonAdText   Hai un incarico che deve essere eseguito
      next   Avanti
      noWorksFound   Nessun incarico trovato
      profilesPerPage   Visualizzare profili per pagina
      title   Cerca incarichi
      writeOffer   Scrivere offerta

    quickAction
      adminPanel   Admin Dashboard
      customer
        roleName   Profilo committente

      logout   Disconnettiti
      settings   Impostazioni
      talent
        roleName   Profilo talento


    receiptList
      title   Fatture   Giustificativi

    regionSelector
      invalidSelection   Selezionare dalla lista
      placeholder   Indica la localit

    register
      error   Si   verificato un errore  Assicurati che la tua password sia lunga almeno 8 caratteri o seleziona un indirizzo e mail che ancora non viene utilizzato
      notAuthorized   E mail gi  presente

    registration
      alreadyHaveLogin   Hai gi  un profilo
      createAccount   Crea account
      emailLabel   E Mail
      emailPlaceholder   E Mail
      login   Effettua l accesso
      passwordLabel   Password
      passwordPlaceholder   Password
      registration   Registrati

    selectedTalentList
      invite   Invita ora
      noSelectedTalentsInfo   Ancora non hai selezionato talenti da invitare
      remove   Rimuovi

    subcategorySelection
      allCategories   Tutti
      descriptionCategories   Categorie principali
      descriptionSubcategories   Sottocategorie
      exampleDescription
        subcategory10   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory11   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory12   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory2   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory3   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory4   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory5   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory6   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory7   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory8   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
        subcategory9   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima

      exampleTitle
        subcategory10   per es  Pulizia dell appartamento
        subcategory11   per es  Pulizia dell appartamento
        subcategory12   per es  Pulizia dell appartamento
        subcategory2   per es  Pulizia dell appartamento
        subcategory3   per es  Pulizia dell appartamento
        subcategory4   per es  Pulizia dell appartamento
        subcategory5   per es  Pulizia dell appartamento
        subcategory6   per es  Pulizia dell appartamento
        subcategory7   per es  Pulizia dell appartamento
        subcategory8   per es  Pulizia dell appartamento
        subcategory9   per es  Pulizia dell appartamento


    submitButton
      formInvalid   Compila i campi vuoti o non validi
      label   Invia

    successStory
      customerRating   Recensione del committente
      finishedSince   Conclusa   days   giorni fa
      showLess   Di meno
      showMore   Di pi
      showTalentProfile   Visualizza il profilo del talento

    supportBox
      email   info lawoon com
      greeting   Salve  Sono Nathalie
      howToHelp   Hai domande o posso aiutarti registrare il tuo profilo utente
      openingHours   Sono a tua disposizione dal lunedi al venerdi  dalle 8 00 alle 17 00
      phoneNr    41 44 687 19 19
      title   Supporto

    tabSubnavbar
      bill   Fattura
      invitations   Talenti
      offers   Offerte
      overview   Panoramica
      rating   Valutazione
      users   All Users
      works   Jobs Moderation
      yourOffer   La tua offerta

    talentArchive
      details   Dettagli
      noPendingWorksTitle   Ancora non hai degli incarichi archiviati
      workFlowStatus
        declinedInvitation   Invito ritirato
        declinedOffer   L offerta   stata rifiutata
        receipt   Terminato


    talentBillDetail
      connectToBankAccount   Ancora non possiamo versarti del denaro
      connectToBankAccountInfo   Devi prima inserire i tuoi dati bancari prima di emettere una fattura
      createBill   Creare fattura
      edit   Adeguare fattura
      noBillCreatedYet   Ancora non hai emesso una fattura per questo incarico
      notAbleToCreateBillYet   Ancora non puoi emettere una fattura per questo incarico

    talentBillEdit
      billCreatedError   Durante l emissione della fattura si   verificato un errore
      billCreatedSuccess   La fattura   stata creata correttamente
      billUpdatedError   Si   verificato un errore
      billUpdatedSuccess   La fattura   stata aggiornata correttamente
      cancel   Interrompi
      createSubmit   Inviare
      createTitle   Crea fattura
      editSubmit   Salva
      editTitle   Modifica fattura
      offeredTotal   Costi totali

    talentBills
      amountForYou   Di cui a tuo favore
      billedTotal   Somma totale
      details   Dettagli
      pendingBills
        one   Hai una fattura che deve essere accettata dal cliente  5 giorni dopo aver presentato la fattura questa viene accettata automaticamente
        other   Hai   count   fatture che devono essere accettate dal cliente  Le fatture vengono accettate automaticamente dopo 5 giorni dalla presentazione

      title   Fatture

    talentBrowse
      costsPerHour   all ora
      details   Mostra di pi
      invite   Richieste
      lawoonAdButton   Diventa ora talento
      lawoonAdText   Vuoi anche diventare un talento
      profilesPerPage   Visualizzare profili per pagina

    talentContracts
      detailLinkText   Dettagli   Fattura
      noPendingContracts   Non hai incarichi in corso
      pendingContracts
        one   Hai un incarico in corso
        other   Hai   count   incarichi in corso

      title   I miei incarichi

    talentDashboard
      details   Dettagli
      workFlowStatus
        bill   Attendi pagamento
        contract   Esegui
        contractDone   Attende fatturazione
        declinedInvitation   Invito ritirato
        declinedOffer   L offerta   stata rifiutata
        offer   Attendi accettazione offerta
        receipt   Terminato
        workInvitation   Attende offerta


    talentDeclinedOfferDetail
      backToOverview   Torna alla schermata generale
      reason   Motivo

    talentDeclinedOffers
      amountForYou   Di cui a tuo favore
      billedTotal   Somma totale
      declinedOffersCount
        one   Hai un offerta rifiutata
        other   Hai   count   offerte rifiutate

      details   Dettagli
      title   Offerte rifiutate

    talentFilter
      allQualifications   Tutti
      location   O nei pressi di
      nonprofessional   Persone che svolgono un secondo lavoro
      professional   Professionista
      professionalHint   persona e societ  esaminate e certificate
      qualification   Qualificazione
      search   Cerca
      searchPlaceholder   Esempio  Pittore

    talentLandingpage
      description1   Ora redigi il tuo profilo indicando la tua specializzazione   artigianato  giardinaggio  pulizie  traslochi  informatica  grafica  finanze  marketing  formazione  sport o bellezza
      description2   I committenti possono scriverti direttamente oppure puoi proporti per incarichi aperti  Crea le tue offerte personalizzate e riceverai molti nuovi incarichi
      description3   Ci occupiamo noi della fatturazione e del trasferimento del denaro a lavoro eseguito con buon esito  Per evitare lo stress dopo una giornata di lavoro
      descriptionHead   Su lawoon ch ti aiutiamo a trovare nuovi incarichi  Che tu sia studente  freelance o un tecnico specializzato  Ci  che conta   il tuo talento nel settore nel quale proponi la tua collaborazione
      title   Crea ora un profilo e ricevi i tuoi primi incarichi
      title1   Crea profilo
      title2   Ricevi incarichi
      title3   Pagamento garantito

    talentList
      filter   Filtra talenti
      noResultsHint   Se rendi il lavoro pubblico i talenti possono trovarti
      noTalentsFound   Nessun talento trovato
      talentAddedHint   Il talento   pronto per essere invitato  Seleziona altri talenti e invia l invito che si trova in alto
      title   Cerca talento

    talentOfferDetail
      createOffer   Crea offerta
      deleteOffer   Cancella offerta
      edit   Adatta offerta
      offerDeletedSuccessful   L offerta   stata cancellata
      offerText   Informazioni di dettaglio
      reasonChangedMyMind   Ho cambiato idea
      reasonNoTime   Sono impedito

    talentOfferEdit
      cancel   Interrompi
      error   Si   verificato un errore
      success   Le modifiche sono state salvate con successo
      title   Elabora offerta
      updateOffer   Salva

    talentOfferList
      details   Visualizza dettagli
      pendingOffers
        one   Hai un offerta non senza risposta
        other   Hai   count   offerte senza risposta

      title   Offerte senza risposta

    talentOfferNew
      addItem   Aggiungi prezzo
      addItemError   Immissione non valida  Inserisci una descrizione  un prezzo e una quantit
      answerFollowingQuestions   Intervista
      answerPlaceholder   La tua risposta
      cancel   Interrompi
      chooseTimeInfo   Scegli in modo vincolante quando effettuerai il lavoro
      costItemDescritpionPlaceholder   Esempio  Spese di viaggio
      createOffer   Crea offerta
      detailInfos   Qui puoi fornire ulteriori informazioni al committente  opzionale
      detailInfosPlaceholder   per es  devo ordinare altri due pneumatici
      offeredTotal   Costi totali offerti
      selectDateTime   Seleziona l ora
      selectWorkPlace   Seleziona un luogo per effettuare l incarico
      sendOffer   Invia offerta
      submitError   Si   verificato un errore
      submitSuccess   L offerta   stata creata correttamente
      yourEffort   Il tuo tempo

    talentOnboarding
      searchPublicAnnouncements   Trova incarichi
      searchPublicAnnouncementsIntro   Vuoi trovare subito degli incarichi e cominciare con il lavoro  Allora sfoglia un po  tra gli annunci
      welcomeMessage   Il tuo account   stato creato con successo  Benvenuto su Lawoon

    talentProfileBankAccountEdit
      title   Modifica i dati bancari

    talentProfileCurrentStep
      back   Indietro
      beforeUnloadAlert   Le tue modifiche non saranno salvate se abbandoni la pagina
      step   Crea profilo   Passaggio   step   di 2

    talentProfileEdit
      error   Si   verificato un errore
      save   Salva
      title   Modifica profilo
      updateSuccessful   Le modifiche sono state aggiornate correttamente

    talentProfileMisc
      address   Indirizzo
      iCompensateVat   Sono assoggettato a IVA
      mobileNumber   Numero cellulare
      mobileNumberPlaceholder   Esempio   41 79 111 11 11
      selectPlaceHint   Inserisci via  numero civico e localit
      vatNumber   Partita IVA
      vatNumberInfo   Inserisci la tua partita IVA
      vatNumberPlaceholder   Esempio  CHE 123 456 789
      vatRate   Aliquota IVA
      vatRateInfo   Inserisci la tua aliquota  In Svizzera   normalmente di 7 7

    talentProfilePersonalInfo
      cancelRegistration   Interrompi
      companyDetailsMissing   Inserire il numero d identificazione delle imprese  IDI  o il sito web della propria azienda
      companyName   Nome azienda  opzionale
      companyNamePlaceholder   Esempio  Maestro di pittura
      companyUidRegisterNumber   Numero d identificazione delle imprese  IDI
      companyUidRegisterNumberPlaceholder   Esempio  CHE 492 117 729
      createProfileInfo   Crea un profilo completamente gratuito e assolutamente non vincolante su Lawoon
      editProfilePicture   Modifica foto profilo
      errorPhoto   Carica una foto profilo
      errors
        missingAttributes   Compila i campi vuoti o non validi e assicurati di aver caricato una foto profilo

      firstName   Nome
      firstNamePlaceholder   Esempio  Max
      iAmAProfessional   Sono un professionista
      iAmAProfessionalInfo   Il talento fornisce la prestazione come sua principale attivit  professionale  ha alle spalle una formazione completa nel settore e anche anni di esperienza professionale
      lastName   Cognome
      lastNameInfo   Sul profilo pubblico mostriamo solamente il tuo nome
      lastNamePlaceholder   Esempio  Maestro
      maxFilesize   Massimo 10MB
      profilePicture   Foto di profilo
      profileVisibility   Nascondi il mio profilo
      profileVisibilityInfo   In questo modo il tuo profilo non   pi  visibile per committenti
      saveAndContinue   Salva e continua
      serviceDescription   Quali servizi offri
      serviceDescriptionPlaceholder   per es    Pulizie di cucine  bagni e soggiorni
      tellSomethingAboutYou   Raccontaci qualcosa su di te
      tellSomethingAboutYouPlaceholder   Esempio  Ho otto anni di esperienza professionale come pittore e cos  via
      uploadProfilePicture   Carica foto di profilo
      website   Sito web  opzionale
      websitePlaceholder   Esempio  https   example com

    talentProfileQualification
      createError   Si   verificato un errore
      createProfile   Crea profilo
      createSuccess   Il tuo profilo talento   stato creato con successo  Puoi completare il tuo profilo nelle impostazioni
      education   Formazione  opzionale
      educationPlaceholder   Esempio  2005 2009  apprendistato da pittore con attestato professionale federale
      experience   Esperienza professionale  opzionale
      experiencePlaceholder   Esempio  2009 ad oggi  direzione come maestro di pittura
      projectPlaceholder   Esempio  2010 2011  collaborazione con Prime Tower
      projectPortfolio   Incarichi di referenza  opzionale
      title   Esperienza professionale  opzionale
      titleInfo   I talenti di maggior successo su Lawoon completano i loro profili con la loro esperienza professionale e ricevono quindi pi  incarichi

    talentPublicShow
      aboutLabel   Su di me
      qualification
        education   Formazione
        experience   Esperienza professionale
        projectPortfolio   Incarichi di referenza

      serviceDescriptionLabel   Offro i seguenti servizi

    talentRating
      continue   Non fornire una valutazione
      sendRating   Invia segnalazione

    talentRatings
      noComment    senza commento
      ratings   Recensioni

    talentReceipt
      back   Torna alla schermata generale
      billNumber   Fattura nr    referenceNumber
      paid   L importo   stato gi  saldato
      print   Stampa fattura
      vat   N  IVA

    talentReceiptDetail
      backToReceipts   Torna alla schermata generale
      linkToBillCustomer   Fattura al committente
      linkToBillLawoon   Fattura di Lawoon

    talentReceiptLawoon
      billNumber   Fattura nr    referenceNumber
      introduction   Per il nostro servizio di intermediazione addebitiamo i nostri costi di servizio  Questi sono stati conteggiati al committente e non detratti dal tuo salario di talento
      sender
        address   SÃ¤gereistrasse 9
        city   Schindellegi
        company   Lawoon AG
        vatNumber   CHE 492 117 729 PARTITA IVA
        zip   8834


    talentReceipts
      linkToBillCustomer   Fattura al committente
      linkToBillLawoon   Fattura di Lawoon
      loadMore   Carica altri
      noReceiptsYet   Ancora non hai degli incarichi conclusi
      totalCost   Costi totali    amount
      workWasDone   Incarico effettuato il

    talentRegistration
      alreadyHaveLogin   Hai gi  un profilo
      createAccount   Vai alla creazione profilo
      emailLabel   E Mail
      firstNameLabel   Nome
      firstNamePlaceholder   per es  Mario
      lastNameInfo   Sul profilo pubblico mostriamo solamente il tuo nome
      lastNameLabel   Cognome
      lastNamePlaceholder   per es  Rossi
      leaveRegistrationConfirmation   Abbandonare la registrazione
      login   Effettua l accesso
      passwordLabel   Password
      title   Crea profilo

    talentVisibilities
      privateDescription   Non sei visibile da nessuna parte sul portale  Devi candidarti autonomamente per degli incarichi
      privateTitle   Nascosto
      publicDescription   Il tuo profilo   visibile pubblicamente  Le possibilit  di essere trovato e ricevere degli incarichi aumentano
      publicTitle   Visibile pubblicamente

    talentWorkDetail
      acceptInvitation   Vuoi accettare l  offerta di lavoro
      deleteInvitation   Rifiuta invito
      deleteInvitationConfirmation   Sei sicuro di rifiutare l invito
      no   No
      yes   S

    talentWorksList
      noPendingWorksMessage   Cerca degli incarichi aperti e candidati con un offerta
      noPendingWorksTitle   Ancora non hai degli incarichi in corso
      searchWorks   Trova incarichi
      workOverview   Panoramica degli incarichi

    timeSelection
      addTime   Aggiungi orario
      date   Data
      noTimesSelected   Ancora non hai scelto un orario
      time   Orario

    timeSelectionForm
      addTime   Aggiungi orario
      cancel   Interrompi
      errorMessage
        invalid   Non hai selezionato una data valida
        notInFuture   La data selezionata   gi  passata


    unauthorized
      pleaseLogin   Accedi prima
      title   Accesso non effettuato

    userProfile
      description   Adatta i tuoi dati utente
      error   Si   verificato un errore  Le tue modifiche non sono state salvate
      save   Salva
      subtitle   Dati utente
      success   I tuo dati utente sono stati salvati con successo

    userProfileForm
      address   Indirizzo
      firstName   Nome
      firstNamePlaceholder   Esempio  Max
      lastName   Cognome
      lastNamePlaceholder   Esempio  Maestro
      phoneNumber   Numero di telefono
      phoneNumberPlaceholder   Esempio   41 79 876 54 32
      selectPlaceHint   Seleziona dalla lista via  numero civico e localit

    userProfileInput
      info   Completa le tuo informazioni di profilo in modo che il talento ti possa contattare
      title   Informazioni di profilo

    utils
      createdSince   Creato   durationString

    workAnswerListing
      answeredQuestions   Intervista

    workDescription
      estimatedWorkDuration   Tempo stimato
      referenceNumber   Nr  di rif
      workCategory   Categoria dell incarico
      workDescription   Descrizione dell incarico
      workLocation   Luogo di esecuzione
      workTimes   Possibili orari di esecuzione

    workForm
      isSpecificWorkPlace   Luogo di esecuzione  CAP   Localit
      isSpecificWorkPlaceInfo   Nessun luogo di esecuzione specifico
      isWorkPublic   Visibile pubblicamente
      isWorkPublicInfo   In questo modo l incarico diventa visibile e te riceverai pi  offerte
      pictureWarning   Attenzione  Le immagini vecchie vengono sovrascritte

    workNew
      addQuestion   Aggiungi domanda
      cancel   Interrompi
      deleteImage   Cancella
      errors
        missingSubcategory   Seleziona una categoria e una sottocategoria

      estimatedWorkDuration   Quanto dura all incirca il tuo incarico   come valore indicativo per i talenti
      hasTalentToBeAvailableAtSpecificTime   Il tuo talento deve essere disponibile a un determinato orario
      hornbach
        footer
          text   Die Plattform Lawoon ch  Plattform  wird durch die Firma Lawoon AG  CHE 492 117 729   SÃ¤gereistrasse 9  8834 Schindellegi betrieben  Lawoon AG ist ein von Hornbach unabhÃ¤ngiges Unternehmen  welches Auftraggebern und Dienstleistern eine Plattform fÃ¼r AuftrÃ¤ge verschiedenster Art zur VerfÃ¼gung stellt  Die Nutzung der Plattform bestimmt sich nach den Allgemeine Vertragsbedingungen der Lawoon AG  www lawoon com terms   Hornbach haftet in keiner Weise fÃ¼r die Dienstleistungen  die Ã¼ber Plattform bezogen werden
          title   Rechtliches

        title   Lawoon   un partenaire de Hornbach

      imOnlyAvailableAtSpecificTimeCheckbox   S   cerco qualcuno a un determinato orario
      infoNote   I numeri di telefono e gli indirizzi e mail non sono consentiti nella descrizione dell incarico  Non appena avrai accettato un  offerta da parte di un talento  gli verranno forniti i tuoi dati di contatto et viceversa
      introduction   Riceverai in modo assolutamente non vincolante e gratuito offerte tramite Lawoon  Riempi semplicemente questo modulo e potrai cominciare
      invitationInfo   Dopo aver creato l incarico verr  spedito un invito al seguente talento  Successivamente potrai invitare anche altri talenti
      maxUploadSize   Massimo 10 MB per immagine
      phoneNumber   Numero di telefono
      phoneNumberPlaceholder   Esempio   41 79 111 11 11
      questionNotValid   Inserisci una domanda valida
      questionsToTheTalent   Domande al talento
      questionsToTheTalentPlaceholder   Esempio  Quanti anni di esperienza lavorativa hai
      selectPossibleTimes   Quando puoi terminare l incarico
      selectPossibleTimesHint   Se fai varie proposte  il committente deve scegliere un orario
      submit   Compila l incarico
      submitError   Si   verificato un errore
      submitSuccess   Il lavoro   stato creato correttamente e sar  sbloccato da Lawoon entro 24 ore
      submitSuccessWithInvitationHint   Non dimenticare di invitare i talenti
      termsCheckbox   CGC
      termsCheckboxInfo1   S   ho letto le
      termsCheckboxInfo2   CGC
      termsCheckboxInfo3   e le accetto
      timeAndQuestions   Orario e domande  opzionale
      title   Crea incarico
      uploadPlaceholder   Carica immagini  opzionale
      whatHasToBeDone   Cosa deve essere fatto di preciso
      whatHasToBeDonePlaceholder   per es  Pulizia di cucine  bagni e soggiorni L appartamento   grande 67mq  Dovrebbe essere pulito la settimana prossima
      workTitle   Descrizione dell incarico
      workTitlePlaceholder   per es  Pulizia dell appartamento

    workRating
      comment   Motiva la tu recensione  opzionale
      commentPlaceholder   Esempio  Il lavoro   stato effettuato cos  come richiesto e in modo accurato  Il talento ha per  impiegato un po  di pi  rispetto a quanto offerto
      starRatingHint   Lascia una recensione sulla collaborazione con 1   5 stelle
      title   Valuta il talento

    workStateListItem
      archivedWarning   Incarico rifiutato
      delete   Rifiutare incarico
      deleteConfirmation   Desideri veramente rifiutare l incarico  Poi non potrai pi  scrivere offerte  Questa operazione non pu  essere annullata
      moreDates
        one      un altro
        other        count   altri

      showMore   Mostra di pi
      workAssigned   Incarico gi  assegnato


     until here

import   I18n   from    i18n

describe  I18n
  describe  t
    it  translates a simple value
      expect I18n t costListing cost  toEqual  Aufwand


    it  translates a nested value
      expect I18n t payment stripe authorize connected  toEqual  Verbindung hergestellt



  describe  tFromString
    it  translates a valid value
      expect I18n tFromString  payment stripe authorize connected    toEqual  Verbindung hergestellt



  describe  interpolate
    it  replaces passed params
      expect I18n interpolate  Translation with   param   and   param2   and   param      param   key   param2   key2
         toEqual  Translation with key and key2 and key


    it  ignores extra params
      expect I18n interpolate  Translation with no placeholder    param   key
         toEqual  Translation with no placeholder


    it  does not replace missing params with an empty string but leaves the placeholder
      expect I18n interpolate  Translation with   missing          toEqual  Translation with   missing



  describe  pluralize
    const translationParent    one   You have one translation   other   You have   count   translations

    it  returns other key of translation parent if length is 0
      expect I18n pluralize translationParent  0   toEqual  You have 0 translations
      expect I18n pluralize translationParent  2   toEqual  You have 2 translations
      expect I18n pluralize translationParent  3   toEqual  You have 3 translations


    it  returns one key of translation parent if length is 1
      expect I18n pluralize translationParent  1   toEqual translationParent one



import   BehaviorSubject   from  rxjs BehaviorSubject
import   Observable   from  rxjs Observable
import   LawoonTranslations   from    generated i18n interface
import   allTranslations   from    generated i18n translations

export class I18n
  static t  LawoonTranslations   allTranslations  de

  private static langSubject   new BehaviorSubject string   de

  static setLang lang  string
    I18n getLang   first   subscribe currentLang
      if  lang     currentLang    return
      I18n t   allTranslations lang
      I18n langSubject next lang



  static getLang    Observable string
    return I18n langSubject asObservable


  static tFromString translationKey  string   string
    return translationKey split
       reduce  current  any  part     current part   I18n t


  static interpolate translation  string  params    key  string   string    string
    return Object keys params  reduce  result  key     result split      key      join params key    translation


  static pluralize translationParent   one  string  other  string   count  number   string
    return I18n interpolate translationParent count     1    one     other     count  count toString


   App
export   from    app module
import   Subject   from  rxjs Subject

export interface GuinessCompatibleSpy extends jasmine Spy
  andReturn val  any   void
  andCallFake fn             GuinessCompatibleSpy
  reset    any


export class SpyObject
   key  string   any

  constructor private type  any   null
    if  type
      for  let elementIndex   0  elementIndex   type prototype length  elementIndex
        try
          this spyOn type  elementIndex
          catch  e
             As we are creating spys for abstract classes
             these classes might have getters that throw when they are accessed
             As we are only auto creating spys for methods  this
             should not matter





  private spyOn type  any  elementIndex  number
    const element   type prototype elementIndex
    if  typeof element      function
      this spy      elementIndex

    return element


  spy name  string   any
    if   this name
      this name    this  createGuinnessCompatibleSpy name

    return this name


  prop name  any  value  any    this name    value

  useOriginal methodName  string
    this methodName    this type prototype methodName


  subjectObservable name  string
    const sourceName      name Source
    this sourceName    new Subject any
    this    name       this sourceName  asObservable


  triggerSource sourceName  string  data  any
    this    sourceName Source   next data


      internal
   createGuinnessCompatibleSpy name  any   GuinessCompatibleSpy
    const newSpy  GuinessCompatibleSpy    any  jasmine createSpy name
    newSpy andCallFake    any  newSpy and callFake
    newSpy andReturn    any  newSpy and returnValue
    newSpy reset    any  newSpy calls reset
       revisit return null here  previously needed for rtts assert
    newSpy and returnValue null
    return newSpy



   tslint disable next line max classes per file
export class HttpSpyObject extends SpyObject
  fakeSuccessResponse  any
  fakeErrorResponse  any

  constructor type  any
    super type

    this fakeSuccessResponse   null
    this fakeErrorResponse   null


  subscribe callbackSuccess  any  callbackError  any
    if  this fakeSuccessResponse
      this handleFakeResponse callbackSuccess  callbackError
      else if  callbackSuccess
      callbackSuccess

    return  unsubscribe


  private handleFakeResponse callbackSuccess  any  callbackError  any
    if  callbackSuccess
      callbackSuccess this fakeSuccessResponse
      else if  callbackError
      callbackError this fakeErrorResponse

    this fakeSuccessResponse   null


  setResponseSuccess json  any   void
    this fakeSuccessResponse   json


  setResponseError json  any   void
    this fakeErrorResponse   json


import   TestBed   from   angular core testing
import   BaseRequestOptions  Headers  Http  Response  ResponseOptions   from   angular http
import   MockBackend  MockConnection   from   angular http testing

export class ResponseError extends Error
  status  number
  body  any
  headers  Headers


   tslint disable next line
export namespace HttpMockHelpers
   use strict

  export function setup    void
    beforeEach
      TestBed configureTestingModule
        providers
          BaseRequestOptions
          MockBackend

            provide  Http
            useFactory   backend  MockBackend  defaultOptions  BaseRequestOptions   Http    new Http backend  defaultOptions
            deps   MockBackend  BaseRequestOptions






  export function emptyHeaders    Headers
    return new Headers
       content Type    application json



  export function tokenHeaders    Headers
    return new Headers
       content Type    application json
       token type    Bearer
      uid   test test com
       access token    fJypB1ugmWHJfW6CELNfug
      client   5dayGs4hWTi4eKwSifu mg
      expiry   1472108318



  export function mockResponseSuccess mockBackend  MockBackend  data   any  status   number  headers   Headers   void
    mockBackend connections subscribe
       connection  MockConnection
        connection mockRespond new Response
          new ResponseOptions
            status  status    200
            body  data
            headers




  export function mockResponseError mockBackend  MockBackend  data   any  status   number  headers   Headers   void
    mockBackend connections subscribe
       connection  MockConnection
        const error   new ResponseError
        error body   data
        error status   status
        error headers   headers
        connection mockError error




export   from    helper mock
export   from    http mock
export   from    router mock
import   Event   from   angular router
import   ReplaySubject   from  rxjs ReplaySubject

export class MockRouter
  queryParams  any
  url  string
  events  ReplaySubject Event    new ReplaySubject Event

  constructor
    this queryParams   null


  setQueryParams params  any
    this queryParams   params


  mockEvent event  Event
    this events next event


  navigate
    return



   tslint disable next line max classes per file
export class MockActivatedRoute
  queryParams  any
  params
    subscribe   callback  any
      callback this queryParams



  constructor
    this queryParams   null


  setQueryParams params  any
    this queryParams   params


import   Duration   from    duration model

describe  Duration
  it  initializes with minutes
    const duration   new Duration 320
    expect duration hours  toBe 5
    expect duration minutes  toBe 20


  describe  getInMinutes
    it  returns the value in minutes
      const duration   new Duration
      duration hours   2
      duration minutes   20
      expect duration getInMinutes    toBe 140



  describe  minutes and hours setters
    let duration  Duration

    beforeEach
      duration   new Duration 3


    describe  set minutes
      it  sets the minutes
        expect duration minutes  toEqual 3


      it  rounds the minutes
        duration minutes   5 2
        expect duration minutes  toEqual 5


      it  sets minutes to zero if NaN is passed
        duration minutes   parseInt     10      this happens  if empty string is converted
        expect duration minutes  toEqual 0


      it  sets minutes to zero if undefined is passed
        duration minutes   undefined     this happens  if empty string is converted
        expect duration minutes  toEqual 0


      it  sets minutes to zero if number below 0 is passed
        duration minutes    1
        expect duration minutes  toEqual 0


      it  sets minutes to 59 if number greater than 59 is passed
        duration minutes   60
        expect duration minutes  toEqual 59



    describe  set hours
      it  sets the hours
        duration hours   3


      it  rounds the hours
        duration hours   4 2
        expect duration hours  toEqual 4


      it  sets hours to zero if NaN is passed
        duration hours   3
        duration hours   parseInt     10
        expect duration hours  toEqual 0


      it  sets hours to zero if undefined is passed
        duration hours   3
        duration hours   undefined
        expect duration hours  toEqual 0


      it  sets hours to zero if number below 0 is passed
        duration hours    1
        expect duration hours  toEqual 0




  describe  toTimeString
    it  returns only minutes if under an hour
      const duration   new Duration 59
      expect duration toTimeString    toBe  59min


    it  returns only hours if it is a full hour
      const duration   new Duration 60
      expect duration toTimeString    toBe  1h


    it  returns hours and minutes if both given
      const duration   new Duration 70
      expect duration toTimeString    toBe  1h 10min



export class Duration
   hours  number   0
   minutes  number   0

  constructor minutes  number   0
    this  minutes   minutes   60
    this  hours    minutes   this  minutes    60


  getInMinutes
    return this hours   60   this minutes


  get minutes    number
    return this  minutes


  set minutes minutes  number
    if   minutes    isNaN minutes     minutes   0
      this  minutes   0
      else
      this normalizedMinute minutes



  private normalizedMinute minutes  number
    const minutesAsInt   parseInt minutes toString    10
    this  minutes   minutesAsInt    60   59   minutesAsInt


  get hours    number
    return this  hours


  set hours hours  number
    if   hours    isNaN hours     hours   0
      this  hours   0
      else
      this  hours   parseInt hours toString    10



  toTimeString
    if  this minutes    0
      return    this hours h


    if  this hours    0
      return    this minutes min


    return    this hours h   this minutes min


import   Geolocation   from    geolocation model

describe  Geolocation
  it  is is possible to create a TalentQualification object
    const geolocation  Geolocation   new Geolocation
      city   ZÃ¼rich
      country   Switzerland
      latitude  85 738584
      longitude  39 3849493
      street   Gehrenholzstrasse 48
      zip   8055


    expect geolocation city  toEqual  ZÃ¼rich
    expect geolocation country  toEqual  Switzerland
    expect geolocation latitude  toEqual 85 738584
    expect geolocation longitude  toEqual 39 3849493
    expect geolocation street  toEqual  Gehrenholzstrasse 48
    expect geolocation zip  toEqual  8055


  describe  zipCity
    it  returns zip and city if both of them are filled out
      const geolocation  Geolocation   new Geolocation
        zip   8055
        city   ZÃ¼rich

      expect geolocation zipCity    toEqual  8055 ZÃ¼rich


    it  returns zip if city is undefined
      const geolocation  Geolocation   new Geolocation
        zip   8055

      expect geolocation zipCity    toEqual  8055


    it  returns city if zip is undefined
      const geolocation  Geolocation   new Geolocation
        zip   ZÃ¼rich

      expect geolocation zipCity    toEqual  ZÃ¼rich


    it  returns city if zip is undefined
      const geolocation  Geolocation   new Geolocation
        zip   ZÃ¼rich

      expect geolocation zipCity    toEqual  ZÃ¼rich


    it  returns undefined if neither zip nor city are undefined
      const geolocation  Geolocation   new Geolocation
      expect geolocation zipCity    toEqual



  describe  format
    it  returns rightly formatted address  if all params are given
      const geolocation  Geolocation   new Geolocation
        zip   8055
        city   ZÃ¼rich
        street   Gehrenholzstrasse 48
        country   Switzerland

      expect geolocation format    toEqual  Gehrenholzstrasse 48  8055 ZÃ¼rich  Switzerland


    it  returns rightly formatted address  if country is undefined
      const geolocation  Geolocation   new Geolocation
        zip   8055
        city   ZÃ¼rich
        street   Gehrenholzstrasse 48

      expect geolocation format    toEqual  Gehrenholzstrasse 48  8055 ZÃ¼rich


    it  returns rightly formatted address  if zipCity is undefined
      const geolocation  Geolocation   new Geolocation
        street   Gehrenholzstrasse 48
        country   Switzerland

      expect geolocation format    toEqual  Gehrenholzstrasse 48  Switzerland


    it  returns rightly formatted address  if street is undefined
      const geolocation  Geolocation   new Geolocation
        zip   8055
        city   ZÃ¼rich
        country   Switzerland

      expect geolocation format    toEqual  8055 ZÃ¼rich  Switzerland


    it  returns rightly formatted address  if there is only one given value
      const geolocation  Geolocation   new Geolocation
        zip   8055

      expect geolocation format    toEqual  8055


    it  returns rightly formatted address  if there is no value given value
      const geolocation  Geolocation   new Geolocation
      expect geolocation format    toEqual



  describe  hasMinAttributes
    let geolocation  Geolocation

    beforeEach
      geolocation   new Geolocation  country   switzerland   city   zurich


    it  returns true if country and city is present
      expect geolocation hasMinAttributes    toBe true


    it  returns false if country is missing
      geolocation country   undefined
      expect geolocation hasMinAttributes    toBe false


    it  returns false if city is missing
      geolocation city   undefined
      expect geolocation hasMinAttributes    toBe false



  describe  hasAllAttributes
    let geolocation  Geolocation

    beforeEach
      geolocation   new Geolocation  zip   8050   street   industriestrasse


    describe  hasMinAttributes is true
      beforeEach
        spyOn geolocation   hasMinAttributes   and returnValue true


      it  returns true if hasMinAttributes is true and zip and street is present
        expect geolocation hasAllAttributes    toBe true


      it  returns false if street is missing
        geolocation street   undefined
        expect geolocation hasAllAttributes    toBe false


      it  returns false if zip is missing
        geolocation zip   undefined
        expect geolocation hasAllAttributes    toBe false



    describe  hasMinAttributes is false
      beforeEach
        spyOn geolocation   hasMinAttributes   and returnValue false


      it  returns false if hasMinAttributes returns false
        expect geolocation hasAllAttributes    toBe false




import   extend   from  lodash

export interface IGeolocationOptions
  zip   string
  street   string
  city   string
  latitude   number
  longitude   number
  country   string


export class Geolocation
  zip   string
  street   string
  city  string
  latitude  number
  longitude  number
  country  string

  constructor options   IGeolocationOptions
    if  options
      extend this  options



  format
    return  this street  this zipCity    this country  filter x    x  join


  zipCity    string
    return  this zip  this city  filter x    x  join


     Needed to take out lat lnt because it s not always returned from the backend  so you would get errors on edit
  hasMinAttributes    boolean
    return   this country      this city


  hasAllAttributes    boolean
    return this hasMinAttributes        this zip      this street


export   from        api api
import   TimeDifferenceCalculator   from    time difference calculator

describe  TimeDifferenceCalculator
  describe  timeDifference
    it  returns difference in days of incomingDate to today
      const incomingDate   new Date 2013  9  21
      const calculator   new TimeDifferenceCalculator
      const baseTime   new Date 2013  9  23
      jasmine clock   mockDate baseTime
      expect calculator timeDifferenceToNow incomingDate   toEqual 2



export class TimeDifferenceCalculator
  timeDifferenceToNow date  Date   number
    const today   new Date
    const differenceInMilliseconds   today getTime     date getTime
    return Math floor differenceInMilliseconds    1000   60   60   24


export   from    helpers
export   from    talent model
export   from    talent qualification model
export   from    geolocation model
import   TalentQualification   from    talent qualification model

describe  TalentQualification
  it  is is possible to create a TalentQualification object
    const talentQualification  TalentQualification   new TalentQualification  isProfessional  true
    expect talentQualification isProfessional  toEqual true


export class TalentQualification
  readonly isProfessional  boolean

  constructor options   isProfessional  boolean
    this isProfessional   options isProfessional


import   User   from    user model

export class TalentRating
  id  number
  value  number
  comment  string
  createdAt  Date
  customer  User

import   I18n   from     i18n i18n
import   TalentVisibility   from    talent visibility model

describe  TalentVisibility
  it  is possible to create a TalentVisibility object
    const talentQualification  TalentVisibility   new TalentVisibility  isHidden  false
    expect talentQualification isHidden  toEqual false


  describe  name
    it  initializes the name for public
      expect new TalentVisibility  isHidden  false   name    toEqual I18n t talentVisibilities publicTitle


    it  initializes the name for non public
      expect new TalentVisibility  isHidden  true   name    toEqual I18n t talentVisibilities privateTitle



  describe  description
    it  initializes the description for public
      expect new TalentVisibility  isHidden  false   description
         toEqual I18n t talentVisibilities publicDescription


    it  initializes the description for non public
      expect new TalentVisibility  isHidden  true   description
         toEqual I18n t talentVisibilities privateDescription



  describe  iconClass
    it  initializes the symbol for public
      expect new TalentVisibility  isHidden  false   iconClass    toEqual  lw eye


    it  initializes the symbol for non public
      expect new TalentVisibility  isHidden  true   iconClass    toEqual  lw eye closed



import   I18n   from     i18n i18n

export class TalentVisibility
  readonly isHidden  boolean

  constructor options   isHidden  boolean
    this isHidden   options isHidden


  description
    return this isHidden
       I18n t talentVisibilities privateDescription   I18n t talentVisibilities publicDescription


  iconClass    string
    return this isHidden    lw eye closed     lw eye


  name    string
    return this isHidden   I18n t talentVisibilities privateTitle   I18n t talentVisibilities publicTitle


import   Subcategory   from     categories shared subcategory model
import   Geolocation   from    geolocation model
import   TalentQualification   from    talent qualification model
import   TalentVisibility   from    talent visibility model
import   Talent   from    talent model
import   User   from    user model

describe  Talent
  describe  serialization
    function talentInitializeWithAttributes attributes     id  string   any     Talent
      const talent  any   new Talent
      for  const attr of Object keys attributes
        talent attr    attributes attr

      return talent


    function userInitializeWithAttributes attributes     id  string   any     Talent
      const talent  any   new User
      for  const attr of Object keys attributes
        talent attr    attributes attr

      return talent


    function userWithAllAttributes
      return talentInitializeWithAttributes
        id  1
        user  userInitializeWithAttributes
          firstName   First
          lastName   Name

        serviceDescription   Description
        vatNumber   VAT3
        vatRate  0 03
        qualification  new TalentQualification  isProfessional  true
        visibility  new TalentVisibility  isHidden  false
        profilePictureUrl   https   pic
        companyName   Company
        companyUidRegisterNumber   CHE 102
        website   http   www
        about   About
        mobileNumber   079
        professionalExperience   Experience
        education   Education
        projectPortfolio   Projects
        netHourlyRate  40
        isLiableToVat  true
        rating  1
        address  new Geolocation
          street   Street
          zip   Zip
          city   City
          country   Country
          latitude  345
          longitude  123

        ratingQuantity  4
        subcategory  new Subcategory  Subcategory   id  5



    it  talentAttributes
      expect userWithAllAttributes   talentAttributes  1   service description  toEqual  Description
      expect userWithAllAttributes   talentAttributes  1   vat number  toEqual  VAT3
      expect userWithAllAttributes   talentAttributes  1   vat rate  toEqual 0 03
      expect userWithAllAttributes   talentAttributes  1   is professional  toEqual true
      expect userWithAllAttributes   talentAttributes  1   visible  toEqual true
      expect userWithAllAttributes   talentAttributes  1   user id  toEqual  1
      expect userWithAllAttributes   talentAttributes  1   profile picture url  toEqual  https   pic
      expect userWithAllAttributes   talentAttributes  1   company name  toEqual  Company
      expect userWithAllAttributes   talentAttributes  1   company uid register number  toEqual  CHE 102
      expect userWithAllAttributes   talentAttributes  1   website  toEqual  http   www
      expect userWithAllAttributes   talentAttributes  1   mobile number  toEqual  079
      expect userWithAllAttributes   talentAttributes  1   about  toEqual  About
      expect userWithAllAttributes   talentAttributes  1   latitude  toEqual 345
      expect userWithAllAttributes   talentAttributes  1   longitude  toEqual 123
      expect userWithAllAttributes   talentAttributes  1   professional experience  toEqual  Experience
      expect userWithAllAttributes   talentAttributes  1   project portfolio  toEqual  Projects
      expect userWithAllAttributes   talentAttributes  1   education  toEqual  Education
      expect userWithAllAttributes   talentAttributes  1   zip  toEqual  Zip
      expect userWithAllAttributes   talentAttributes  1   city  toEqual  City
      expect userWithAllAttributes   talentAttributes  1   address  toEqual  Street
      expect userWithAllAttributes   talentAttributes  1   country  toEqual  Country
      expect Object keys userWithAllAttributes   talentAttributes  1    length  toEqual 21


    it  userAttributes
      expect userWithAllAttributes   userAttributes   first name  toEqual  First
      expect userWithAllAttributes   userAttributes   last name  toEqual  Name


    describe  resets data
      let talent  Talent

      beforeEach
        talent   userWithAllAttributes


      it  sets company name to an empty string if its null
        talent companyName   null
        expect talent talentAttributes  1   company name  toEqual


      it  sets website to an empty string if its null
        talent website   null
        expect talent talentAttributes  1   website  toEqual


      it  sets the visibility to false if its null
        talent visibility    any   isHidden  true
        expect talent talentAttributes  1   visible  toEqual false


      describe  when not liable to vat
        beforeEach
          talent isLiableToVat   false


        it  sets the vat number to empty strint
          expect talent talentAttributes  1   vat number  toEqual


        it  sets the vat rate to zero
          expect talent talentAttributes  1   vat rate  toEqual 0



      describe  works  when no coordinates given
        beforeEach
          talent address   new Geolocation
            street   Street
            zip   Zip
            city   City
            country   Country



        it  sets the lat   latitude to undefined
          expect talent talentAttributes  1   latitude  toEqual undefined
          expect talent talentAttributes  1   longitude  toEqual undefined



      describe  when not professional it resets company details to empty string
        beforeEach
          talent qualification    any   isProfessional  false


        it  sets company register number to an empty string
          talent companyUidRegisterNumber    test
          expect talent talentAttributes  1   company uid register number  toEqual


        it  sets website to an empty string
          talent website    test
          expect talent talentAttributes  1   website  toEqual


        it  sets company name to an empty string
          talent companyName    test
          expect talent talentAttributes  1   company name  toEqual


        it  sets the company name to empty string  even if is given
          talent companyName   null
          expect talent talentAttributes  1   company name  toEqual





import   TalentUserApiCreateCustomerAttributes  TalentUserApiCreateTalentAttributes   from     api endpoints talent api interface
import   Subcategory   from     categories shared subcategory model
import   Geolocation   from    geolocation model
import   TalentQualification   from    talent qualification model
import   TalentVisibility   from    talent visibility model
import   User   from    user model

export class Talent
  id  number
  address  Geolocation     lat lng is not returned since now  so it s useless
  profilePictureUrl  string
  serviceTitle  string
  serviceDescription  string
  companyName  string
  companyUidRegisterNumber  string
  website  string
  about  string
  professionalExperience  string
  education  string
  projectPortfolio  string
  netHourlyRate  number
  mobileNumber  string
  isLiableToVat  boolean
  vatRate  number
  vatNumber  string
  rating  number
  ratingQuantity  number
  subcategory  Subcategory
  qualification  TalentQualification
  isConnectedToTalentBankAccount  boolean
  iban  string
  accountHolderName  string
  visibility  TalentVisibility
  user  User

  countryCode    string
    return  CH


  currency    string
    return  chf


     TODO  split up this function to lower the complexity of it
     tslint disable next line
  talentAttributes userId  string   TalentUserApiCreateTalentAttributes
    const isProfessional  boolean      this qualification    this qualification isProfessional
    return
      service description  this serviceDescription
      vat number  this isLiableToVat   this vatNumber
      vat rate  this isLiableToVat   this vatRate   0
      is professional  isProfessional
      visible  this visibility    this visibility isHidden   true
      user id  userId
      profile picture url  this profilePictureUrl
      company name   isProfessional    this companyName    this companyName
      company uid register number   isProfessional    this companyUidRegisterNumber    this companyUidRegisterNumber
      website   isProfessional    this website    this website
      mobile number  this mobileNumber
      about  this about
      latitude  this address   this address latitude   undefined
      longitude  this address   this address longitude   undefined
      professional experience  this professionalExperience
      project portfolio  this projectPortfolio
      education  this education
      zip  this address zip
      city  this address city
      address  this address street
      country  this address country



  userAttributes    TalentUserApiCreateCustomerAttributes
    return
      first name  this user firstName
      last name  this user lastName



import   Geolocation   from    geolocation model
import   User   from    user model

describe  User
  const user  User   new User
    id  23
    firstName   Anita
    lastName   Stirlig
    address  new Geolocation
      zip   8055
      street   Gehrenholzstrasse 48
      city   ZÃ¼rich
      country   Switzerland

    phoneNumber   044 372 84 82
    email   blubb blubbedi blubb
    isAdmin  true
    isCustomer  true
    language   de CH


  const serializedData
    id  23
    type   users
    attributes
      first name   Anita
      last name   Stirlig
      zip   8055
      address   Gehrenholzstrasse 48
      city   ZÃ¼rich
      country   Switzerland
      phone number   044 372 84 82
      email   blubb blubbedi blubb
      language   de CH



  it  has the following attributes
    expect user id  toEqual 23
    expect user firstName  toEqual  Anita
    expect user lastName  toEqual  Stirlig
    expect user phoneNumber  toEqual  044 372 84 82
    expect user email  toEqual  blubb blubbedi blubb
    expect user address  toEqual jasmine any Geolocation
    expect user isAdmin  toEqual true
    expect user isCustomer  toEqual true
    expect user language  toEqual  de CH


  describe  serialize
    it  returns serialized data of customer
      expect user serialize    toEqualData serializedData



import   extend   from  lodash
import   Geolocation   from    geolocation model

export interface IUserOptions
  id   number
  address   Geolocation
  email   string
  firstName   string
  lastName   string
  phoneNumber   string
  isAdmin   boolean
  isCustomer   boolean
  language   string
  hasApp   boolean


export class User
  id  number
  address  Geolocation   new Geolocation
  email  string
  firstName  string
  lastName  string
  phoneNumber  string
  isAdmin  boolean
  isCustomer  boolean
  language  string
  hasApp  boolean

  constructor options   IUserOptions
    if  options
      extend this  options



  serialize
    return
      id  this id
      type   users
      attributes
        address  this address street
        city  this address city
        country  this address country
        email  this email
        first name  this firstName
        last name  this lastName
        phone number  this phoneNumber
        zip  this address zip
        language  this language




  deserialize data  any   User
    this id   data id
    this firstName   data first name
    this lastName   data last name
    return this


import   Component   from   angular core
import   I18n   from     i18n i18n

 Component
  template
     div class  container
       h1   i18n t pageNotFound title    h1
       p   i18n t pageNotFound description    p
      div


export class PageNotFoundComponent
  i18n   I18n

import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   BankAccountFormComponent   from    bank account form component

describe  BankAccountFormComponent
  let component  BankAccountFormComponent
  let alertService  any
  let bankAccountService  any
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched

  beforeEach
    alertService   jasmine createSpyObj  alertService     success    danger
    bankAccountService   jasmine createSpyObj  bankAccountService     createBankAccountWithIban
    component   new BankAccountFormComponent bankAccountService  alertService  formBuilder  formHelper


  describe  ngOnInit
    it  builds the form
      expect component accountForm  toBeUndefined
      component ngOnInit
      expect component accountForm  toEqual jasmine any FormGroup



  describe  isFormValid
    beforeEach
      component accountForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component accountForm    any   valid  false
      expect component isFormValid    toBe false



  describe  onSubmit
    describe  form is valid
      beforeEach
        spyOn component   isFormValid   and returnValue true
        spyOn formHelper   setAsTouched
        component accountForm    any   value   name   Hans   iban   CH123
        spyOn component onConnected   emit


      describe  successful
        beforeEach
          bankAccountService createBankAccountWithIban and returnValue Observable of  isConnectedToTalentBankAccount  true
          component submit


        it  submits the email with password to the session service
          expect bankAccountService createBankAccountWithIban  toHaveBeenCalledWith  Hans    CH123


        it  shows an alert success message
          expect alertService success  toHaveBeenCalledWith I18n t payment bankAccount bankAccountForm updatedSuccessful


        it  emits the connected state
          expect component onConnected emit  toHaveBeenCalledWith true



      describe  unsuccessful
        beforeEach
          bankAccountService createBankAccountWithIban and returnValue Observable throw null
          component submit


        it  shows an alert danger message
          expect alertService danger  toHaveBeenCalledWith I18n t payment bankAccount bankAccountForm updatedUnsuccessful


        it  does not emit the connected state
          expect component onConnected emit  not toHaveBeenCalled




    describe  form is invalid
      beforeEach
        spyOn component   isFormValid   and returnValue false
        spyOn formHelper   setAsTouched
        component submit


      it  does nothing
        expect bankAccountService createBankAccountWithIban  not toHaveBeenCalled




import   Component  EventEmitter  Input  OnInit  Output  ViewChild   from   angular core
import   FormBuilder  FormControl  FormGroup  NgForm  Validators   from   angular forms
import   AlertService   from        alerts alerts service
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   FormBase   from        shared form base form base
import   FormHelper   from        utils form helper
import   MyValidators   from        utils my validators
import   BankAccountForm   from    bank account form model
import   BankAccountService   from    bank account service

 Component
  selector   my bank account form
  templateUrl   bank account form component html

export class BankAccountFormComponent extends FormBase implements OnInit
   Output   onConnected  EventEmitter boolean    new EventEmitter boolean
   Input   bankAccountForm  BankAccountForm   new BankAccountForm
   ViewChild  bankAccountNgForm   bankAccountNgForm  NgForm
  accountForm  FormGroup
  formSent   false
  i18n   I18n

  constructor private bankAccountService  BankAccountService  private alertService  AlertService
              private formBuilder  FormBuilder  private formHelper  FormHelper
    super


  ngOnInit
    this buildForm


  private buildForm
    this accountForm   this formBuilder group
      name  new FormControl this bankAccountForm name   MyValidators present
      iban  new FormControl this bankAccountForm iban   Validators required  MyValidators iban



  isFormValid    boolean
    return this accountForm valid


  submit
    this submitted   true
    this formHelper setAsTouched this accountForm
    if   this isFormValid      return
    this formSent   true
    this bankAccountService createBankAccountWithIban this accountForm value name  this accountForm value iban
       subscribe talent    this onSuccess talent         this onError


  private onSuccess talent  Talent
    this formSent   false
    this alertService success this i18n t payment bankAccount bankAccountForm updatedSuccessful
    return this onConnected emit talent isConnectedToTalentBankAccount


  private onError
    this formSent   false
    this alertService danger this i18n t payment bankAccount bankAccountForm updatedUnsuccessful


import   BankAccountForm   from    bank account form model

describe  BankAccountForm
  let model  BankAccountForm

  beforeEach
    model   new BankAccountForm


  describe  serialize
    it  serializes the name
      model name    Peter Muster
      expect model serialize   name  toEqual  Peter Muster


    describe  serializes the name
      it  serializes an iban
        model iban    cH 93 0076 20116238 52957
        expect model serialize   iban  toEqual  CH9300762011623852957


      it  serializes an iban without spaces
        model iban    CH9300762011623852957
        expect model serialize   iban  toEqual  CH9300762011623852957


      it  serializes an iban with spaces
        model iban    CH93 0076 2011 6238 5295 7
        expect model serialize   iban  toEqual  CH9300762011623852957


      it  serializes an iban with dashes
        model iban    ch93 0076 2011 6238 5295 7
        expect model serialize   iban  toEqual  CH9300762011623852957


      it  serializes an iban with dashes
        model iban    cH93 0076 2011 6238 5295 7
        expect model serialize   iban  toEqual  CH9300762011623852957




export class BankAccountForm
  iban  string
  name  string

  serialize
    return
      name  this name
      iban  this normalizedIban



  private normalizedIban    string
    return this iban replace        g      toUpperCase


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Talent   from        models talent model
import   UserSessionService   from        services user session service
import   BankAccountService   from    bank account service

describe  BankAccountService
  const userSessionService  UserSessionService    any   currentTalent        false
  let talentBankAccountApi  any
  let talentService  any
  let service  BankAccountService

  beforeEach
    talentService   jasmine createSpyObj  talentService     updateCurrentTalent
    talentBankAccountApi   jasmine createSpyObj  talentBankAccountApi     createWithBankData
    service   new BankAccountService talentBankAccountApi  userSessionService  talentService


  describe  isConnected
    it  is connected   done
      spyOn userSessionService   currentTalent   and returnValue
        Observable of  isConnectedToTalentBankAccount  true
      service isConnected   subscribe connected
        expect connected  toBeTruthy
        done



    it  is not connected    done
      spyOn userSessionService   currentTalent   and returnValue
        Observable of  isConnectedToTalentBankAccount  false
      service isConnected   subscribe connected
        expect connected  toBeFalsy
        done




  describe  createBankAccountWithIban
    const iban    GR1601101250000000012300695
    const name    Peter Muster
    const talent   new Talent

    describe  successful
      beforeEach
        talentBankAccountApi createWithBankData and returnValue Observable of talent


      it  connects the account   done
        service createBankAccountWithIban name  iban  subscribe successful
          expect successful  toBeTruthy
          done



      it  calls the api service with the right arguments   done
        service createBankAccountWithIban name  iban  subscribe
          expect talentBankAccountApi createWithBankData  toHaveBeenCalledWith  account holder name  name  iban
          done



      it  updates the current talent   done
        service createBankAccountWithIban name  iban  subscribe
          expect talentService updateCurrentTalent  toHaveBeenCalledWith talent
          done





import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   TalentBankAccountApi   from        api endpoints talent bank account api service
import   Talent   from        models talent model
import   TalentService   from        services talent service
import   UserSessionService   from        services user session service

 Injectable
export class BankAccountService
  constructor private talentBankAccountApi  TalentBankAccountApi  private userSessionService  UserSessionService
              private talentService  TalentService

  isConnected    Observable boolean
    return this userSessionService currentTalent   map talent    talent isConnectedToTalentBankAccount


  createBankAccountWithIban name  string  iban  string   Observable Talent
    return this talentBankAccountApi createWithBankData  account holder name  name  iban   map talent
      this talentService updateCurrentTalent talent
      return talent



export interface CreditCardDetails
  id  string
  object  string
  addressCity  null
  addressCountry  null
  addressLine1  null
  addressLine1Check  null
  addressLine2  null
  addressState  null
  addressZip  null
  addressZipCheck  null
  brand  string
  country  string
  customer  string
  cvcCheck  string
  dynamicLast4  null
  expMonth  number
  expYear  number
  fingerprint  string
  funding  string
  last4  string
  metadata  any
  name  string
  tokenizationMethod  null


export class PaymentMethod
  constructor public readonly id  number
              public readonly stripeCustomerId  string
              public readonly visibleInProfile  boolean
              public readonly creditCardDetails  CreditCardDetails


import   Component  OnInit   from   angular core
import   I18n   from        i18n i18n
import   PaymentMethod   from     payment method model
import   PaymentMethodsService   from    payment methods service

 Component
  selector   my payment methods
  templateUrl   payment methods component html
  styleUrls    payment methods component scss

export class PaymentMethodsComponent implements OnInit
  i18n   I18n
  paymentMethods  PaymentMethod

  constructor private paymentMethodsService  PaymentMethodsService


  ngOnInit
    this paymentMethodsService allVisible   subscribe paymentMethods    this paymentMethods   paymentMethods


  storePaymentMethod
    this paymentMethodsService createForProfile
       subscribe paymentMethod    this paymentMethods push paymentMethod


  deletePaymentMethod paymentMethod  PaymentMethod
    this paymentMethodsService delete paymentMethod
       subscribe       this paymentMethods   this paymentMethods filter x    x     paymentMethod


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   PaymentMethodsApi   from        api endpoints payment methods api service
import   SessionService   from        services session service
import   CreditCardDetails  PaymentMethod   from     payment method model
import   StripeService   from     stripe stripe service
import   PaymentMethodsService   from    payment methods service

describe  PaymentMethodsService
  const api  PaymentMethodsApi   new PaymentMethodsApi null
  const stripeService  StripeService    any   createPaymentMethod
  const sessionService  SessionService    any   getCurrentUserEmail         john example com
  const service  PaymentMethodsService   new PaymentMethodsService api  stripeService  sessionService

  describe  allVisible
    it  lists the payment methods   done
      spyOn api   index   and returnValue Observable of
        new PaymentMethod 1   tok XX   true  null
        new PaymentMethod 2   tok XX   false  null
        new PaymentMethod 3   tok XX   true  null

      service allVisible   subscribe paymentMethods
        expect paymentMethods length  toEqual 2
        expect paymentMethods 0  id  toEqual 1
        expect paymentMethods 1  id  toEqual 3
        done

      expect api index  toHaveBeenCalled



  describe  createForProfile
    it  creates the payment method   done
      const paymentMethod   new PaymentMethod 1   tok XX   true  null
      spyOn stripeService   createPaymentMethod   and returnValue Observable of  secretToken
      const apiSpy   spyOn api   createByToken
      apiSpy and returnValue Observable of paymentMethod
      service createForProfile   subscribe paymentMethod2
        expect paymentMethod2  toEqual paymentMethod
        expect stripeService createPaymentMethod  toHaveBeenCalledWith  john example com
        expect apiSpy  toHaveBeenCalledWith  secretToken   true
        done




  describe  createForContract
    it  creates the payment method   done
      const profilePaymentMethod   new PaymentMethod 1   cus XX   true  null
      const contractPaymentMethod   new PaymentMethod 2   cus XX   false  null
      const apiSpy   spyOn api   createByStripeCustomerId
      apiSpy and returnValue Observable of contractPaymentMethod
      service createForContract profilePaymentMethod  subscribe paymentMethod2
        expect paymentMethod2  toEqual contractPaymentMethod
        expect apiSpy  toHaveBeenCalledWith  cus XX   false
        done




  describe  delete
    it  deletes the payment method
      spyOn api   delete
      service delete new PaymentMethod 32      false   CreditCardDetails
      expect api delete  toHaveBeenCalledWith 32



import   Injectable   from   angular core
import  rxjs add operator map
import  rxjs add operator mergeMap
import   Observable   from  rxjs Observable
import   PaymentMethodsApi   from        api endpoints payment methods api service
import   SessionService   from        services session service
import   PaymentMethod   from     payment method model
import   StripeService   from     stripe stripe service

 Injectable
export class PaymentMethodsService
  constructor private api  PaymentMethodsApi  private stripeService  StripeService  private sessionService  SessionService

  allVisible    Observable PaymentMethod
    return this api index   map paymentMethods    paymentMethods filter paymentMethod    paymentMethod visibleInProfile


  createForProfile    Observable PaymentMethod
    return this stripeService createPaymentMethod this sessionService getCurrentUserEmail
       mergeMap token    this createFromStripeToken token


  createForContract profilePaymentMethod  PaymentMethod   Observable PaymentMethod
    return this api createByStripeCustomerId profilePaymentMethod stripeCustomerId  false


  private createFromStripeToken stripeToken  string   Observable PaymentMethod
    return this api createByToken stripeToken  true


  delete paymentMethod  PaymentMethod   Observable void
    return this api delete paymentMethod id


import   PaymentMethod   from     payment method model
import   SelectPaymentMethodComponent   from    select payment method component

describe  SelectPaymentMethodComponent
  let component  SelectPaymentMethodComponent

  beforeEach
    const paymentMethodsService   jasmine createSpyObj  paymentMethodsService     allVisible
    component   new SelectPaymentMethodComponent paymentMethodsService


  describe  selectFirst
    it  selects the first payment option
      component paymentMethods    new PaymentMethod 1   a   true  null   new PaymentMethod 2   b   false  null
      component selectFirst
      expect component selectedPaymentMethod  toEqual component paymentMethods 0


    it  does not select the payment method if there are none
      component selectFirst
      expect component selectedPaymentMethod  toBeUndefined



   tslint disable no access missing member
import   Component  Input  OnInit   from   angular core
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   PaymentMethod   from     payment method model
import   PaymentMethodsService   from    payment methods service

 Component
  templateUrl   select payment method component html
  styleUrls    select payment method component scss
  selector   my select payment method

export class SelectPaymentMethodComponent implements OnInit
   Input   submitted   false
  i18n   I18n
  paymentMethods  PaymentMethod
  selectedPaymentMethod  PaymentMethod

  constructor private paymentMethodsService  PaymentMethodsService


  ngOnInit
    this paymentMethodsService allVisible   subscribe paymentMethods    this paymentMethods   paymentMethods


  select paymentMethod  PaymentMethod
    this selectedPaymentMethod   paymentMethod


  selectFirst
    if   this paymentMethods length
      return

    this select this paymentMethods 0


  storePaymentMethod
    this paymentMethodsService createForProfile   subscribe paymentMethod
      this paymentMethods push paymentMethod
      this select paymentMethod



  deletePaymentMethod paymentMethod  PaymentMethod
    this checkIfSelectedPaymentMethodWasDeleted paymentMethod
    this deletePaymentMethodFromArray paymentMethod
    this paymentMethodsService delete paymentMethod  subscribe
            undefined
      error    this handlePaymentMethodError error


  private checkIfSelectedPaymentMethodWasDeleted paymentMethod  PaymentMethod
    if  this selectedPaymentMethodIsDeleted paymentMethod     this select undefined


  private selectedPaymentMethodIsDeleted paymentMethodToBeDeleted  PaymentMethod
    return this selectedPaymentMethod    this selectedPaymentMethod id     paymentMethodToBeDeleted id


  private deletePaymentMethodFromArray paymentMethod  PaymentMethod
    this paymentMethods   this paymentMethods filter x    x     paymentMethod


  private handlePaymentMethodError error  any
    alert error


  isValid    boolean
    return   this selectedPaymentMethod


  preparePaymentMethodForContract    Observable PaymentMethod
    return this paymentMethodsService createForContract this selectedPaymentMethod


import   NgModule   from   angular core
import   RouterModule   from   angular router
import   StripeAuthorizeComponent   from    stripe authorize stripe authorize component
import   StripeConnectComponent   from    stripe connect stripe connect component

 NgModule
  imports
    RouterModule forChild

        path   payment
        children
           path   stripe connect   component  StripeConnectComponent
           path   stripe authorize   component  StripeAuthorizeComponent



  exports   RouterModule

export class PaymentRoutingModule

import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   NgxErrorsModule   from   ultimate ngxerrors
import   ApiModule   from     api api module
import   CustomFormElementModule   from     shared custom form element module
import   BankAccountFormComponent   from    bank accounts bank account form component
import   BankAccountService   from    bank accounts bank account service
import   PaymentMethodsComponent   from    payment methods payment methods component
import   PaymentMethodsService   from    payment methods payment methods service
import   SelectPaymentMethodComponent   from    payment methods select payment method component
import   PaymentRoutingModule   from    payment routing module
import   StripeAuthorizeComponent   from    stripe authorize stripe authorize component
import   StripeConnectButtonComponent   from    stripe connect stripe connect button component
import   StripeConnectHrefService   from    stripe connect stripe connect href service
import   StripeConnectComponent   from    stripe connect stripe connect component
import   StripeService   from    stripe stripe service

 NgModule
  imports
    CommonModule
    FormsModule
    PaymentRoutingModule
    NgxErrorsModule
    ReactiveFormsModule
    ApiModule
    CustomFormElementModule

  declarations
    BankAccountFormComponent
    PaymentMethodsComponent
    SelectPaymentMethodComponent
    StripeAuthorizeComponent
    StripeConnectButtonComponent
    StripeConnectComponent

  exports
    BankAccountFormComponent
    PaymentMethodsComponent
    SelectPaymentMethodComponent
    StripeConnectButtonComponent
    StripeConnectComponent

  providers
    BankAccountService
    PaymentMethodsService
    StripeConnectHrefService
    StripeService


export class PaymentModule

import   Component  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from           i18n i18n
import   StripeService   from     stripe service

 Component
  templateUrl   stripe authorize component html

export class StripeAuthorizeComponent implements OnInit
  state   connecting     connected     stripe error     server error     connecting
  i18n   I18n

  constructor private stripeService  StripeService  private route  ActivatedRoute

  ngOnInit
    if  this route snapshot queryParams  error
      this state    stripe error
      else
      this codeAvailable



  private codeAvailable
    const code   this route snapshot queryParams  code
    this stripeService connectAccount code  subscribe
            this state    connected
            this state    server error



import   Component  OnInit   from   angular core
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   StripeService   from     stripe service

 Component
  selector   my stripe connect button
  templateUrl   stripe connect button component html
  styleUrls    stripe connect button component scss

export class StripeConnectButtonComponent implements OnInit
  i18n   I18n
  isConnected  Observable boolean
  connectButtonHref  Observable string

  constructor private stripeService  StripeService


  ngOnInit
    this isConnected   this stripeService isConnected
    this connectButtonHref   this stripeService stripeConnectHref


  isAccountNotConnected connected  boolean   null   boolean
    return connected     false


import   Observable   from  rxjs Observable

export const stripeConnectHrefServiceMock
  href        Observable of  stubHref

import   Observable   from  rxjs Observable
import   AppSettings   from           app settings
import   StripeConnectHrefService   from    stripe connect href service

describe  StripeConnectHrefService
  let service  StripeConnectHrefService
  const userSessionService  any
    currentTalent        Observable of
      id  23
      mobileNumber   0777777777
      address
        street   Muster
        city   Zurich
        zip   8050

      user
        firstName   Megan
        lastName   Fox
        email   meganfox

      companyName   Magazines
      countryCode         CH
      currency         chf



  beforeEach
    service   new StripeConnectHrefService userSessionService


  describe  href
    function expectStripeUrlToContain subString  string
      service href   subscribe  url  string     expect url  toContain subString


    describe  stripeParameters
      it  contains the main url
        expectStripeUrlToContain  https   connect stripe com oauth authorize


      it  contains the response type
        expectStripeUrlToContain  response type code


      it  contains the client id
        expectStripeUrlToContain  client id     AppSettings STRIPE CLIENT ID


      it  contains the scope
        expectStripeUrlToContain  scope read write



    describe  redirectUrl
      it  contains contains the redirect uri
        expectStripeUrlToContain  redirect uri     encodeURIComponent  http   lawoon frontend localhost 3000 payment stripe authorize



    describe  talentCredentials
      it  contains the talent credentials
        expectStripeUrlToContain  stripe user 5Bcurrency 5D chf
        expectStripeUrlToContain  stripe user 5Bemail 5D meganfox
        expectStripeUrlToContain  stripe user 5Bfirst name 5D Megan
        expectStripeUrlToContain  stripe user 5Blast name 5D Fox
        expectStripeUrlToContain  stripe user 5Bcurrency 5D chf
        expectStripeUrlToContain  stripe user 5Bcountry 5D CH
        expectStripeUrlToContain  stripe user 5Bphone number 5D 0777777777
        expectStripeUrlToContain  stripe user 5Bstreet address 5D Muster
        expectStripeUrlToContain  stripe user 5Bcity 5D Zurich
        expectStripeUrlToContain  stripe user 5Bzip 5D 8050
        expectStripeUrlToContain  stripe user 5Bbusiness name 5D Magazines


      it  contains the talent url
        expectStripeUrlToContain  stripe user 5Burl 5D     encodeURIComponent  http   lawoon frontend localhost 3000 talents 23




import   Injectable   from   angular core
import   UrlSegment   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   AppSettings   from           app settings
import   I18n   from           i18n i18n
import   UserSessionService   from           services user session service

 Injectable
export class StripeConnectHrefService
  private queryParams    index  string   string

  constructor private userSessionService  UserSessionService

  href    Observable string
    this queryParams
    this addStripe
    this addRedirectUri
    return this addTalentCredentials   map
      this combineParts



  private addStripe
    this queryParams  response type      code
    this queryParams  client id     AppSettings STRIPE CLIENT ID
    this queryParams  scope      read write


  private addRedirectUri
    this queryParams  redirect uri        AppSettings BASE FRONTEND URL  payment stripe authorize


  private addTalentCredentials
    return this userSessionService currentTalent   map talent
      this queryParams  stripe user email      talent user email
      this queryParams  stripe user first name      talent user firstName
      this queryParams  stripe user last name      talent user lastName
      this queryParams  stripe user country      talent countryCode
      this queryParams  stripe user currency      talent currency
      this queryParams  stripe user phone number      talent mobileNumber
      this queryParams  stripe user street address      talent address street
      this queryParams  stripe user city      talent address city
      this queryParams  stripe user zip      talent address zip
      this queryParams  stripe user business name      talent companyName        talent user firstName    talent user lastName
      this queryParams  stripe user product description      I18n t payment stripe connect defaultProductDescription
      this queryParams  stripe user url         AppSettings BASE FRONTEND URL  talents   talent id



  private combineParts
    return  https   connect stripe com oauth authorize   new UrlSegment     this queryParams  toString


import   Component  ViewChild   from   angular core
import   I18n   from           i18n i18n
import   StripeConnectButtonComponent   from    stripe connect button component

 Component
  selector   my stripe connect
  templateUrl   stripe connect component html

export class StripeConnectComponent
   ViewChild StripeConnectButtonComponent  stripeConnectButton  StripeConnectButtonComponent
  i18n   I18n

import   inject  TestBed   from   angular core testing
import   Observable   from  rxjs Observable
import   TalentBankAccountApi   from        api endpoints talent bank account api service
import   LawoonHttpMock   from        api utils lawoon http service mock
import   Talent   from        models talent model
import   UserSessionService   from        services user session service
import   StripeConnectHrefService   from    connect stripe connect href service
import   stripeConnectHrefServiceMock   from    connect stripe connect href service mock
import   StripeService   from    stripe service

jasmine DEFAULT TIMEOUT INTERVAL   1000

describe  StripeService
  let service  StripeService
  let talentBankAccountApi  TalentBankAccountApi
  let userSessionService  UserSessionService

  beforeEach
    TestBed configureTestingModule
      providers
        StripeService
        TalentBankAccountApi
         provide  StripeConnectHrefService  useValue  stripeConnectHrefServiceMock
        LawoonHttpMock getProviders
         provide  UserSessionService  useValue   currentTalent        Observable of false




  beforeEach inject  StripeService  TalentBankAccountApi  UserSessionService
      service  StripeService   talentBankAccountApi  TalentBankAccountApi   userSessionService  UserSessionService
      service    service
      talentBankAccountApi    talentBankAccountApi
      userSessionService    userSessionService


  describe  isConnected
    it  is connected   done
      spyOn userSessionService   currentTalent   and returnValue
        Observable of  isConnectedToTalentBankAccount  true
      service isConnected   subscribe connected
        expect connected  toBeTruthy
        done



    it  is not connected   done
      spyOn userSessionService   currentTalent   and returnValue
        Observable of  isConnectedToTalentBankAccount  false
      service isConnected   subscribe connected
        expect connected  toBeFalsy
        done




  describe  stripeConnectHref
    it  calls the stripe connect href service   done
      service stripeConnectHref   subscribe href
        expect href  toEqual  stubHref
        done




  describe  connectAccount
    const talent   new Talent

    it  connects the account   done
      spyOn talentBankAccountApi   create   and returnValue Observable of talent
      service connectAccount  test   subscribe response
        expect response  toEqual talent
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Observer   from  rxjs Observer
import   TalentBankAccountApi   from        api endpoints talent bank account api service
import   AppSettings   from        app settings
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   UserSessionService   from        services user session service
import   StripeConnectHrefService   from    connect stripe connect href service

 Injectable
export class StripeService
  constructor private hrefService  StripeConnectHrefService
              private talentBankAccountApi  TalentBankAccountApi
              private userSessionService  UserSessionService

  isConnected    Observable boolean
    return this userSessionService currentTalent   map talent    talent isConnectedToTalentBankAccount


  stripeConnectHref    Observable string
    return this hrefService href


  connectAccount authorizationCode  string   Observable Talent
    return this talentBankAccountApi create  authorization code  authorizationCode


  createPaymentMethod email  string   Observable string
       this method is not tested because it is hard mock the external API
       if you change this or one of the following methods  test it manually
    return Observable create  observer  Observer string
      this openStripeDialog observer  email



  private openStripeDialog observer  Observer string   talentEmail  string
    StripeCheckout configure
      image     AppSettings BASE FRONTEND URL  assets img logo square png
      key  AppSettings STRIPE PUBLISHABLE KEY
      name  I18n t payment paymentMethods dialog name
      email  talentEmail
      description  I18n t payment paymentMethods dialog description
      locale   auto
      token  tokenData
        observer next tokenData id
        observer complete

      currency   chf
      allowRememberMe  false
      panelLabel  I18n t payment paymentMethods dialog panelLabel
       open


export   from    profile picture component
import   ImageService   from     utils image service
import   ProfilePictureComponent   from    profile picture component

describe  ProfilePictureComponent
  let component  ProfilePictureComponent

  beforeEach
    component   new ProfilePictureComponent new ImageService
    component ngOnChanges


  it  initializes the image when no image is given
    expect component displayedPicture  toEqual  assets img placeholder profile picture empty svg


  it  adds the profile image
    component setDisplayedPicture    test2 o test2 jpg
    expect component displayedPicture  toEqual  https   test2 t 200x200 filters round corner 200 255 255 255  u o test2 jpg


  it  set the placeholder as image
    component setDisplayedPicture    test2 o test2 jpg
    component setPlaceholder
    expect component displayedPicture  toEqual  assets img placeholder profile picture empty svg


import   Component  Input  OnChanges   from   angular core
import   I18n   from     i18n i18n
import   ImageService   from     utils image service

 Component
  selector   my profile picture
  templateUrl   profile picture component html
  styleUrls    profile picture component scss

export class ProfilePictureComponent implements OnChanges
   Input   pictureUrl  string
   Input   size   navbar size     extra small     small     medium responsive     medium     medium
   Input   showBadge   false
  i18n   I18n

  displayedPicture  string

  constructor private imageService  ImageService

  ngOnChanges
    if  this pictureUrl
      this setDisplayedPicture this pictureUrl
      else
      this setPlaceholder



  setDisplayedPicture url  string
    this displayedPicture   this imageService resizeProfileImage url


  setPlaceholder
    this displayedPicture    assets img placeholder profile picture empty svg


import   NgModule   from   angular core
import   Route  RouterModule   from   angular router
import   CustomerWorkNewComponent   from     customer work new customer work new component
import   I18n   from     i18n i18n
import   TalentDetailResolver   from     services talent detail resolver
import   TalentRatingsResolver   from     services talent ratings resolver
import   PublicWorkDetailComponent   from    public work public work detail component
import   PublicWorkDetailResolver   from    public work public work detail resolver
import   PublicWorkListComponent   from    public work public work list component
import   TalentBrowseDetailComponent   from    talents talent browse detail component
import   TalentBrowseComponent   from    talents talent browse component

export const TALENT BROWSE  Route
  path   talents   data  I18n t metaData talents
  children
     path      component  TalentBrowseComponent

      path    id
      component  TalentBrowseDetailComponent
      resolve
        talent  TalentDetailResolver
        talentRatings  TalentRatingsResolver





 NgModule
  imports
    RouterModule forChild
      TALENT BROWSE

        path   public works   data  I18n t metaData works
        children
           path      component  PublicWorkListComponent

            path    id   resolve   workDescription  PublicWorkDetailResolver
            children
               path      redirectTo   overview   pathMatch   full
               path    tab   component  PublicWorkDetailComponent





        path   works
        children
           path      redirectTo   public works   pathMatch   full
           path   new   component  CustomerWorkNewComponent


       path   public announcements   redirectTo   public works   pathMatch   full

  exports   RouterModule

export class PublicBrowseRoutingModule

import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   HttpModule   from   angular http
import   BrowserModule   from   angular platform browser
import   NgxErrorsModule   from   ultimate ngxerrors
import   MyDatePickerModule   from  mydatepicker
import   ModalModule  TimepickerModule   from  ng2 bootstrap
import   PaginationModule   from  ng2 bootstrap pagination
import   NgxGalleryModule   from  ngx gallery
import   WorkCostListingComponent   from        app shared talent cost listing work cost listing work cost listing component
import   AddressSelectorModule   from     address selector address selector module
import   CategoryFilterSelectionComponent   from     categories category selection category filter selection component
import   CategorySelectionComponent   from     categories category selection category selection component
import   PreselectedCategoryComponent   from     categories preselected category preselected category component
import   ChatModule   from     chat chat module
import   CustomerOfferAcceptModalComponent   from     customer offer accept modal customer offer accept modal component
import   CustomerOfferDeclineModalComponent   from     customer offer decline modal customer offer decline modal component
import   CollapsibleTalentInfoComponent   from     customer work request talent list collapsible talent info component
import   CustomerWorkNewComponent   from     customer work new customer work new component
import   WorksNewQuestionsFormComponent   from     customer work new questions works new questions form component
import   WorkDescriptionFormComponent   from     customer work shared work description form component
import   ProfilePictureComponent   from     profile picture profile picture component
import   RenuoUploadComponent   from     renuo uploads renuo upload component
import   CreateWorkService   from     services create work service
import   CustomerRatesTalentService   from     services customer rates talent service
import   RefererService   from     services referer service
import   TalentDetailResolver   from     services talent detail resolver
import   TalentRatingsResolver   from     services talent ratings resolver
import   BackButtonComponent   from     shared back button back button component
import   CollapsibleLinkComponent   from     shared collapsible collapsible link component
import   CollapsibleTextComponent   from     shared collapsible collapsible text component
import   CollapsibleTitleComponent   from     shared collapsible collapsible title component
import   CustomFormElementModule   from     shared custom form element module
import   EstimatedWorkDurationComponent   from     shared estimated work hours estimated work duration component
import   FooterComponent   from     shared footer footer component
import   CompactRatingDisplayComponent   from     shared rating compact rating display component
import   RatingDisplayComponent   from     shared rating rating display component
import   StarDisplayComponent   from     shared rating star display component
import   SupportBoxComponent   from     shared support box support box component
import   TabSubnavbarComponent   from     shared tab subnavbar tab subnavbar component
import   TalentCostListingComponent   from     shared talent cost listing talent cost listing component
import   TalentFilterComponent   from     shared talent filter talent filter component
import   TalentInfoBoxComponent   from     shared talent info box talent info box component
import   OptionalTimeSelectionComponent   from     shared time selection optional time selection component
import   TimeOptionSelectionComponent   from     shared time selection time option selection component
import   TimePickerFormComponent   from     shared time selection time picker form component
import   TimePickerComponent   from     shared time selection time picker component
import   TrackingPixelComponent   from     shared tracking pixel tracking pixel component
import   WorkAnswerListingComponent   from     shared work answer listing work answer listing component
import   CostEditComponent   from     talent costs cost edit component
import   CostItemsFormComponent   from     talent costs cost items form component
import   TalentOfferDetailComponent   from     talent offer detail talent offer detail component
import   TalentOfferEditComponent   from     talent offer edit talent offer edit component
import   TalentOfferNewComponent   from     talent offer new talent offer new component
import   OfferFormComponent   from     talent offer offer form component
import   TalentProfileShowComponent   from     talent profile show talent profile show component
import   TalentRatingListComponent   from     talent profile talent rating list talent rating list component
import   CentConvertPipe   from     utils cent convert pipe
import   CurrencyConverterPipe   from     utils currency converter pipe
import   MinutesToHourMinutesPipe   from     utils minutes to hour minutes pipe
import   TimeAgoPipe   from     utils time ago pipe
import   TruncatePipe   from     utils truncate pipe
import   ImageGalleryComponent   from     work description image gallery component
import   WorkDescriptionComponent   from     work description work description component
import   PublicWorkListItemComponent   from     work states public work list item component
import   PublicBrowseRoutingModule   from    public browse routing module
import   PublicWorkDetailComponent   from    public work public work detail component
import   PublicWorkDetailResolver   from    public work public work detail resolver
import   PublicWorkFilterComponent   from    public work public work filter component
import   PublicWorkListQueryParamsHelper   from    public work public work list query params helper
import   PublicWorkListComponent   from    public work public work list component
import   TalentBrowseDetailComponent   from    talents talent browse detail component
import   TalentBrowseComponent   from    talents talent browse component
import   TalentListQueryParamsHelper   from    talents talent list query params helper

const CUSTOM PIPES
  CentConvertPipe
  CurrencyConverterPipe
  MinutesToHourMinutesPipe
  TimeAgoPipe
  TruncatePipe


const SHARED DECLARATIONS
     CUSTOM PIPES
  BackButtonComponent
  CategoryFilterSelectionComponent
  CategorySelectionComponent
  CollapsibleLinkComponent
  CollapsibleTalentInfoComponent
  CollapsibleTextComponent
  CollapsibleTitleComponent
  CompactRatingDisplayComponent
  CostEditComponent
  CostItemsFormComponent
  CustomerWorkNewComponent
  EstimatedWorkDurationComponent
  FooterComponent
  ImageGalleryComponent
  CustomerOfferDeclineModalComponent
  CustomerOfferAcceptModalComponent
  OfferFormComponent
  OptionalTimeSelectionComponent
  PreselectedCategoryComponent
  ProfilePictureComponent
  PublicWorkDetailComponent
  PublicWorkFilterComponent
  PublicWorkListComponent
  PublicWorkListItemComponent
  RatingDisplayComponent
  RenuoUploadComponent
  StarDisplayComponent
  SupportBoxComponent
  TabSubnavbarComponent
  TalentBrowseComponent
  TalentBrowseDetailComponent
  TalentCostListingComponent
  TalentFilterComponent
  TalentInfoBoxComponent
  TalentOfferDetailComponent
  TalentOfferEditComponent
  TalentOfferNewComponent
  TalentProfileShowComponent
  TalentRatingListComponent
  TimeOptionSelectionComponent
  TimePickerComponent
  TimePickerFormComponent
  TrackingPixelComponent
  WorkAnswerListingComponent
  WorkCostListingComponent
  WorkDescriptionComponent
  WorkDescriptionComponent
  WorkDescriptionFormComponent
  WorksNewQuestionsFormComponent


 NgModule
  imports
    AddressSelectorModule
    CommonModule
    BrowserModule
    ChatModule
    FormsModule
    ReactiveFormsModule
    HttpModule
    MyDatePickerModule
    CustomFormElementModule
    PaginationModule forRoot
    NgxGalleryModule
    PublicBrowseRoutingModule
    TimepickerModule forRoot
    ModalModule forRoot
    NgxErrorsModule

  declarations
       SHARED DECLARATIONS

  exports
       SHARED DECLARATIONS

  providers
    CreateWorkService
    CustomerRatesTalentService
    PublicWorkDetailResolver
    PublicWorkListQueryParamsHelper
    RefererService
    TalentDetailResolver
    TalentListQueryParamsHelper
    TalentRatingsResolver


export class PublicBrowseModule

export type Sort    asc     desc
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   TabItem   from        shared models tab item model
import   PublicWorkDetailComponent   from    public work detail component

describe  PublicWorkDetailComponent
  let component  PublicWorkDetailComponent
  const activatedRoute    any   data  Observable of  workDescription  null    params  Observable of
  const router    any   navigate

  beforeEach
    component   new PublicWorkDetailComponent activatedRoute  router


  describe  ngOnInit
    const overviewTab   new TabItem I18n t tabSubnavbar overview   overview
    const offerTab   new TabItem I18n t tabSubnavbar yourOffer   offers

    it  builds the tab items
      component ngOnInit
      expect component tabItems  toEqual  overviewTab  offerTab



import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   TabItem   from        shared models tab item model
import   WorkDescription   from        shared models work states work description model

 Component
  templateUrl   public work detail component html

export class PublicWorkDetailComponent implements OnInit  OnDestroy
  i18n   I18n
  workDescription  WorkDescription
  tab   offers     overview
  paramsSub  Subscription
  tabItems  TabItem
  private langSub  Subscription

  constructor private route  ActivatedRoute  private router  Router
    this route data subscribe data
      this workDescription   data  workDescription



  ngOnInit
    this langSub   this i18n getLang   subscribe       this buildTabItems
    this paramsSub   this route params subscribe params    this paramsChanged params


  private buildTabItems
    this tabItems
      new TabItem this i18n t tabSubnavbar overview   overview
      new TabItem this i18n t tabSubnavbar yourOffer   offers



  private paramsChanged params  Params
    this tab   params  tab
    if   this tabItems some tabItem    tabItem link     this tab
      this router navigate   404



  ngOnDestroy
    this langSub unsubscribe
    this paramsSub unsubscribe


import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import   Observable   from  rxjs Observable
import   WorkService   from        services work service
import   WorkDescription   from        shared models work states work description model

 Injectable
export class PublicWorkDetailResolver implements Resolve WorkDescription
  constructor private workService  WorkService

  resolve route  ActivatedRouteSnapshot   Observable WorkDescription
    return this workService getById route params  id


import   Subcategory   from        categories shared subcategory model
import   Geolocation   from        models geolocation model
import   PublicWorkFilterComponent   from    public work filter component
import   WorkFilter   from    work filter model

describe  PublicWorkFilterComponent
  let component  PublicWorkFilterComponent

  beforeEach
    component   new PublicWorkFilterComponent
    component filter   new WorkFilter


  describe  selectSort
    it  sets the default value
      expect component filter sort  toEqual  desc


    it  sets the the model value
      component selectSort  asc
      expect component filter sort  toEqual  asc
      component selectSort  desc
      expect component filter sort  toEqual null


    it  sets the the default with an invalid value
      component selectSort  bla
      expect component filter sort  toEqual null



  describe  selectSubcategories
    it  sets the default value
      expect component filter subcategoryIds  toEqual


    it  sets the the model value
      const subcategories    new Subcategory  id  10    new Subcategory  id  15
      component selectSubcategories subcategories
      expect component filter subcategoryIds  toEqual  10  15



  describe  setAddress
    it  sets publicAnnouncementFilter to chosen Address
      const givenGeolocation   new Geolocation
        longitude  9
        latitude  8

      spyOn component onFilterChanged   emit
      component setAddress givenGeolocation
      expect component filter geolocation  toEqual givenGeolocation
      expect component onFilterChanged emit  toHaveBeenCalled



import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   Subcategory   from        categories shared subcategory model
import   I18n   from        i18n i18n
import   Geolocation   from        models geolocation model
import   Option   from        shared dropdown option model
import   Sort   from    public work filter types
import   WorkFilter   from    work filter model

 Component
  selector   my public work filter
  templateUrl   public work filter component html

export class PublicWorkFilterComponent implements OnInit
   Input   filter  WorkFilter
   Output   onFilterChanged  EventEmitter WorkFilter    new EventEmitter WorkFilter
  i18n   I18n
  sortOptions  Option

  ngOnInit
    this buildSortOptions


  private buildSortOptions
    this sortOptions push new Option this i18n t publicAnnouncementFilter newestEntries  null
    this sortOptions push new Option this i18n t publicAnnouncementFilter oldestEntries   asc


  selectSort sortString  string
    this filter sort   this convertSortString sortString
    this emitFilterChange


  private convertSortString sortString  string   Sort
    if  sortString      asc     return  asc
    return null


  selectSubcategories subcategories  Subcategory
    if  subcategories length   0
      this filter subcategoryIds   subcategories map sub    sub id
      this filter categoryId   subcategories 0  categoryId
      else
      this filter subcategoryIds   null
      this filter categoryId   null

    this emitFilterChange


  private emitFilterChange    void
    this onFilterChanged emit this filter


  setAddress chosenGeolocation  Geolocation
    this filter geolocation   chosenGeolocation
    this emitFilterChange


export type Sort    asc     desc
import   Params   from   angular router
import   as   from  lodash
import   PublicWorkListQueryParamsHelper   from    public work list query params helper
import   WorkFilter   from    work filter model

describe  PublicWorkListQueryParamsHelper
  let helper  PublicWorkListQueryParamsHelper

  beforeEach
    helper   new PublicWorkListQueryParamsHelper


  describe  serialize
    let filter  WorkFilter

    beforeEach
      filter   new WorkFilter


    it  can serialize a public announcement filter
      filter categoryId   2
      filter sort    desc
      const serialized   helper serialize filter
      expect serialized  category    toEqual 2
      expect serialized  sort    toEqual  desc


    describe  can serialize subcategories
      it  serializes the array
        filter subcategoryIds    1  2  3
        const serialized   helper serialize filter
        expect serialized  subcategories    toEqual  1 2 3


      it  doesnt serializes subcategories if they are undefined
        filter subcategoryIds   null
        const serialized   helper serialize filter
        expect serialized  subcategories    toBeNull


      it  doesnt serializes an empty array
        filter subcategoryIds
        const serialized   helper serialize filter
        expect serialized  subcategories    toBeNull



    describe  can serialize pagination
      it  serializes the the given page and size
        filter page   2
        filter size   5
        const serialized   helper serialize filter
        expect serialized  page    toEqual 2
        expect serialized  size    toEqual 5


      it  doesnt serializes page and size if they are default
        filter page   1
        filter size   25
        const serialized   helper serialize filter
        expect serialized  page    toBeNull
        expect serialized  size    toBeNull



    describe  can serialize geolocation
      it  serializes the geolocation
        filter geolocation    any   latitude  2 2  longitude  3 3  city   Bern   country   Schweiz
        const serialized   helper serialize filter
        expect serialized  lat    toEqual  2 2
        expect serialized  lng    toEqual  3 3
        expect serialized  city    toEqual  Bern
        expect serialized  country    toEqual  Schweiz


      it  doesnt serializes geolocation if geolocation is null
        const serialized   helper serialize filter
        expect serialized  lat    toBeUndefined
        expect serialized  lng    toBeUndefined
        expect serialized  city    toBeUndefined
        expect serialized  country    toBeUndefined



    describe  can serialize onlyOpenAnnouncements
      it  serializes the onlyOpenAnnouncements if its true
        filter onlyOpenAnnouncements   true
        const serialized   helper serialize filter
        expect serialized  onlyOpenAnnouncements    toEqual true


      it  doesnt serializes onlyOpenAnnouncements if it is default
        filter onlyOpenAnnouncements   false
        const serialized   helper serialize filter
        expect serialized  onlyOpenAnnouncements    toEqual null




  describe  deserialize
    function buildParams additionalParams  Params        Params
      const defaultParams
        category   1
        subcategories   1 2 3
        professional   both
        sort   desc
        page   1
        size   25

      return   merge defaultParams  additionalParams


    it  builds a public announcement filter out of params
      const filter   helper deserialize buildParams
      expect filter categoryId  toEqual 1
      expect filter sort  toEqual null
      expect filter page  toEqual 1
      expect filter size  toEqual 25


    describe  can deserialize subcategories
      it  deserializes the array
        const filter   helper deserialize buildParams
        expect filter subcategoryIds  toEqual  1  2  3


      it  doesnt deserializes subcategories if they are undefined
        const params   buildParams
        delete params  subcategories
        const filter   helper deserialize params
        expect filter subcategoryIds  toBeNull


      it  doesnt deserializes an empty array
        const filter   helper deserialize buildParams  subcategories
        expect filter subcategoryIds  toBeNull



    describe  can deserialize pagination
      it  deserializes the given page and size
        const filter   helper deserialize buildParams  page  2  size  5
        expect filter page  toEqual 2
        expect filter size  toEqual 5


      it  uses default values if no page and size are given
        const filter   helper deserialize buildParams  page  undefined  size  undefined
        expect filter page  toEqual 1
        expect filter size  toEqual 25



    describe  can deserialize onlyOpenAnnouncements
      it  deserializes the onlyOpenAnnouncements if its true
        const filter   helper deserialize buildParams  onlyOpenAnnouncements   true
        expect filter onlyOpenAnnouncements  toEqual true


      it  deserializes the onlyOpenAnnouncements if its false
        const filter   helper deserialize buildParams  onlyOpenAnnouncements   false
        expect filter onlyOpenAnnouncements  toEqual false


      it  is false if onlyOpenAnnouncements is not given
        const filter   helper deserialize buildParams  onlyOpenAnnouncements  undefined
        expect filter onlyOpenAnnouncements  toEqual false



    describe  can deserialize geolocation
      it  deserializes the given geolocation
        const filter   helper deserialize buildParams  lat   2 2   lng   3 3   city   Bern   country   Schweiz
        expect filter geolocation latitude  toEqual 2 2
        expect filter geolocation longitude  toEqual 3 3
        expect filter geolocation country  toEqual  Schweiz
        expect filter geolocation city  toEqual  Bern


      it  sets the geolocation to null if no params are given
        const filter   helper deserialize buildParams
        expect filter geolocation  toBeNull


      it  sets the geolocation to null if lng is missing
        const filter   helper deserialize buildParams  lng   3 3   city   Bern   country   Schweiz
        expect filter geolocation  toBeNull


      it  sets the geolocation to null if lat is missing
        const filter   helper deserialize buildParams  lat   3 3   city   Bern   country   Schweiz
        expect filter geolocation  toBeNull




import   Params   from   angular router
import   Geolocation   from        models geolocation model
import   Sort   from    public work filter types
import   WorkFilter   from    work filter model

export class PublicWorkListQueryParamsHelper
  serialize filter  WorkFilter   Params
    const params   this serializeSimpleParams filter
    if  filter geolocation
      this addGeolocationToParams filter  params

    return params


  private serializeSimpleParams filter  WorkFilter
    return
      category  filter categoryId
      subcategories  this serializeSubcategories filter
      sort  filter sort
      onlyOpenAnnouncements  filter onlyOpenAnnouncements   true   null
      page  filter page     1   null   filter page
      size  filter size     25   null   filter size



  deserialize params  Params   WorkFilter
    const filter   new WorkFilter
    filter categoryId   this parseNumber params  category
    filter subcategoryIds   this deserializeSubcategoryIds params  subcategories
    filter sort   this parseSort params  sort
    filter onlyOpenAnnouncements   this parseOnlyOpenAnnouncements params  onlyOpenAnnouncements
    filter page   this parseNumber params  page      1
    filter size   this parseNumber params  size      25
    filter geolocation   this parseGeolocation params  lat    params  lng    params  country    params  city
    return filter


  private serializeSubcategories filter  WorkFilter
    return filter subcategoryIds    filter subcategoryIds length   filter subcategoryIds toString     null


  private deserializeSubcategoryIds subcategories  string   undefined   number     null
    if   subcategories    return null
    return subcategories split      map s    parseInt s  10


  private addGeolocationToParams filter  WorkFilter  params  Params
    params  lat     filter geolocation latitude toString
    params  lng     filter geolocation longitude toString
    params  city     filter geolocation city
    params  country     filter geolocation country


  private parseNumber value  string   undefined   number   null
    return value   parseInt value  10    null


  private parseSort value  string   undefined   Sort   null
    if  value      asc     return  asc
    return null


  private parseOnlyOpenAnnouncements value  string   undefined   boolean
    if  value      true     return true
    return false


  private parseGeolocation lat   string  lng   string  country   string  city   string   Geolocation   null
    if   lat     lng    return null
    const location   new Geolocation
    location longitude   parseFloat lng
    location latitude   parseFloat lat
    location country   country
    location city   city
    return location


import   ChangeDetectorRef   from   angular core
import   ActivatedRoute   from   angular router
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   WorkDescriptionForm   from        customer work shared work description form model
import   CreateWorkService   from        services create work service
import   WorkService   from        services work service
import   WorkDescription   from        shared models work states work description model
import   PublicWorkListQueryParamsHelper   from    public work list query params helper
import   PublicWorkListComponent   from    public work list component
import   WorkFilter   from    work filter model

describe  PublicWorkListComponent
  let component  PublicWorkListComponent
  const workService  WorkService    any   all
  const route  ActivatedRoute    any
  let router  any
  const queryParamsHelper  PublicWorkListQueryParamsHelper    any
    deserialize
    serialize

  const cdr  ChangeDetectorRef    any   detectChanges
  const mockedResponse  Paginated WorkDescription
    data   new WorkDescription
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1


  let createWorkService  CreateWorkService

  beforeEach
    router   jasmine createSpyObj  router     navigate
    createWorkService    any   workDescriptionForm  new WorkDescriptionForm
    component   new PublicWorkListComponent workService  route  router  queryParamsHelper  cdr  createWorkService


  it  has attribute totalCount
    component totalCount   2
    expect component totalCount  toEqual 2


  it  has attribute filter
    component filter   new WorkFilter
    expect component filter  toEqual jasmine any WorkFilter


  describe  getPublicAnnouncements
    const givenFilter   new WorkFilter

    beforeEach
      spyOn workService   all   and returnValue Observable of mockedResponse
      spyOn cdr   detectChanges


    describe  view exists
      beforeEach
        component getWorks givenFilter


      it  sets public announcements
        expect component workDescriptions  toEqual mockedResponse data


      it  sets totalCount
        expect component totalCount  toEqual mockedResponse meta totalCount


      it  uses the all method of publicAnnouncementService for getting data
        expect workService all  toHaveBeenCalledWith givenFilter


      it  calls detect changes
        expect cdr detectChanges  toHaveBeenCalled


    describe  view is destroyed
      beforeEach
        component ngOnDestroy
        component getWorks givenFilter


      it  doesnt calls detect changes
        expect cdr detectChanges  not toHaveBeenCalled




  it  routes to the new work
    component createNewWork
    expect router navigate  toHaveBeenCalledWith    works new


  describe  selectOnlyOpenAnnouncements
    it  sets onlyOpenAnnouncements of the filter
      component selectOnlyOpenAnnouncements true
      expect component filter onlyOpenAnnouncements  toEqual true
      component selectOnlyOpenAnnouncements false
      expect component filter onlyOpenAnnouncements  toEqual false


    it  calls the event emitter
      spyOn component   updateQueryParams
      component selectOnlyOpenAnnouncements false
      expect component updateQueryParams  toHaveBeenCalled



import   ChangeDetectorRef  Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   CreateWorkService   from        services create work service
import   WorkService   from        services work service
import   WorkDescription   from        shared models work states work description model
import   PublicWorkListQueryParamsHelper   from    public work list query params helper
import   WorkFilter   from    work filter model

 Component
  selector   my public work list
  templateUrl   public work list component html
  styleUrls          shared lawoon ad lawoon ad component scss

export class PublicWorkListComponent implements OnInit  OnDestroy
  i18n   I18n
  workDescriptions  WorkDescription
  totalCount  number
  filter  WorkFilter   new WorkFilter
  private viewDestroyed  boolean   false

  constructor private workService  WorkService  private route  ActivatedRoute  private router  Router
              private queryParamsHelper  PublicWorkListQueryParamsHelper  private cdr  ChangeDetectorRef
              public createWorkService  CreateWorkService
    window scrollTo 0  0


  ngOnInit
    this route queryParams subscribe params    this queryParamsChanged params


  private queryParamsChanged params  Params
    this filter   this queryParamsHelper deserialize params
    this getWorks this filter


  ngOnDestroy
    this viewDestroyed   true


  pageChanged    void
    window scrollTo 0  0


  updateQueryParams
    this router navigate
      queryParams  this queryParamsHelper serialize this filter
      relativeTo  this route



  getWorks filter  WorkFilter
    this workService all filter  subscribe jsonapiData    this onWorksFetched jsonapiData


  private onWorksFetched jsonapiData  Paginated WorkDescription
    if   this viewDestroyed
      this totalCount   jsonapiData meta totalCount
      this workDescriptions   jsonapiData data
      this cdr detectChanges



  createNewWork    void
    this router navigate    works new


  selectOnlyOpenAnnouncements checked  boolean
    this filter onlyOpenAnnouncements   checked
    this updateQueryParams


import   URLSearchParams   from   angular http
import   as   from  lodash
import   Geolocation   from        models geolocation model
import   IWorkFilterOptions  WorkFilter   from    work filter model

describe  WorkFilter
  let model  WorkFilter

  function createModel additionalParams  IWorkFilterOptions   WorkFilter
    const defaultParams
      onlyMine  false
      subcategoryIds   28  48
      professionalQualification   professional
      geolocation  new Geolocation  latitude  12 2938212  longitude  7 18293827
      sort   desc
      onlyOpenAnnouncements  false

    return new WorkFilter   merge defaultParams  additionalParams


  describe  serialize
    it  can be serialized with subcategories
      const params   new URLSearchParams
      const subcategoryIds    12  46
      createModel  subcategoryIds   serialize params
      expect params getAll  filter subcategories       toEqual   12    46


    it  can be serialized with pagination
      const params   new URLSearchParams
      createModel  page  3  size  7   serialize params
      expect params get  page number     toBe  3
      expect params get  page size     toBe  7


    it  can be serialized with geodata
      const params   new URLSearchParams
      createModel  geolocation  new Geolocation  latitude  23 23354244  longitude  7 238327373     serialize params
      expect params get  lat    toBe  23 23354244
      expect params get  lng    toBe  7 238327373


    describe  can be serialized with only mine
      it  adds the filter if is true
        const params   new URLSearchParams
        createModel  onlyMine  true   serialize params
        expect params get  filter only mine     toBeTruthy


      it  adds no filter param by default if is false
        const params   new URLSearchParams
        createModel  onlyMine  false   serialize params
        expect params has  filter only mine     toBeFalsy



    describe  can be serialized with only open
      it  adds the filter if is true
        const params   new URLSearchParams
        createModel  onlyOpenAnnouncements  true   serialize params
        expect params get  filter only open     toBeTruthy


      it  adds no filter param by default if is false
        const params   new URLSearchParams
        createModel  onlyOpenAnnouncements  false   serialize params
        expect params has  filter only open     toBeFalsy




  it  can be created with sort
    model   createModel  sort   asc
    expect model sort  toEqual  asc


import   URLSearchParams   from   angular http
import   extend   from  lodash
import   Geolocation   from        models geolocation model
import   Sort   from    public work filter types

export interface IWorkFilterOptions
  onlyMine   boolean
  subcategoryIds   number
  categoryId   number
  geolocation   Geolocation
  sort   Sort
  page   number
  size   number
  onlyOpenAnnouncements   boolean


export class WorkFilter
  onlyMine  boolean   false
  subcategoryIds  number
  categoryId  number
  geolocation  Geolocation   undefined
  sort  Sort    desc
  page   1
  size   25
  onlyOpenAnnouncements   false

  constructor options   IWorkFilterOptions
    if  options
      extend this  options



  serialize params  URLSearchParams
    this serializeLocation params
    this serializeSubcategories params
    this serializeOnlyMine params
    this serializeOnlyArchived params
    this serializePagination params


  private serializeOnlyMine params  URLSearchParams
    if  this onlyMine
      params set  filter only mine     true



  private serializeOnlyArchived params  URLSearchParams
    if  this onlyOpenAnnouncements
      params set  filter only open     true



  private serializeSubcategories params  URLSearchParams
    if  this subcategoryIds
      this subcategoryIds map  subcategory  number
        params append  filter subcategories      subcategory toString




  private serializeLocation params  URLSearchParams
    if  this geolocation
      params set  lat   this geolocation latitude toString
      params set  lng   this geolocation longitude toString



  private serializePagination params  URLSearchParams
    params set  page number    this page toString
    params set  page size    this size toString


export   from    talent browse component
import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from        i18n i18n
import   TalentRating   from        models talent rating model
import   Talent   from        models talent model

 Component
  templateUrl   talent browse detail component html
  styleUrls    talent browse detail component scss

export class TalentBrowseDetailComponent
  talent  Talent
  talentRatings  TalentRating
  i18n   I18n

  constructor private route  ActivatedRoute
    this talent   this route snapshot data  talent
    this talentRatings   this route snapshot data  talentRatings


  backButtonLabel    string
    return    this talent user firstName    this talent user lastName


import   ChangeDetectorRef   from   angular core
import   ActivatedRoute   from   angular router
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   Talent   from        models talent model
import   CreateWorkService   from        services create work service
import   TalentService   from        services talent service
import   TalentFilter   from        shared talent filter talent filter model
import   TalentBrowseComponent   from    talent browse component
import   TalentListQueryParamsHelper   from    talent list query params helper

describe  TalentBrowseComponent
  let component  TalentBrowseComponent
  let userSessionService  any
  let talentRegistrationService  any
  let createWorkService  any
  let router  any
  const talentService  TalentService    any   all
  const route  ActivatedRoute    any
  const queryParamsHelper  TalentListQueryParamsHelper    any
    deserialize
    serialize

  const cdr  ChangeDetectorRef    any   detectChanges
  const mockedResponse  Paginated Talent
    data   new Talent
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     isTalent
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     ensureTalent
    router   jasmine createSpyObj  router     navigate
    createWorkService   new CreateWorkService
    component   new TalentBrowseComponent talentService  route  router  queryParamsHelper  cdr  userSessionService
      talentRegistrationService  createWorkService


  it  has attribute totalCount
    component totalCount   2
    expect component totalCount  toEqual 2


  it  has attribute filter
    component filter   new TalentFilter
    expect component filter  toEqual jasmine any TalentFilter


  describe  isCurrentUserTalent
    it  calls the userSessionService to find out if current user is talent   done
      userSessionService isTalent and returnValue Observable of true
      component isCurrentUserTalent   subscribe isTalent
        expect userSessionService isTalent  toHaveBeenCalled
        expect isTalent  toBe true
        done




  describe  getTalents
    const givenFilter   new TalentFilter

    beforeEach
      spyOn talentService   all   and returnValue Observable of mockedResponse
      spyOn cdr   detectChanges


    describe  view exists
      beforeEach
        component getTalents givenFilter


      it  sets talents
        expect component talents  toEqual mockedResponse data


      it  sets totalCount
        expect component totalCount  toEqual mockedResponse meta totalCount


      it  uses the all method of talentService for getting data
        expect talentService all  toHaveBeenCalledWith givenFilter


      it  calls detect changes
        expect cdr detectChanges  toHaveBeenCalled


    describe  view is destroyed
      beforeEach
        component ngOnDestroy
        component getTalents givenFilter


      it  doesnt calls detect changes
        expect cdr detectChanges  not toHaveBeenCalled




  describe  startTalentRegistration
    it  calls ensure talent of the service
      component startTalentRegistration
      expect talentRegistrationService ensureTalent  toHaveBeenCalled



  describe  inviteTalent
    it  assigns the talent to the createWorkService workDescriptionForm and routes to works new
      const talent   new Talent
      component inviteTalent talent
      expect createWorkService workDescriptionForm talents  toEqual  talent
      expect router navigate  toHaveBeenCalledWith    works new



import   ChangeDetectorRef  Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   CreateWorkService   from        services create work service
import   TalentRegistrationService   from        services talent registration service
import   TalentService   from        services talent service
import   UserSessionService   from        services user session service
import   TalentFilter   from        shared talent filter talent filter model
import   TalentListQueryParamsHelper   from    talent list query params helper

 Component
  selector   my talent browse
  templateUrl   talent browse component html
  styleUrls          shared lawoon ad lawoon ad component scss    talent browse component scss

export class TalentBrowseComponent implements OnInit  OnDestroy
  i18n   I18n
  talents  Talent
  totalCount  number
  filter  TalentFilter   new TalentFilter
  private viewDestroyed  boolean   false

  constructor private talentService  TalentService  private route  ActivatedRoute  private router  Router
              private queryParamsHelper  TalentListQueryParamsHelper  private cdr  ChangeDetectorRef
              private userSessionService  UserSessionService  private talentRegistrationService  TalentRegistrationService
              private createWorkService  CreateWorkService
    window scrollTo 0  0


  ngOnInit
    this route queryParams subscribe params    this queryParamsChanged params


  isCurrentUserTalent    Observable boolean
    return this userSessionService isTalent


  private queryParamsChanged params  Params
    this filter   this queryParamsHelper deserialize params
    this getTalents this filter


  ngOnDestroy
    this viewDestroyed   true


  pageChanged    void
    window scrollTo 0  0


  startTalentRegistration
    this talentRegistrationService ensureTalent
            this router navigate    talent onboarding
        outlets   primary    talents    auth  null



  updateQueryParams
    this router navigate
      queryParams  this queryParamsHelper serialize this filter
      relativeTo  this route



  getTalents filter  TalentFilter
    this talentService all filter  subscribe jsonapiData    this onTalentFetched jsonapiData


  private onTalentFetched paginatedTalents  Paginated Talent
    if   this viewDestroyed
      this totalCount   paginatedTalents meta totalCount
      this talents   paginatedTalents data
      this cdr detectChanges



  inviteTalent talent  Talent
    this createWorkService workDescriptionForm talents    talent
    this router navigate    works new


import   Params   from   angular router
import   as   from  lodash
import   TalentQualification   from        models talent qualification model
import   TalentFilter   from        shared talent filter talent filter model
import   TalentListQueryParamsHelper   from    talent list query params helper

describe  TalentListQueryParamsHelper
  let helper  TalentListQueryParamsHelper

  beforeEach
    helper   new TalentListQueryParamsHelper


  describe  serialize
    let filter  TalentFilter

    beforeEach
      filter   new TalentFilter


    it  can serialize a talent filter
      filter searchQuery    John
      filter professional   new TalentQualification  isProfessional  false
      filter rating   3
      const serialized   helper serialize filter
      expect serialized  searchText    toEqual  John
      expect serialized  professional    toEqual false
      expect serialized  rating    toEqual 3


    describe  can serialize pagination
      it  serializes the the given page and size
        filter page   2
        filter size   5
        const serialized   helper serialize filter
        expect serialized  page    toEqual 2
        expect serialized  size    toEqual 5


      it  doesnt serializes page and size if they are default
        filter page   1
        filter size   25
        const serialized   helper serialize filter
        expect serialized  page    toBeNull
        expect serialized  size    toBeNull



    describe  can serialize geolocation
      it  serializes the geolocation
        filter geolocation    any   latitude  2 2  longitude  3 3  city   Bern   country   Schweiz
        const serialized   helper serialize filter
        expect serialized  lat    toEqual  2 2
        expect serialized  lng    toEqual  3 3
        expect serialized  city    toEqual  Bern
        expect serialized  country    toEqual  Schweiz


      it  doesnt serializes geolocation if geolocation is null
        const serialized   helper serialize filter
        expect serialized  lat    toBeUndefined
        expect serialized  lng    toBeUndefined
        expect serialized  city    toBeUndefined
        expect serialized  country    toBeUndefined




  describe  deserialize
    function buildParams additionalParams  Params        Params
      const defaultParams
        category   1
        professional   false
        searchText   John Doe
        rating   5
        page   1
        size   25

      return   merge defaultParams  additionalParams


    it  builds a public announcement filter out of params
      const filter   helper deserialize buildParams
      expect filter professional  toEqual new TalentQualification  isProfessional  false
      expect filter searchQuery  toEqual  John Doe
      expect filter rating  toEqual 5
      expect filter page  toEqual 1
      expect filter size  toEqual 25


    describe  can deserialize pagination
      it  deserializes the given page and size
        const filter   helper deserialize buildParams  page  2  size  5
        expect filter page  toEqual 2
        expect filter size  toEqual 5


      it  uses default values if no page and size are given
        const filter   helper deserialize buildParams  page  undefined  size  undefined
        expect filter page  toEqual 1
        expect filter size  toEqual 25



    describe  can deserialize geolocation
      it  deserializes the given geolocation
        const filter   helper deserialize buildParams  lat   2 2   lng   3 3   city   Bern   country   Schweiz
        expect filter geolocation latitude  toEqual 2 2
        expect filter geolocation longitude  toEqual 3 3
        expect filter geolocation country  toEqual  Schweiz
        expect filter geolocation city  toEqual  Bern


      it  sets the geolocation to null if no params are given
        const filter   helper deserialize buildParams
        expect filter geolocation  toBeNull


      it  sets the geolocation to null if lng is missing
        const filter   helper deserialize buildParams  lng   3 3   city   Bern   country   Schweiz
        expect filter geolocation  toBeNull


      it  sets the geolocation to null if lat is missing
        const filter   helper deserialize buildParams  lat   3 3   city   Bern   country   Schweiz
        expect filter geolocation  toBeNull




import   Params   from   angular router
import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model
import   TalentFilter   from        shared talent filter talent filter model

export class TalentListQueryParamsHelper
  serialize filter  TalentFilter   Params
    const params   this serializeSimpleParams filter
    if  filter geolocation
      this addGeolocationToParams filter  params

    return params


  private serializeSimpleParams filter  TalentFilter
    return
      professional  filter professional   filter professional isProfessional   null
      searchText  filter searchQuery
      page  filter page     1   null   filter page
      size  filter size     25   null   filter size
      rating  filter rating



  deserialize params  Params   TalentFilter
    const filter   new TalentFilter
    filter professional   this parseQualification params  professional
    filter searchQuery   this parseString params  searchText
    filter page   this parseNumber params  page      1
    filter size   this parseNumber params  size      25
    filter rating   this parseNumber params  rating
    filter geolocation   this parseGeolocation params  lat    params  lng    params  country    params  city
    return filter


  private addGeolocationToParams filter  TalentFilter  params  Params
    params  lat     filter geolocation latitude toString
    params  lng     filter geolocation longitude toString
    params  city     filter geolocation city
    params  country     filter geolocation country


  private parseNumber value  string   undefined   number   null
    return value   parseInt value  10    null


  private parseString value  string   undefined   string   null
    return value   value   null


  private parseQualification value  string   undefined   TalentQualification   null
    return value   new TalentQualification  isProfessional  value      true      null


  private parseGeolocation lat   string  lng   string  country   string  city   string   Geolocation   null
    if   lat     lng    return null
    const location   new Geolocation
    location longitude   parseFloat lng
    location latitude   parseFloat lat
    location country   country
    location city   city
    return location


import   DropzoneOptions   from    dropzone options model

describe  DropzoneOptions
  it  can be created with acceptedFiles
    const model   new DropzoneOptions  acceptedFiles   image
    expect model acceptedFiles  toEqual  image


  it  can be created with maxFilesize
    const model   new DropzoneOptions  maxFilesize  2
    expect model maxFilesize  toEqual 2


  it  can be created with maxFiles
    const model   new DropzoneOptions  maxFiles  6
    expect model maxFiles  toEqual 6


  it  can be created with dictDefaultMessage
    const dictDefaultMessageValue     p Lade ein File hoch  p
    const model   new DropzoneOptions  dictDefaultMessage  dictDefaultMessageValue
    expect model dictDefaultMessage  toEqual dictDefaultMessageValue


  it  can be created with previewTemplate
    const previewTemplateValue     div  span Das ist ein Template  span   div
    const model   new DropzoneOptions  previewTemplate  previewTemplateValue
    expect model previewTemplate  toEqual previewTemplateValue


import   extend   from  lodash

export interface IDropzoneOptionsOptions
  acceptedFiles   string
  maxFilesize   number
  maxFiles   number
  dictDefaultMessage   string
  previewTemplate   string


export class DropzoneOptions
  acceptedFiles  string
  maxFilesize  number
  maxFiles  number
  removedfile  file  DropzoneFile   void
  dictDefaultMessage  string
  previewTemplate  string

  constructor options   IDropzoneOptionsOptions
    if  options
      extend this  options




export interface DropzoneFile extends File
  previewElement  HTMLElement

import   EventEmitter   from   angular core
import   DropzoneFile   from    dropzone options model
import   RenuoUploadComponent  RenuoUploadResult   from    renuo upload component

describe  RenuoUploadComponent
  let component  RenuoUploadComponent

  beforeEach
    component   new RenuoUploadComponent


  it  has attribute onAddFile  which is a EventEmitter
    expect component onAddFile  toEqual jasmine any EventEmitter


  it  has attribute onFilesChanged  which is a EventEmitter
    expect component onFilesChanged  toEqual jasmine any EventEmitter


  it  has attribute dropzoneOptions
    expect component dropzoneOptions  toEqual undefined


  describe  addFile
    it  emits onAddFile event
      const result  RenuoUploadResult    RenuoUploadResult   publicUrl   a nice picture
      spyOn component onAddFile   emit   and returnValue true
      component addFile result
      expect component onAddFile emit  toHaveBeenCalledWith  a nice picture



  describe  removeFile
    it  emits onFilesChanged event
      const nicePicture    RenuoUploadResult   publicUrl   a nice picture   orginalName   nice picture jpg
      const betterPicture    RenuoUploadResult   publicUrl   a better picture   orginalName   better picture png

      component addedFiles    nicePicture  betterPicture

      spyOn component onFilesChanged   emit   and returnValue true
      component removeFile  DropzoneFile   name   nice picture jpg
      expect component onFilesChanged emit  toHaveBeenCalledWith   a better picture

      expect component addedFiles  toEqual  betterPicture

      component removeFile  DropzoneFile   name   better picture png
      expect component onFilesChanged emit  toHaveBeenCalledWith

      expect component addedFiles  toEqual


    it  deletes the first picture if the name is the same
      const nicePicture    RenuoUploadResult   publicUrl   a nice picture   orginalName   same name jpg
      const betterPicture    RenuoUploadResult   publicUrl   a better picture   orginalName   same name jpg

      component addedFiles    nicePicture  betterPicture

      component removeFile  DropzoneFile   name   same name jpg
      expect component addedFiles  toEqual  betterPicture



import   AfterViewInit  Component  ElementRef  EventEmitter  Input  Output  ViewChild   from   angular core
import   AppSettings   from     app settings
import   DropzoneFile  DropzoneOptions   from    dropzone options model

declare var RenuoUpload  any

export interface RenuoUploadResult
  orginalName  string
  cleanName  string
  name  string
  extension  string
  size  number
  publicUrl  string
  filePath  string


 Component
  selector   my renuo upload
  templateUrl   renuo upload component html
  styleUrls    renuo upload component scss

export class RenuoUploadComponent implements AfterViewInit
   Input   dropzoneOptions  DropzoneOptions
   Output   onAddFile   new EventEmitter string
   Output   onFilesChanged   new EventEmitter string
   ViewChild  uploadBox   uploadDiv  ElementRef

  apiKey  string   AppSettings RENUO UPLOAD API KEY
  signingUrl   AppSettings RENUO UPLOAD SIGNING URL
  addedFiles  RenuoUploadResult

  ngAfterViewInit        TODO  Not tested yet  write nice test
    const uploadElement   this uploadDiv nativeElement

    this dropzoneOptions  removedfile      file  DropzoneFile     this removeFile file
       tslint disable next line no unused expression
    new RenuoUpload  uploadElement   this dropzoneOptions   result  RenuoUploadResult       this addFile result


  addFile result  RenuoUploadResult
    this addedFiles push result

    this onAddFile emit result publicUrl
    this notifyFilesChanged


  removeFile result  DropzoneFile
    this removeElementFromDOM result      TODO  remove this as soon as Renuo Upload provides the functionality

    const index   this addedFiles findIndex el    el orginalName     result name
    this addedFiles   this addedFiles filter     i     i     index

    this notifyFilesChanged


  private removeElementFromDOM result  DropzoneFile
       Since dropzone is not accessible via Renuo Upload overtake default behaviour equal to a super   call
       Source https   github com enyo dropzone blob 4e20bd4c508179997b4b172eb66e927f9c0c8564 dist dropzone js L302 L309
    if  result previewElement
      result previewElement parentNode removeChild result previewElement



  private notifyFilesChanged
    this onFilesChanged emit this addedFiles map el    el publicUrl


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   AdminGuardService   from    admin guard service

describe  AdminGuardService
  let service  AdminGuardService
  let userSessionService  any

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    service   new AdminGuardService userSessionService


  describe  canLoad
    it  returns true if is admin   done
      userSessionService currentUser and returnValue Observable of  isAdmin  true
      service canLoad   subscribe  i  boolean
        expect i  toEqual true
        expect userSessionService currentUser  toHaveBeenCalled
        done



    it  returns false if not is admin   done
      userSessionService currentUser and returnValue Observable of  isAdmin  false
      service canLoad   subscribe  i  boolean
        expect i  toEqual false
        expect userSessionService currentUser  toHaveBeenCalled
        done




import   Injectable   from   angular core
import   CanLoad   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   UserSessionService   from    user session service

 Injectable
export class AdminGuardService implements CanLoad
  constructor private userSessionService  UserSessionService

  canLoad    Observable boolean
    return this userSessionService currentUser   map user
      if  user isAdmin
        return true

      return false



import   inject  TestBed   from   angular core testing
import   Router  RouterStateSnapshot   from   angular router
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   MockRouter   from     mocks
import   AuthGuardService   from    auth guard service
import   SessionService   from    session service
import   SessionServiceMock   from    session service mock
import   MockTalentService   from    talent service mock data

describe  AuthGuardService
  let service  AuthGuardService
  let sessionService  SessionService
  let router  Router
  const state  RouterStateSnapshot    any   url    customer

  beforeEach
    TestBed configureTestingModule
      providers
        AuthGuardService
        SessionServiceMock getProviders
        MockTalentService getProviders
         provide  Router  useClass  MockRouter




  beforeEach inject  AuthGuardService  SessionService  Router     service  AuthGuardService
                                                                  sessionService  SessionService   router  Router
    service    service
    sessionService    sessionService
    router    router


  describe  canActivate
    it  returns true if is logged in   done
      spyOn sessionService   isLoggedIn   and returnValue Observable of true
      service canActivate null  state  subscribe  i  boolean
        expect i  toEqual true
        expect sessionService isLoggedIn  toHaveBeenCalled
        done



    it  returns false if not is logged in   done
      spyOn router   navigate
      spyOn sessionService   isLoggedIn   and returnValue Observable of false
      service canActivate null  state  subscribe  i  boolean
        expect i  toEqual false
        expect sessionService isLoggedIn  toHaveBeenCalled
        expect router navigate  toHaveBeenCalledWith        outlets   auth    login    redirect    customer
           queryParamsHandling   preserve
        done




import   Injectable   from   angular core
import   CanActivate  Router  RouterStateSnapshot   from   angular router
import  rxjs add operator first
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   SessionService   from    session service

 Injectable
export class AuthGuardService implements CanActivate
  constructor private sessionService  SessionService  private router  Router

  canActivate    any  state  RouterStateSnapshot   Observable boolean
    return this sessionService isLoggedIn   first   map loggedIn
      if   loggedIn
        this router navigate        outlets   auth    login    redirect  state url        queryParamsHandling   preserve

      return loggedIn



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   BillApiObjectCreateRequest   from     api endpoints bill api interface
import   BillApi   from     api endpoints bill api service
import   Bill   from     shared models work states bill
import   BillService   from    bill service

describe  BillService
  const api  BillApi   new BillApi null
  const service  BillService   new BillService api
  const costItem
    amount  1
    description   Description
    price  3000


  const costFormGroup    any
    value
      work
        duration  420
        hourlyRate  8000
        fixedRate  undefined

      items   costItem



  const expectedCost  BillApiObjectCreateRequest
    data
      type   bills
      attributes
        cost
          work
            duration  420
            hourlyRate  8000
            fixedRate  undefined

          items   costItem





  describe  create
    it  creates a bill   done
      const expectedBill   new Bill
      spyOn api   create   and returnValue Observable of expectedBill
      service create 3  costFormGroup  subscribe bill
        expect bill  toEqual jasmine any Bill
        expect api create  toHaveBeenCalledWith 3  expectedCost
        done




  describe  update
    it  updates a bill   done
      const expectedBill   new Bill
      spyOn api   update   and returnValue Observable of expectedBill
      service update 3  costFormGroup  subscribe bill
        expect bill  toEqual jasmine any Bill
        expect api update  toHaveBeenCalledWith 3  expectedCost
        done




import   Injectable   from   angular core
import   FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   BillApiObjectCreateRequest  BillApiObjectUpdateRequest   from     api endpoints bill api interface
import   BillApi   from     api endpoints bill api service
import   CostApiRequestObject   from     api endpoints cost api interface
import   Bill   from     shared models work states bill
import   CostFormValue   from    talent offer form builder service talent offer form builder service types

 Injectable
export class BillService
  constructor private api  BillApi

  update id  number  cost  FormGroup   Observable Bill
    return this api update id  this buildRequest cost value


  create id  number  cost  FormGroup   Observable Bill
    return this api create id  this buildRequest cost value


  private buildRequest cost  CostFormValue   BillApiObjectCreateRequest   BillApiObjectUpdateRequest
    return
      data
        type   bills
        attributes
          cost  this createCostApiObject cost





  private createCostApiObject cost  CostFormValue   CostApiRequestObject
    return
      work
        hourlyRate  cost work hourlyRate    undefined
        fixedRate  cost work fixedRate    undefined
        duration  cost work duration    undefined

      items  cost items



import   ConnectionService   from    connection service

describe  ConnectionService
  let service  ConnectionService

  beforeEach
    service   new ConnectionService


  describe  isOnline
    describe  if is online
      it  returns true by default   done
        service isOnline subscribe isOnline
          expect isOnline  toBe true
          done




    describe  if is offline
      beforeEach
        service setOffline


      it  returns false if is offline   done
        service isOnline subscribe isOnline
          expect isOnline  toBe false
          done





import   Injectable   from   angular core
import   BehaviorSubject   from  rxjs BehaviorSubject
import   Observable   from  rxjs Observable

 Injectable
export class ConnectionService
  isOnline  Observable boolean
  private updateIsOnlineSource   new BehaviorSubject boolean  true

  constructor
    this isOnline   this updateIsOnlineSource asObservable


  setOffline
    this updateIsOnlineSource next false


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   ContractApiObjectCreateRequest   from     api endpoints contract api interface
import   ContractApi   from     api endpoints contract api service
import   Contract   from     shared models contract model
import   PossibleTime   from     shared models possible time model
import   ContractService   from    contract service

describe  ContractService
  const api  ContractApi   new ContractApi null
  const service  ContractService   new ContractService api

  describe  create
    function createContractRequest offerId  number  paymentMethodId  number  chosenTime  PossibleTime
                                   expectedPostData  ContractApiObjectCreateRequest  done  DoneFn
      const expectedContract   new Contract
      spyOn api   create   and returnValue Observable of expectedContract
      service create offerId  paymentMethodId  chosenTime  subscribe contract
        expect contract  toEqual expectedContract
        expect api create  toHaveBeenCalledWith offerId  expectedPostData
        done



    it  creates a contract with the selected payment method when no chosen time given   done
      const postData  ContractApiObjectCreateRequest
        data
          type   work state contracts
          attributes
            payment method id  4
            chosen time  undefined



      createContractRequest 3  4  undefined  postData  done


    it  creates a contract with the selected payment method if chosen time given   done
      const postData  ContractApiObjectCreateRequest
        data
          type   work state contracts
          attributes
            payment method id  6
            chosen time    from   2016 12 01T11 28 58 000Z



      createContractRequest 5  6  new PossibleTime new Date  2016 12 01T11 28 58 000Z     postData  done



import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   ContractApiObjectCreateRequest   from     api endpoints contract api interface
import   ContractApi   from     api endpoints contract api service
import   Contract   from     shared models contract model
import   PossibleTime   from     shared models possible time model

 Injectable
export class ContractService
  constructor private api  ContractApi

  create offerId  number  paymentMethodId  number  chosenTime  PossibleTime   Observable Contract
    const postData  ContractApiObjectCreateRequest
      data
        type   work state contracts
        attributes
          payment method id  paymentMethodId
          chosen time  chosenTime    chosenTime serialize      undefined



    return this api create offerId  postData


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   CostApiObjectCreateRequest   from     api endpoints cost api interface
import   CostApi   from     api endpoints cost api service
import   costShowMockDataJSON   from     api mock data cost api service mock data
import   CostItemForm   from     shared models cost item form model
import   CostService   from    cost service

describe  CostService
  const api  CostApi   new CostApi null
  const service  CostService   new CostService api

  describe  calculateCost
    it  returns the calculated cost   done
      spyOn api   create   and returnValue Observable of costShowMockDataJSON
      const costItem   new CostItemForm  Description   3000  1
      const costFormGroup    any
        value
          work
            duration  120
            hourlyRate  8000
            fixedRate  undefined

          items   costItem serialize



      const expectedCost  CostApiObjectCreateRequest
        data
          type   costCalculations
          attributes
            cost
              work
                duration  120
                hourlyRate  8000
                fixedRate  undefined

              items
                description   Description
                price  3000
                amount  1





      service calculateCost costFormGroup  subscribe  cost
           TODO  test for Cost interface
           expect cost  toEqual jasmine any Cost
        expect api create  toHaveBeenCalledWith expectedCost
        done




import   Injectable   from   angular core
import   FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   CostApiObjectCreateRequest   from     api endpoints cost api interface
import   CostApi   from     api endpoints cost api service
import   Cost   from     shared models cost cost model
import   WorkFormValue   from    talent offer form builder service talent offer form builder service types

 Injectable
export class CostService
  constructor private api  CostApi

  calculateCost costForm  FormGroup   Observable Cost
    return this api create this buildRequest costForm


  private buildRequest costForm  FormGroup   CostApiObjectCreateRequest
    return this createCostApiRequestObject costForm value work  costForm


  private createCostApiRequestObject cost  WorkFormValue  costForm  FormGroup   CostApiObjectCreateRequest
    return
      data
        type   costCalculations
        attributes
          cost
            work
              hourlyRate  cost hourlyRate    undefined
              duration  cost duration    undefined
              fixedRate  cost fixedRate    undefined

            items  costForm value items






import   CreateWorkService   from    create work service

describe  CreateWorkService
  let service  CreateWorkService

  beforeEach
    service   new CreateWorkService


  describe  reset
    it  resets the workDescriptionForm
      service workDescriptionForm title    hello
      service reset
      expect service workDescriptionForm title  toBeUndefined



import   Injectable   from   angular core
import   WorkDescriptionForm   from     customer work shared work description form model

 Injectable
export class CreateWorkService
  workDescriptionForm  WorkDescriptionForm   new WorkDescriptionForm

  reset
    this workDescriptionForm   new WorkDescriptionForm


import   Injectable   from   angular core
import   Resolve   from   angular router
import   Observable   from  rxjs Observable
import   PendingWork   from        shared models work states pending work model
import   WorkService   from     work service

 Injectable
export class PendingWorkListResolver implements Resolve PendingWork
  constructor private workService  WorkService

  resolve    Observable PendingWork
    return this workService pendingWorks


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   TalentRatingApi   from     api endpoints talent rating api service
import   TalentRating   from     models talent rating model
import   Receipt   from     shared models work states receipt
import   CustomerRatesTalentService   from    customer rates talent service

function createReceipt
  const receipt   new Receipt
  receipt id   30
  return receipt


describe  CustomerRatesTalentService
  const api  TalentRatingApi   new TalentRatingApi null
  const service  CustomerRatesTalentService   new CustomerRatesTalentService api
  const receipt   createReceipt

  describe  all
    it  lists all ratings for talent   done
      spyOn api   all   and returnValue Observable of
        new TalentRating
        new TalentRating

      service all 5  subscribe ratings
        expect ratings length  toEqual 2
        expect api all  toHaveBeenCalledWith 5
        done




  describe  current
    it  returns if the talent was rated already
      spyOn api   create
      service rateTalent receipt   test   5
      expect api create  toHaveBeenCalledWith 30
        data
          type   talent rating
          attributes   comment   test   value  5





import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   TalentRatingApi   from     api endpoints talent rating api service
import   TalentRating   from     models talent rating model
import   Receipt   from     shared models work states receipt

 Injectable
export class CustomerRatesTalentService
  constructor private api  TalentRatingApi

  all talentId  number   Observable TalentRating
    return this api all talentId


  rateTalent receipt  Receipt  comment  string  value  number   Observable void
    const data
      data
        type    talent rating    talent rating
        attributes   comment  value


    return this api create receipt id  data


import   EnrichErrorService   from    enrich error service

describe  EnrichErrorService
  const service  EnrichErrorService   new EnrichErrorService

  describe  removeUserContext
    it  calls addUserContext with no arguments
      spyOn service   addUserContext
      service removeUserContext
      expect service addUserContext  toHaveBeenCalledWith



import   Injectable   from   angular core
import   as Raven from  raven js

 Injectable
export class EnrichErrorService
  addUserContext userData    id  string  email  string
    if  Raven isSetup
      Raven setUserContext userData



  removeUserContext
    this addUserContext


import   Injectable   from   angular core

 Injectable
export class GoogleAnalyticsEventsService

  emitEvent eventCategory  string
            eventAction  string
            eventLabel  string   null
            eventValue  number   null
    if   typeof ga       undefined     return
    ga  send    event
      eventCategory
      eventAction
      eventLabel
      eventValue



import   as moment from  moment
import   Observable   from  rxjs Observable
import   I18n   from     i18n i18n
import   LanguageService   from    language service

describe  LanguageService
  let userSessionService  any
  let userService  any
  let activatedRoute  any
  let service  LanguageService
  let queryParamMap  any

  beforeEach
    userService   jasmine createSpyObj  userService     update
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    userService update and returnValue Observable of null
    queryParamMap   jasmine createSpyObj  queryParamMap     get
    activatedRoute    snapshot   queryParamMap
    service   new LanguageService userSessionService  userService  activatedRoute
    userSessionService currentUser and returnValue Observable of  language


  describe  setLocale
    beforeEach
      spyOn service   changeLocale


    describe  if user is logged in
      it  changes locale to the one of the user if has language set
        userSessionService currentUser and returnValue Observable of  language   de CH
        service setLocale
        expect service changeLocale  toHaveBeenCalledWith  de CH


      it  updates the user with the default locale  if no language set
        spyOn service   browserLocale   and returnValue  es CH
        service setLocale
        expect service changeLocale  toHaveBeenCalledWith  en CH



    describe  has no language set
      it  takes url param as the first priority if given
        queryParamMap get and returnValue  de CH
        spyOn window localStorage   getItem   and returnValue  fr CH
        spyOn service   browserLocale   and returnValue  es CH
        service setLocale
        expect queryParamMap get  toHaveBeenCalledWith  locale
        expect service changeLocale  toHaveBeenCalledWith  de CH


      it  takes default language if locale in url param is not supported
        queryParamMap get and returnValue  es CH
        service setLocale
        expect queryParamMap get  toHaveBeenCalledWith  locale
        expect service changeLocale  toHaveBeenCalledWith  en CH


      it  takes the stored locale as the second priority
        queryParamMap get and returnValue null
        spyOn window localStorage   getItem   and returnValue  fr CH
        spyOn service   browserLocale   and returnValue  es CH
        service setLocale
        expect queryParamMap get  toHaveBeenCalledWith  locale
        expect window localStorage getItem  toHaveBeenCalled
        expect service changeLocale  toHaveBeenCalledWith  fr CH


      it  takes the browser locale as third priority
        queryParamMap get and returnValue null
        spyOn window localStorage   getItem   and returnValue null
        spyOn service   browserLocale   and returnValue  it CH
        service setLocale
        expect queryParamMap get  toHaveBeenCalledWith  locale
        expect window localStorage getItem  toHaveBeenCalled
        expect service browserLocale  toHaveBeenCalled
        expect service changeLocale  toHaveBeenCalledWith  it CH


      it  takes default language if browser locale is not supported
        spyOn window localStorage   getItem   and returnValue null
        queryParamMap get and returnValue null
        spyOn service   browserLocale   and returnValue  es CH
        service setLocale
        expect service changeLocale  toHaveBeenCalledWith  en CH




  describe  changeLocale
    beforeEach
      spyOn window localStorage   setItem
      spyOn I18n   setLang
      spyOn moment   locale


    it  stores the locale to the local storage
      service changeLocale  de CH
      expect window localStorage setItem  toHaveBeenCalledWith  locale    de CH


    it  sets the locale in the i18n service
      service changeLocale  de CH
      expect I18n setLang  toHaveBeenCalledWith  de


    it  sets the moment locale
      service changeLocale  de CH
      expect moment locale  toHaveBeenCalledWith  de


    it  does not update the user if not logged in
      service changeLocale  de CH
      expect userService update  not toHaveBeenCalled


    describe  if logged in
      beforeEach
        userSessionService currentUser and returnValue Observable of  language   de CH
        service setLocale


      it  updates the locale if is not as the users language
        service changeLocale  it CH
        expect userService update  toHaveBeenCalledWith  language   it CH


      it  does nothing  if the language is already the one required
        service changeLocale  de CH
        expect userService update  not toHaveBeenCalled




import   Injectable   from   angular core
import   ActivatedRoute   from   angular router
import   as moment from  moment
import  moment locale de
import  moment locale en gb
import  moment locale fr
import  moment locale it
import   I18n   from     i18n i18n
import   User   from     models user model
import   UserService   from    user service
import   UserSessionService   from    user session service

 Injectable
export class LanguageService
  static readonly SUPPORTED LANGUAGES     de    it    fr    en

  private user  User

  constructor private userSessionService  UserSessionService  private userService  UserService  private route  ActivatedRoute

  setLocale
    this userSessionService currentUser   subscribe user
      this user   user
      if  this user    this user language
        this changeLocale this user language
        else
        this changeLocale this getLocaleByPriority




  private updateUser languageCode  string
    this user language   languageCode
    this userService update this user  subscribe


  private getLocaleByPriority    string
    return this getLocaleByUrl      this getLocaleByLocalStorage      this getLocaleFromBrowser


  private getLocaleByUrl    string   null
    const locale   this route snapshot queryParamMap get  locale
    return locale   this getAvailableLocale locale    null


  private getLocaleByLocalStorage    string   null
    return window localStorage getItem  locale


  private getLocaleFromBrowser    string
    return this getAvailableLocale this browserLocale


  private getAvailableLocale locale  string
    const shortLocale   locale   locale substring 0  2    null
    return LanguageService SUPPORTED LANGUAGES includes shortLocale    locale    en CH


  browserLocale    string
    return navigator language


  changeLocale locale  string
    const lang   locale substring 0  2
    window localStorage setItem  locale   locale
       TODO  Update LOCALE ID or reload page or whatever  so that pipes also get updated
    I18n setLang lang
    moment locale lang
    if  this user    this user language     locale
      this updateUser locale



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   LinkUrlApi   from     api endpoints link url api service
import   LinkUrlService   from    link url service

describe  LinkUrlService
  const api  LinkUrlApi   new LinkUrlApi null
  const service  LinkUrlService   new LinkUrlService api

  describe  getLinkUrl
    it  returns the link url   done
      spyOn api   getLinkUrl   and returnValue Observable of  xyz
      service getLinkUrl 1  subscribe linkUrl
        expect api getLinkUrl  toHaveBeenCalledWith 1
        expect linkUrl  toEqual  xyz
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   LinkUrlApi   from     api endpoints link url api service

 Injectable
export class LinkUrlService
  constructor private api  LinkUrlApi

  getLinkUrl workFlowId  number   Observable string
    return this api getLinkUrl workFlowId


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   FirebaseSerializedNotification  Notification   from     shared models notification model
import   NotificationService   from    notification service

describe  NotificationService
  let firebase  any
  let firebaseList  any
  let sessionService  any
  let service  NotificationService

  beforeEach
    firebase   jasmine createSpyObj  firebase     list
    firebaseList   jasmine createSpyObj  firebaseList     update
    sessionService   jasmine createSpyObj  sessionService     getCurrentUserId
    service   new NotificationService firebase  sessionService


  describe  markAsRead
    it  marks the corresponding notification as read
      firebase list and returnValue firebaseList
      sessionService getCurrentUserId and returnValue 444
      service markAsRead  any   key  123
      expect firebaseList update  toHaveBeenCalledWith 123   isRead  true



  describe  all
    function buildNotification firebaseResponse  FirebaseSerializedNotification
      return new Notification
        firebaseResponse  key
        firebaseResponse type
        firebaseResponse message
        firebaseResponse createdAtTimestamp
        firebaseResponse isRead
        firebaseResponse url



    it  returns all notificatins as deserialized objects   done
      const firebaseResponse  FirebaseSerializedNotification
         key   123
        type   activity
        message   message1
        createdAtTimestamp  123
        url   yolo
        isRead  false

         key   456
        type   activity
        message   message2
        createdAtTimestamp  123
        url   yolo
        isRead  true

      firebase list and returnValue Observable of firebaseResponse
      service all   subscribe  notifications  Notification
        expect notifications 0   toEqual buildNotification firebaseResponse 0
        expect notifications 1   toEqual buildNotification firebaseResponse 1
        done




import   Injectable   from   angular core
import   AngularFireDatabase  FirebaseListObservable   from  angularfire2 database
import  rxjs add observable from
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   FirebaseSerializedNotification  Notification   from     shared models notification model
import   SessionService   from    session service

 Injectable
export class NotificationService
  constructor private db  AngularFireDatabase  private sessionService  SessionService

  all    Observable Notification
    return Observable from this firebaseList    map
      serializedNotifications    serializedNotifications map
        serializedNotification    this deserializeFirebaseNotification serializedNotification




  markAsRead notification  Notification
    this firebaseList   update notification key   isRead  true


  private firebaseList    FirebaseListObservable FirebaseSerializedNotification
    return this db list   notifications   this sessionService getCurrentUserId
      query
        orderByChild   createdAtTimestamp
        limitToLast  20




  private deserializeFirebaseNotification serializedNotification  FirebaseSerializedNotification
    return new Notification
      serializedNotification  key
      serializedNotification type
      serializedNotification message
      serializedNotification createdAtTimestamp
      serializedNotification isRead
      serializedNotification url



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   NotificationSettingsApi   from     api endpoints notification settings api
import
  notificationSettingsCreateMockDataJSON  notificationSettingsDataMockJSON  notificationSettingsMockJSON
  from     api mock data notification settings mock data
import   NotificationSettingsService   from    notification settings service

describe  NotificationSettingsService
  const api  NotificationSettingsApi   new NotificationSettingsApi null
  const service  NotificationSettingsService   new NotificationSettingsService api

  describe  updateSettings
    it  updates the notification settings   done
      spyOn api   create   and returnValue Observable of notificationSettingsCreateMockDataJSON
      service updateSettings notificationSettingsDataMockJSON  3  subscribe
        expect api create  toHaveBeenCalledWith notificationSettingsCreateMockDataJSON  3
        done




  describe  getSettings
    it  returns the notification settings   done
      spyOn api   get   and returnValue Observable of notificationSettingsMockJSON
      service getSettings 3  subscribe
        expect api get  toHaveBeenCalledWith 3
        done




import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   NotificationSettingsApi   from     api endpoints notification settings api
import
  NotificationSettings
  NotificationSettingsApiObjectCreateRequest
  from     api endpoints notification settings api interface

 Injectable
export class NotificationSettingsService
  constructor private api  NotificationSettingsApi

  getSettings userId  number   Observable NotificationSettings
    return this api get userId


  updateSettings notificationSettings  NotificationSettings  userId  number   Observable NotificationSettings
    const data  NotificationSettingsApiObjectCreateRequest
      data
        type   notificationSettings
        attributes
          notification settings
            event notifications  notificationSettings eventNotifications
            custom notifications  notificationSettings customNotifications




    return this api create data  userId


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   DeclinedOfferApi   from     api endpoints declined offer api service
import   OfferApi   from     api endpoints offer api service
import   DeclinedOffer   from     shared models work states declined offer model
import   Offer   from     shared models work states offer model
import   OfferService   from    offer service

describe  OfferService
  const api  OfferApi   new OfferApi null
  const declineApi  DeclinedOfferApi   new DeclinedOfferApi null
  const service  OfferService   new OfferService api  declineApi

  describe  all methods related to a form
    let offerFormGroup  any
    let expectedPostData  any

    beforeEach
      offerFormGroup    any
        value
          chosenTimes    from   2017 02 02T18 00 00 000Z   to   2017 02 02T21 00 00 000Z
          offerText   This is my offer
          workPlace   Something
          cost
            work
              hourlyRate  10000
              duration  120
              fixedRate  null

            items




      expectedPostData    any
        data
          type   offers
          attributes
            chosenTimes    from   2017 02 02T18 00 00 000Z   to   2017 02 02T21 00 00 000Z
            offerText   This is my offer
            workPlace   Something
            cost
              work
                hourlyRate  10000
                duration  120
                fixedRate  undefined

              items






    function isExpectedToCallTheApi method   create     update   inputData  any  apiSendData  any  doneFn        void
      spyOn api  method  and returnValue Observable of new Offer
      service method  inputData  5  subscribe
        expect api method   toHaveBeenCalledWith apiSendData  5
        doneFn



    function itBehavesLikeNullToUndefinedOffer method   create     update
      describe  when offer has not all offer attributes set
        beforeEach
          offerFormGroup value chosenTimes   null
          offerFormGroup value offerText   null
          offerFormGroup value workPlace   null
          expectedPostData data attributes chosenTimes   undefined
          expectedPostData data attributes offerText   undefined
          expectedPostData data attributes workPlace   undefined


        it  is converted to undefined to still work   done
          isExpectedToCallTheApi method  offerFormGroup  expectedPostData  done




    describe  create
      it  calls the create function of the api   done
        isExpectedToCallTheApi  create   offerFormGroup  expectedPostData  done


      itBehavesLikeNullToUndefinedOffer  create


    describe  update
      it  calls the update function of the api   done
        isExpectedToCallTheApi  update   offerFormGroup  expectedPostData  done


      itBehavesLikeNullToUndefinedOffer  update



  describe  declineOffer
    it  creates a decline offer   done
      const expectedDeclinedOffer   new DeclinedOffer
      spyOn declineApi   create   and returnValue Observable of expectedDeclinedOffer
      service declineOffer 5   test   subscribe declineOffer
        expect declineOffer  toEqual expectedDeclinedOffer
        expect declineApi create  toHaveBeenCalledWith 5   test
        done




  describe  allTalentOffersForWork
    it  lists all offers for talent   done
      spyOn api   allForWork   and returnValue Observable of  new Offer    new Offer
      service allTalentOffersForWork 3  subscribe offers
        expect offers length  toEqual 2
        expect api allForWork  toHaveBeenCalledWith 3
        done




import   Injectable   from   angular core
import   FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   CostApiRequestObject   from     api endpoints cost api interface
import   DeclinedOfferApi   from     api endpoints declined offer api service
import   OfferApiObjectCreateRequest   from     api endpoints offer api interface
import   OfferApi   from     api endpoints offer api service
import   DeclinedOffer   from     shared models work states declined offer model
import   Offer   from     shared models work states offer model
import   CostFormValue  OfferFormValue   from    talent offer form builder service talent offer form builder service types

 Injectable
export class OfferService
  constructor private api  OfferApi  private declinedOfferApi  DeclinedOfferApi

  declineOffer id  number  reason  string   Observable DeclinedOffer
    return this declinedOfferApi create id  reason


  update offerForm  FormGroup  offerId  number   Observable Offer
    const postData  OfferApiObjectCreateRequest   this createOfferCreateRequest offerForm value
    return this api update postData  offerId


  allTalentOffersForWork workId  number   Observable Offer
    return this api allForWork workId


  create offerForm  FormGroup  workId  number   Observable Offer
    const postData  OfferApiObjectCreateRequest   this createOfferCreateRequest offerForm value
    return this api create postData  workId


  private createOfferCreateRequest offer  OfferFormValue   OfferApiObjectCreateRequest
    return  OfferApiObjectCreateRequest
      data
        type   offers
        attributes   any
          chosenTimes  offer chosenTimes    undefined
          offerText  offer offerText    undefined
          workPlace  offer workPlace    undefined
          cost  this createCostApiObject offer cost





  private createCostApiObject cost  CostFormValue   CostApiRequestObject
    return
      work
        hourlyRate  cost work hourlyRate    undefined
        fixedRate  cost work fixedRate    undefined
        duration  cost work duration    undefined

      items  cost items



import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve  Router   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Receipt   from     shared models work states receipt
import   ReceiptService   from    receipt service

 Injectable
export class ReceiptDetailResolver implements Resolve Receipt
  constructor private receiptService  ReceiptService  private router  Router

  resolve route  ActivatedRouteSnapshot   Observable Receipt
    return this receiptService getById route params  id    map receipt
      if   receipt
        this router navigate   404
        return

      return receipt



import  rxjs add observable of
import   Observable   from  rxjs Observable
import   ReceiptApi   from     api endpoints receipt api service
import   Receipt   from     shared models work states receipt
import   ReceiptService   from    receipt service

describe  ReceiptService
  const api  ReceiptApi   new ReceiptApi null
  const service  ReceiptService   new ReceiptService api

  describe  all
    beforeEach
      spyOn api   all   and returnValue Observable of
        data
          new Receipt
          new Receipt




    describe  allForTalent
      it  lists all receipts for talent   done
        service allForTalent 1  subscribe receipts
          expect receipts data length  toEqual 2
          expect api all  toHaveBeenCalledWith  talent   1  25
          done




    describe  allForCustomer
      it  lists all unrated receipts for customer   done
        service allForCustomer 2  5  subscribe receipts
          expect receipts data length  toEqual 2
          expect api all  toHaveBeenCalledWith  user   2  5
          done





  describe  getById
    it  lists a contract by the current url   done
      const expectedReceipt   new Receipt
      spyOn api   get   and returnValue Observable of expectedReceipt
      service getById 5  subscribe receipt
        expect receipt  toEqual expectedReceipt
        expect api get  toHaveBeenCalledWith 5
        done




  describe  create
    it  creates a receipt   done
      const bill    any    id  3
      const paymentMethod    any    id  5

      const expectedReceipt   new Receipt
      spyOn api   create   and returnValue Observable of expectedReceipt
      service create bill  paymentMethod  subscribe receipt
        expect receipt  toEqual jasmine any Receipt
        expect api create  toHaveBeenCalledWith bill id    payment method id  paymentMethod id
        done




import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Paginated   from     api api types
import   ReceiptApi   from     api endpoints receipt api service
import   PaymentMethod   from     payment payment method model
import   Bill   from     shared models work states bill
import   Receipt   from     shared models work states receipt

 Injectable
export class ReceiptService
  constructor private api  ReceiptApi

  allForTalent page  number  size   25   Observable Paginated Receipt
    return this api all  talent   page  size


  allForCustomer page  number  size   25   Observable Paginated Receipt
    return this api all  user   page  size


  getById id  number   Observable Receipt
    return this api get id


  create bill  Bill  paymentMethod  PaymentMethod   Observable Receipt
    return this api create bill id    payment method id  paymentMethod id


import   Observable   from  rxjs Observable
import   Subcategory   from     categories shared subcategory model
import   I18n   from     i18n i18n
import   RefererService   from    referer service

describe  RefererService
  let service  RefererService
  let activatedRoute  any
  let sessionStorageSetSpy  any
  let sessionStorageGetSpy  any

  beforeEach
    sessionStorageSetSpy   spyOn window sessionStorage   setItem
    sessionStorageGetSpy   spyOn window sessionStorage   getItem


  describe  isHornbach
    it  returns false if the referer is not hornbach
      activatedRoute    queryParams  Observable of
      service   new RefererService activatedRoute
      expect service isHornbach    toBe false


    it  returns true if the referer is hornbach
      activatedRoute    queryParams  Observable of  referer   hornbach
      service   new RefererService activatedRoute
      expect service isHornbach    toBe true



  describe  isTutti
    it  returns false if the referer is not tutti
      activatedRoute    queryParams  Observable of
      service   new RefererService activatedRoute
      expect service isTutti    toBe false


    it  returns true if the referer is tutti
      activatedRoute    queryParams  Observable of  referer   tutti
      service   new RefererService activatedRoute
      expect service isTutti    toBe true



  describe  construction
    it  sets the referer by session storage
      sessionStorageGetSpy and returnValue  hornbach
      activatedRoute    queryParams  Observable of
      service   new RefererService activatedRoute
      expect service referer  toBe  hornbach
      expect sessionStorageGetSpy  toHaveBeenCalledWith  referer


    describe  when has a valid referer in query params
      beforeEach
        activatedRoute    queryParams  Observable of  referer   tutti
        sessionStorageGetSpy and returnValue  oldReferer
        service   new RefererService activatedRoute


      it  sets the referer to the session store
        expect sessionStorageSetSpy  toHaveBeenCalledWith  referer    tutti


      it  returns the referer if is an available referer
        expect service referer  toBe  tutti



    describe  when referer is hornbach
      beforeEach
        activatedRoute    queryParams  Observable of  referer   hornbach
        service   new RefererService activatedRoute


      it  sets the referer to the session store
        expect sessionStorageSetSpy  toHaveBeenCalledWith  referer    hornbach



    describe  when has a invalid referer in query params
      beforeEach
        activatedRoute    queryParams  Observable of  referer   something
        service   new RefererService activatedRoute


      it  sets the referer not to the session store
        expect sessionStorageSetSpy  not toHaveBeenCalled


      it  has an undefined referer
        expect service referer  toBe undefined




  describe  hornbachPlaceholders
    beforeEach
      service   new RefererService activatedRoute


    describe  hornbachTitleTranslation
      let subcategory  Subcategory

      beforeEach
        subcategory   new Subcategory  id  2


      it  returns a string based on the subcategory passed subcategory id
        expect service hornbachTitleTranslation subcategory
           toBe I18n t subcategorySelection exampleTitle subcategory2


      describe  when subcategory id is less than 1
        beforeEach
          subcategory   new Subcategory  id   1


        it  returns an empty string if
          expect service hornbachTitleTranslation subcategory   toBe



      describe  when subcategory id is greater than 12
        beforeEach
          subcategory   new Subcategory  id  13


        it  returns an empty string if
          expect service hornbachTitleTranslation subcategory   toBe


        describe  when subcategory id is less than 1
          beforeEach
            subcategory   new Subcategory  id   1


          it  returns an empty string if
            expect service hornbachTitleTranslation subcategory   toBe



        describe  when subcategory id is greater than 12
          beforeEach
            subcategory   new Subcategory  id  13


          it  returns an empty string if
            expect service hornbachTitleTranslation subcategory   toBe





    describe  hornbachDescriptionTranslation
      let subcategory  Subcategory

      beforeEach
        subcategory   new Subcategory  id  5


      it  returns a string based on the subcategory passed subcategory id
        expect service hornbachDescriptionTranslation subcategory
           toBe I18n t subcategorySelection exampleDescription subcategory5


      describe  when subcategory id is less than 1
        beforeEach
          subcategory   new Subcategory  id   1


        it  returns an empty string if
          expect service hornbachDescriptionTranslation subcategory   toBe



      describe  when subcategory id is greater than 12
        beforeEach
          subcategory   new Subcategory  id  13


        it  returns an empty string if
          expect service hornbachDescriptionTranslation subcategory   toBe





import   Injectable  OnDestroy   from   angular core
import   ActivatedRoute   from   angular router
import   Subscription   from  rxjs Subscription
import   Subcategory   from     categories shared subcategory model
import   I18n   from     i18n i18n
import   SubcategoryKey   from    referer types

 Injectable
export class RefererService implements OnDestroy
  i18n   I18n
  private  referer   string
  private subscription  Subscription

  private ALLOWED REFERERS  string       hornbach    tutti

  constructor route  ActivatedRoute
    this  referer   window sessionStorage getItem  referer
    this subscription   route queryParams subscribe params    this onParamsChange params  referer


  private onParamsChange referer  string
    const allowedReferer   this getAllowedReferer referer
    if  allowedReferer
      this setReferer allowedReferer



  private getAllowedReferer referer  string
    return this ALLOWED REFERERS includes referer    referer   undefined


  get referer    string
    return this  referer


  private setReferer value  string
    window sessionStorage setItem  referer   value
    this  referer   value


  isHornbach    boolean
    return this referer      hornbach


  isTutti    boolean
    return this referer      tutti


  ngOnDestroy    void
    this subscription unsubscribe


  hornbachTitleTranslation subcategory  Subcategory   string
    return this hornBachTranslation  exampleTitle   subcategory id


  hornbachDescriptionTranslation subcategory  Subcategory
    return this hornBachTranslation  exampleDescription   subcategory id


  private hornBachTranslation kind   exampleDescription     exampleTitle   subcategoryId  number
    if  subcategoryId    0    subcategoryId   12
      return

    const subcategoryKey  SubcategoryKey    SubcategoryKey    subcategory    subcategoryId

    return this i18n t subcategorySelection kind  subcategoryKey


export type SubcategoryKey    subcategory2     subcategory3     subcategory4     subcategory5     subcategory6     subcategory7
   subcategory8     subcategory9     subcategory10     subcategory11     subcategory12
import  rxjs add operator first
import   RoleStorageService   from    role storage service

describe  RoleStorageService
  let service  RoleStorageService

  function initServiceWithRole role   customer     talent
    mockLocalStorageToReturnRole role
    service   new RoleStorageService


  function mockLocalStorageToReturnRole role   customer     talent
    spyOn window localStorage   getItem   and returnValue role


  describe  constructor of RoleStorageService
    it  loads the current role from the localstorage
      initServiceWithRole  talent
      expect window localStorage getItem  toHaveBeenCalledWith  role


    it  sets the current role to customer if no role is set   done
      initServiceWithRole null
      service getCurrentRole   first   subscribe role
        expect role  toBe  customer
        done




  describe  getCurrentRole
    it  returns  talent  if is stored as talent   done
      initServiceWithRole  talent
      service getCurrentRole   first   subscribe role
        expect role  toBe  talent
        done



    it  returns  customer  if is stored as talent   done
      initServiceWithRole  customer
      service getCurrentRole   first   subscribe role
        expect role  toBe  customer
        done




  describe  setRoleToTalent
    beforeEach
      initServiceWithRole  customer


    it  changes the role to talent   done
      service setRoleToTalent
      service getCurrentRole   first   subscribe role
        expect role  toBe  talent
        done



    it  refreshes the local storage value
      spyOn window localStorage   setItem
      service setRoleToTalent
      expect window localStorage setItem  toHaveBeenCalledWith  role    talent



  describe  setRoleToCustomer
    beforeEach
      initServiceWithRole  talent


    it  changes the role to customer   done
      service setRoleToCustomer
      service getCurrentRole   subscribe role
        expect role  toBe  customer
        done



    it  refreshes the local storage value
      spyOn window localStorage   setItem
      service setRoleToCustomer
      expect window localStorage setItem  toHaveBeenCalledWith  role    customer



import   Injectable   from   angular core
import   Observable   from  rxjs Observable
import   ReplaySubject   from  rxjs ReplaySubject

type Role    customer     talent
type RoleInLocalStorage    customer     talent    null

 Injectable
export class RoleStorageService
  private role  Observable Role
  private roleSource  ReplaySubject Role    new ReplaySubject Role  1

  constructor
    this role   this roleSource asObservable
    this initRoleByLocalStorage


  private initRoleByLocalStorage
    const role  RoleInLocalStorage    RoleInLocalStorage  window localStorage getItem  role
    if  role
      this roleSource next role
      else
      this setRoleToCustomer



  getCurrentRole    Observable Role
    return this role


  setRoleToTalent
    this setRole  talent


  setRoleToCustomer
    this setRole  customer


  private setRole newRole  Role
    window localStorage setItem  role   newRole
    this roleSource next newRole


import   NavigationEnd  NavigationStart   from   angular router
import   Observable   from  rxjs Observable
import   ScrollToTopService   from    scroll to top service

describe  ScrollToTopService
  let service  ScrollToTopService

  beforeEach
    spyOn window   scrollTo


  function registerListener serviceRouter  any
    service   new ScrollToTopService serviceRouter
    service registerListener


  describe  registerListener
    it  ignores events with auth modals  regardless if there are query params or not
      const url     my works offers page 2 auth register
      const router  any    events  Observable of new NavigationEnd 1  url  url
      registerListener router
      expect window scrollTo  not toHaveBeenCalled


    it  ignores events which are listed in the exceptions
      const url     public works
      const router  any    events  Observable of new NavigationEnd 1  url  url
      registerListener router
      expect window scrollTo  not toHaveBeenCalled


    it  ignores events which are listed in the exceptions and have query params
      const url     public works page 3
      const router  any    events  Observable of new NavigationEnd 1  url  url
      registerListener router
      expect window scrollTo  not toHaveBeenCalled


    it  ignores other events than NavigationEnd
      const router  any    events  Observable of new NavigationStart 1
      registerListener router
      expect window scrollTo  not toHaveBeenCalled


    it  scrolls to top when event is not ignored
      const url     public works 3
      const router  any    events  Observable of new NavigationEnd 1  url  url
      registerListener router
      expect window scrollTo  toHaveBeenCalled



import   Injectable   from   angular core
import   NavigationEnd  Router   from   angular router

 Injectable
export class ScrollToTopService
  static readonly EXCEPTIONS      public works     talents     archived     receipts     completed works

  constructor private router  Router

  registerListener
    this router events
       filter event    event instanceof NavigationEnd
       subscribe event
        this scrollToTop  NavigationEnd  event



  private scrollToTop event  NavigationEnd
    if   this isException event url      this isAuthModal event url
      window scrollTo 0  0



  private isException path  string   boolean
    return ScrollToTopService EXCEPTIONS some url    path split      0      url


  private isAuthModal path  string   boolean
    return path includes   auth


import   NavigationEnd  NavigationStart   from   angular router
import   Observable   from  rxjs Observable
import   I18n   from     i18n i18n
import   SEOService   from    seo service

describe  SEOService
  let title  any
  let meta  any
  let service  SEOService
  const router  any    events  Observable of new NavigationEnd 1
  const customTitle    My Custom Page Title
  const defaultTitle   I18n t metaData default title
  const defaultDescription   I18n t metaData default description

  beforeEach
    title   jasmine createSpyObj  title     setTitle
    meta   jasmine createSpyObj  meta     updateTag


  function getMockActivatedRoute customMeta  any   any
    return
      root
        snapshot
          data   title  defaultTitle  description  defaultDescription

        children
          children
            snapshot
              data  customMeta

            children






  function registerPageListener serviceRouter  any  serviceRoute  any  serviceTitle  any  serviceMeta  any
    service   new SEOService serviceRouter  serviceRoute  serviceTitle  serviceMeta
    service registerSetMetaDataListener


  describe  constructor works
    it  sets the default meta title if is root route and therefore has no children
      const route  any
        root
          snapshot
            data   title  defaultTitle

          children


      registerPageListener router  route  title  meta
      expect title setTitle  toHaveBeenCalledWith defaultTitle


    it  sets the default meta title if page has no data set
      const route  any
        root
          snapshot
            data   title  defaultTitle

          children
            children
              snapshot
              children




      registerPageListener router  route  title  meta
      expect title setTitle  toHaveBeenCalledWith defaultTitle


    it  sets the child meta title if given
      registerPageListener router  getMockActivatedRoute  title  customTitle    title  meta
      expect title setTitle  toHaveBeenCalledWith customTitle


    it  sets the child meta description if given
      const customDescription    My Custom Page Description
      registerPageListener router  getMockActivatedRoute  description  customDescription    title  meta
      expect meta updateTag  toHaveBeenCalledWith  name   description   content  customDescription


    it  sets the default meta title if page has no title set
      registerPageListener router  getMockActivatedRoute      title  meta
      expect title setTitle  toHaveBeenCalledWith defaultTitle


    it  sets the default meta description if page has no description set
      registerPageListener router  getMockActivatedRoute  title  customTitle    title  meta
      expect meta updateTag  toHaveBeenCalledWith  name   description   content  defaultDescription


    it  bubbles back for each property
      const pageDescription    My Meta description
      const pageTitle    My Title
      const route  any
        root
          snapshot
            data   title  defaultTitle

          children
            children
              snapshot
                data    description   Another Description   title   Another Title

              children
                snapshot
                  data    description  pageDescription

                children
                  snapshot
                    data    title  pageTitle

                  children






      registerPageListener router  route  title  meta
      expect title setTitle  toHaveBeenCalledWith pageTitle
      expect meta updateTag  toHaveBeenCalledWith  name   description   content  pageDescription


    it  ignores other events than NavigationEnd
      const router2  any    events  Observable of new NavigationStart 1
      registerPageListener router2   any      title  meta
      expect title setTitle  not toHaveBeenCalled
      expect meta updateTag  not toHaveBeenCalled



import   Injectable   from   angular core
import   Meta  Title   from   angular platform browser
import   ActivatedRoute  ActivatedRouteSnapshot  NavigationEnd  Router   from   angular router
import   routes   from     app routing module

type MetaAttribute    title     description

 Injectable
export class SEOService
  constructor private router  Router  private route  ActivatedRoute  private title  Title  private meta  Meta

  registerSetMetaDataListener
    this router events filter event    event instanceof NavigationEnd  subscribe
      const activatedRouteBreadcrumbs  ActivatedRoute     this getCurrentActivatedRouteBreadcrumbs
      this setMetaTitle activatedRouteBreadcrumbs
      this setMetaDescription activatedRouteBreadcrumbs



  private setMetaTitle activatedRouteBreadcrumbs  ActivatedRoute
    this title setTitle this getCustomOrDefaultMetaTag activatedRouteBreadcrumbs   title


  private setMetaDescription activatedRouteBreadcrumbs  ActivatedRoute
    this meta updateTag
      name   description
      content  this getCustomOrDefaultMetaTag activatedRouteBreadcrumbs   description



  private getCustomOrDefaultMetaTag activatedRouteBreadcrumbs  ActivatedRoute    attributeName  MetaAttribute
    for  const activatedRoute of activatedRouteBreadcrumbs
      const routeSnapshot   activatedRoute snapshot
      if  this routeSnapshotHasDataAttribute routeSnapshot  attributeName
        return routeSnapshot data attributeName


    return routes 0  data attributeName


  private routeSnapshotHasDataAttribute routeSnapshot  ActivatedRouteSnapshot  attributeName  MetaAttribute
    return routeSnapshot    routeSnapshot hasOwnProperty  data      routeSnapshot data hasOwnProperty attributeName


  private getCurrentActivatedRouteBreadcrumbs    ActivatedRoute
    const currentRouteBreadcrumb  ActivatedRoute      this route root
    while  currentRouteBreadcrumb 0  children 0      undefined
      currentRouteBreadcrumb unshift currentRouteBreadcrumb 0  children 0

    return currentRouteBreadcrumb


import   Response   from   angular http
import   Observable   from  rxjs Observable
import   Profile   from     authentication models profile model
import   SessionService   from    session service

   tslint disable no empty
export class SessionServiceMock
  static getProviders    any
    return
       provide  SessionService  useClass  this



  logout

  isLoggedIn     return Observable of false

  login  profile  Profile   onSuccess        void   onError   response  Response     void

  register  profile  Profile   onSuccess        void   onError   response  Response     void

import   Response  ResponseOptions   from   angular http
import   Observable   from  rxjs Observable
import   ResponseError   from     mocks
import   GoogleAnalyticsEventsService   from    google analytics events service
import   SessionService   from    session service

describe  SessionService
  let router  any
  let tokenService  any
  let refererService  any
  let googleAnalytics  any
  let service  SessionService

  beforeEach
    tokenService   jasmine createSpyObj  tokenService     init    userSignedIn    signIn    signOut
       resetPassword    updatePassword    registerAccount    validateToken
    const catchSpy   jasmine createSpyObj  chainedMock     catch
    catchSpy catch and returnValue mockSuccessfulResponse
    tokenService validateToken and returnValue catchSpy
    router   jasmine createSpyObj  router     navigate
    refererService    referer   1234
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent
    service   new SessionService tokenService  router  refererService  googleAnalytics


  function mockErrorObservableResponse
    return Observable throw new ResponseError


  function mockSuccessfulResponse    Observable Response
    return Observable of new Response new ResponseOptions  body        status  200


  describe  construction
    it  initiates the correct random seed value
      const seedNumber   parseFloat service getRandomSeed
      expect 0    seedNumber    1    seedNumber  toBeTruthy



  describe  register
    beforeEach
      tokenService registerAccount and returnValue mockSuccessfulResponse


    it  calls the token service
      const profile    email   email   password   password
      service register  any  profile
      expect tokenService registerAccount  toHaveBeenCalledWith
           profile
        passwordConfirmation  profile password
        referer  refererService referer



    it  calls the GoogleAnalyticsEventsService
      service register  any
      expect googleAnalytics emitEvent  toHaveBeenCalledWith  User    registered


    it  sets the logged in status to true   done
      service register  any
      service isLoggedIn   subscribe isLoggedIn
        expect isLoggedIn  toBe true
        done



    it  calls the onSuccess
      const onSuccess   jasmine createSpy  onSuccessSpy
      service register  any      onSuccess
      expect onSuccess  toHaveBeenCalled


    describe  if not successfull
      beforeEach
        tokenService registerAccount and returnValue mockErrorObservableResponse


      it  calls the onError
        const onError   jasmine createSpy  onErrorSpy
        service register  any                onError
        expect onError  toHaveBeenCalled





   TODO  Still to be fixed
   import   Response  ResponseOptions   from   angular http
   import   Observable   from  rxjs Observable
   import  rxjs add observable throw
   import   Profile   from     authentication models profile model
   import   ResponseError   from     mocks http mock
   import   SessionService   from    session service
   import   TalentCheckService   from    talent check service

   describe  SessionService
     const talentCheckService  TalentCheckService    any   setIsTalentTo
     let tokenService  any
     let enrichErrorService  any
     let service  SessionService

     beforeEach
       tokenService   jasmine createSpyObj  tokenService     init    validateToken    userSignedIn    signIn    signOut
          resetPassword    updatePassword    registerAccount
       enrichErrorService   jasmine createSpyObj  EnrichErrorService     addUserContext    removeUserContext
       service   new SessionService tokenService  talentCheckService  enrichErrorService
       service currentUserData    email   john example com   id  3


     function mockErrorObservableResponse
       return Observable throw new ResponseError


     function mockSuccessValidateTokenResponse    Observable Response
       return Observable of new Response new ResponseOptions  status  200


     function expectisLoggedIn spyResponse  any  expectations   response   boolean     void
       tokenService validateToken and returnValue spyResponse
       service isLoggedIn   subscribe response
         expectations response

       expect tokenService validateToken  toHaveBeenCalled


     function expectIfIsLoggedIn expectations   response   boolean     void
       expectisLoggedIn mockSuccessValidateTokenResponse    expectations


     function expectIfIsNotLoggedIn expectations   response   boolean     void
       expectisLoggedIn mockErrorObservableResponse    expectations


     describe  isLoggedIn
       describe  logged in
         it  returns true    done
           tokenService userSignedIn and returnValue true
           expectIfIsLoggedIn response
             expect response  toBe true
             expect tokenService userSignedIn  toHaveBeenCalled
             done



         it  sets the state of isAuthenticated to true    done
           tokenService userSignedIn and returnValue true
           expectIfIsLoggedIn
             expect service isAuthenticated    toBe true
             expect tokenService userSignedIn  toHaveBeenCalled
             done



         it  does not call the service a second time  but returns directly true    done
           tokenService userSignedIn and returnValue true
           expectIfIsLoggedIn
             expect tokenService validateToken  toHaveBeenCalledTimes 1
             service isLoggedIn   subscribe response
               expect response  toBe true
               expect tokenService validateToken  toHaveBeenCalledTimes 1
               done




         it  returns false if tokenService has no token data    done
           tokenService userSignedIn and returnValue false
           service isLoggedIn   subscribe response
             expect response  toEqual false
             expect tokenService userSignedIn  toHaveBeenCalled
             expect tokenService validateToken  not toHaveBeenCalled
             done




       describe  not logged in
         it  doesnt call validate token if there is no user data
           tokenService userSignedIn and returnValue false
           expect service isLoggedIn    toEqual Observable of false
           expect tokenService userSignedIn  toHaveBeenCalled
           expect tokenService validateToken  not toHaveBeenCalled


         it  returns false    done
           tokenService userSignedIn and returnValue true
           expectIfIsNotLoggedIn response
             expect response  toBe false
             done



         it  does not change the state of isAuthenticated    done
           tokenService userSignedIn and returnValue true
           expectIfIsNotLoggedIn
             expect service isAuthenticated    toBe false
             done





     describe  login
       it  assigns isLoggedIn to true
         const callbackObj
           onSuccess      void    undefined

         spyOn callbackObj   onSuccess
         const response   new Response new ResponseOptions  status  200
         const observable   Observable of response
         tokenService signIn and returnValue observable
         const profile   new Profile
         service login profile  callbackObj onSuccess      void    undefined
         expect service isAuthenticated    toEqual true
         expect callbackObj onSuccess  toHaveBeenCalled
         expect enrichErrorService addUserContext  toHaveBeenCalledWith  id   3   email   john example com


       it  sets isLoggedIn to false
         const callbackObj
           onError      void    undefined

         spyOn callbackObj   onError
         tokenService signIn and returnValue mockErrorObservableResponse
         const profile   new Profile
         service login profile      void    undefined  callbackObj onError
         expect service isAuthenticated    toEqual false
         expect callbackObj onError  toHaveBeenCalled



     describe  logout
       it  assigns isTalent to false
         const response   new Response new ResponseOptions  status  200
         const observable   Observable of response
         tokenService signOut and returnValue observable
         service logout
         expect service isAuthenticated    toEqual false
         expect enrichErrorService removeUserContext  toHaveBeenCalled



     describe  resetPassword
       it  calls the resetPassword of the angular2token service   done
         tokenService resetPassword and returnValue Observable of null
         service resetPassword  my example com   subscribe
           expect tokenService resetPassword  toHaveBeenCalledWith  email   my example com
           done




     describe  updatePassword
       it  calls the updatePassword of the angular2token service   done
         tokenService updatePassword and returnValue Observable of null
         service updatePassword  password    password   subscribe
           expect tokenService updatePassword  toHaveBeenCalledWith
              password   password   passwordConfirmation   password   passwordCurrent  null

           done



       it  calls the updatePassword of the angular2token service with the current password   done
         tokenService updatePassword and returnValue Observable of null
         service updatePassword  password    password    current   subscribe
           expect tokenService updatePassword  toHaveBeenCalledWith
              password   password   passwordConfirmation   password   passwordCurrent   current

           done




     describe  register
       const profile   new Profile
       const callback
         success      void    undefined
         error      void    undefined


       it  does not change the state to logged in if registration is unsuccessful
         tokenService registerAccount and returnValue mockErrorObservableResponse
         spyOn callback   error
         expect service isAuthenticated    toBe false
         service register profile  callback success  callback error
         expect service isAuthenticated    toBe false
         expect callback error  toHaveBeenCalled


       it  changes the state to logged in if registration is successful
         const response   new Response new ResponseOptions  status  200
         const observable   Observable of response
         tokenService registerAccount and returnValue observable
         spyOn callback   success
         expect service isAuthenticated    toBe false
         service register profile  callback success  callback error
         expect service isAuthenticated    toBe true
         expect callback success  toHaveBeenCalled
         expect enrichErrorService addUserContext  toHaveBeenCalledWith  id   3   email   john example com



     describe  isAuthenticated
       it  is by default false
         expect service isAuthenticated    toEqual false



        describe  getCurrentUserEmail
          it  takes email from token service
            expect service getCurrentUserEmail    toEqual  john example com
            tokenService currentUserData    email   sam example com
            expect service getCurrentUserEmail    toEqual  sam example com



        describe  getCurrentUserId
          it  takes id from token service
            expect service getCurrentUserId    toEqual 3
            tokenService currentUserData    id  22
            expect service getCurrentUserId    toEqual 22



import   Injectable   from   angular core
import   Response   from   angular http
import   Router   from   angular router
import   UpdatePasswordData   from  angular2 token
import   Angular2TokenService   from  angular2 token
import  rxjs add observable throw
import  rxjs add operator catch
import   Observable   from  rxjs Observable
import   ReplaySubject   from  rxjs ReplaySubject
import   AppSettings   from     app settings
import   Profile   from     authentication models profile model
import   GoogleAnalyticsEventsService   from    google analytics events service
import   RefererService   from    referer service

 Injectable
export class SessionService
     TODO  Remove
  currentUserData    id  number  email  string
  private isLoggedInSource  ReplaySubject boolean    new ReplaySubject boolean  1
  private randomSeed  string

  constructor private tokenService  Angular2TokenService  private router  Router  private refererService  RefererService
              private googleAnalyticsEventsService  GoogleAnalyticsEventsService
    tokenService init
      apiPath  AppSettings BASE BACKEND URL
      updatePasswordPath   auth password
      resetPasswordCallback  AppSettings BASE FRONTEND URL      auth password reset

    this initLoggedInStatus
    this initRandomSeed


  private initRandomSeed
    this randomSeed    Math  random   toString


  getRandomSeed
    return this randomSeed


  userChanged
    this isLoggedInSource next true


  private initLoggedInStatus
    this tokenService validateToken   catch       Observable throw null   subscribe
      response
           TODO  Remove
        this currentUserData   response json   data
        this isLoggedInSource next true


        this isLoggedInSource next false




  isLoggedIn    Observable boolean
    return this isLoggedInSource asObservable


  login profile  Profile  onSuccess        void  onError   response  Response     void
    this tokenService signIn  email  profile email  password  profile password   subscribe
      response
           TODO  Remove
        this currentUserData   response json   data
        this isLoggedInSource next true
        onSuccess
         onError


  resetPassword email  string
    return this tokenService resetPassword  email


  updatePassword updatePasswordData  UpdatePasswordData
    return this tokenService updatePassword updatePasswordData


  updateEmail email  string  password  string
    return this tokenService put  auth   JSON stringify
      email
      current password  password



  logout
    this tokenService signOut
    this currentUserData   null
    this router navigate
    this isLoggedInSource next false


  register profile  Profile  onSuccess        void  onError   response  Response     void
    this tokenService registerAccount
      email  profile email
      password  profile password
      passwordConfirmation  profile password
      referer  this refererService referer
       subscribe response
         TODO  Remove
      this currentUserData   response json   data
      this isLoggedInSource next true
      this googleAnalyticsEventsService emitEvent  User    registered
      onSuccess
       onError


     TODO  Remove
  getCurrentUserEmail    string
    return this currentUserData email


     TODO  Remove
  getCurrentUserId    number
    return this currentUserData id


import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import   Observable   from  rxjs Observable
import   WorkFlow   from        shared models work flow model
import   WorkFlowService   from     work flow service

 Injectable
export class WorkFlowDetailResolver implements Resolve WorkFlow
  constructor private workFlowService  WorkFlowService

  resolve route  ActivatedRouteSnapshot   Observable WorkFlow
    return this workFlowService getById route params  id


import   Injectable   from   angular core
import   Resolve   from   angular router
import   Observable   from  rxjs Observable
import   WorkFlow   from        shared models work flow model
import   WorkFlowService   from     work flow service

 Injectable
export class WorkFlowListResolver implements Resolve WorkFlow
  constructor private workFlowService  WorkFlowService

  resolve    Observable WorkFlow
    return this workFlowService all


import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import   Observable   from  rxjs Observable
import   Talent   from     models talent model
import   TalentService   from    talent service

 Injectable
export class TalentDetailResolver implements Resolve Talent
  constructor private talentService  TalentService

  resolve route  ActivatedRouteSnapshot   Observable Talent
    return this talentService getById route params  id


import   Router  RouterStateSnapshot   from   angular router
import   Observable   from  rxjs Observable
import   MockRouter   from     mocks
import   RoleStorageService   from    role storage service
import   TalentGuardService   from    talent guard service

describe  TalentGuardService
  let service  TalentGuardService
  let userSessionService  any
  let router  Router
  let roleStorageService  RoleStorageService
  let talentRegistrationService  any
  const state  RouterStateSnapshot    any   url    customer

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     isTalent
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToCustomer
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     ensureTalent
    router    any  new MockRouter
    service   new TalentGuardService userSessionService  roleStorageService  router  talentRegistrationService


  function expectIfNotTalentYet expectation   isRegisteredAsTalent  boolean     void
    spyOn router   navigate
    userSessionService isTalent and returnValue Observable of false
    service canActivate null  state  subscribe  isRegisteredAsTalent   boolean
      expectation isRegisteredAsTalent

    expect userSessionService isTalent  toHaveBeenCalled


  describe  canActivate
    it  returns true if is talent
      userSessionService isTalent and returnValue Observable of true
      service canActivate null  state  subscribe  i  boolean
        expect i  toEqual true

      expect userSessionService isTalent  toHaveBeenCalled


    describe  if not a talent yet
      it  returns false
        expectIfNotTalentYet isRegisteredAsTalent
          expect isRegisteredAsTalent  toEqual false



      it  navigates to registration
        expectIfNotTalentYet
          expect talentRegistrationService ensureTalent  toHaveBeenCalled



      it  changes role to registration
        expectIfNotTalentYet
          expect roleStorageService setRoleToCustomer  toHaveBeenCalled





import   Injectable   from   angular core
import   CanActivate  Router  RouterStateSnapshot   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   RoleStorageService   from    role storage service
import   TalentRegistrationService   from    talent registration service
import   UserSessionService   from    user session service

 Injectable
export class TalentGuardService implements CanActivate
  constructor private userSessionService  UserSessionService  private roleStorageService  RoleStorageService  private router  Router
              private talentRegistrationService  TalentRegistrationService

  canActivate    any  state  RouterStateSnapshot   Observable boolean
    return this userSessionService isTalent   map isRegisteredAsTalent
      if   isRegisteredAsTalent
        this roleStorageService setRoleToCustomer
        this talentRegistrationService ensureTalent
           talent    this router navigate  state url



      return isRegisteredAsTalent



import   FormArray  FormBuilder  FormControl  FormGroup   from   angular forms
import   OfferForm   from        shared models offer form model
import   TalentOfferFormBuilderService   from    talent offer form builder service

describe  TalentOfferFormBuilderService
  let service  TalentOfferFormBuilderService
  let formGroup  FormGroup
  const offerForm   new OfferForm

  beforeEach
    service   new TalentOfferFormBuilderService new FormBuilder


  describe  buildForm
    beforeEach
      formGroup   service buildForm offerForm  false


    it  returns a form group
      expect formGroup  toEqual jasmine any FormGroup


    it  creates all required fields
        chosenTimes    offerText    workPlace    agb   forEach field
        expect formGroup get field   toEqual jasmine any FormControl


      expect formGroup get  cost    toEqual jasmine any FormGroup
      expect formGroup get  answers    toEqual jasmine any FormArray



  describe  validators
    let totalCostSpy  jasmine Spy

    beforeEach
      totalCostSpy   spyOn service   totalCost


    describe  costValidator
      describe  when totalCost is below minimum
        beforeEach
          totalCostSpy and returnValue TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS   5
          formGroup   service buildForm offerForm  false


        it  cost formGroup is invalid
          expect formGroup get  cost   hasError  totalCost    toBe true



      describe  when totalCost is above minimum
        beforeEach
          totalCostSpy and returnValue TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS   5
          offerForm costForm    any   isFixedPrice  true
          formGroup   service buildForm offerForm  false


        it  cost formGroup is valid
          expect formGroup get  cost   errors  toBe null



      describe  when workCost is less than 3 CHF but total is higher
        beforeEach
          offerForm costForm    any
            durationInMinutes  1
            netHourlyRate  100
            fixedRate  false
            costItemForms

          totalCostSpy and returnValue TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS

          formGroup   service buildForm offerForm  false


        it  cost formGroup is invalid
          expect formGroup get  cost   hasError  totalCost    toBe false
          expect formGroup get  cost   hasError  work    toBe true





  describe  totalCost
    let costFormGroup  FormGroup

    describe  when it has a fixedPrice
      beforeEach
        costFormGroup    any
          value
            work
              isFixedPrice  true
              fixedRate  TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS





      it  return the fixedPrice as total
        expect service totalCost costFormGroup   toBe TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS



    describe  when it has an hourly price
      beforeEach
        costFormGroup    any
          value
            work
              isFixedPrice  false
              hourlyRate  10000
              duration  120

            items    price  4200




      it  calculates the total cost
        expect service totalCost costFormGroup   toBe 24200


      it  returns 0 when the hourlyRate is undefined and items are empty
        costFormGroup value work hourlyRate   undefined
        costFormGroup value items
        expect service totalCost costFormGroup   toBe 0




import   Injectable   from   angular core
import   FormBuilder  FormControl  FormGroup  ValidationErrors  ValidatorFn  Validators   from   angular forms
import   CostItem   from        shared models cost cost item model
import   OfferForm   from        shared models offer form model
import   Question   from        shared models question model
import   CostForm   from        talent costs cost form model
import   MyValidators   from        utils my validators

 Injectable
export class TalentOfferFormBuilderService
  static MINIMUM TOTAL COST IN CENTS   2000
  static MINIMUM WORK COST IN CENTS   300

  static calculateTotalHourlyRateCost costValue  any
    const itemsCost   costValue items reduce  accumulator  number  item  CostItem     accumulator   item price  0

    return TalentOfferFormBuilderService calculateWorkCost costValue    itemsCost


  private static calculateWorkCost costValue  any
    const duration   costValue work duration    0
    const hourlyRate   costValue work hourlyRate    0
    return duration   60   hourlyRate


  constructor private formBuilder  FormBuilder

  buildForm offerForm  OfferForm  hasAgbsBeenAccepted  boolean   FormGroup
    return this formBuilder group
      chosenTimes  new FormControl offerForm chosenTimes map chosenTime    chosenTime serialize      this chosenTimesValidator
      offerText  new FormControl offerForm offerText
      workPlace  new FormControl undefined      todo  is this necessary
         this buildCostForm offerForm costForm  controls
      agb  new FormControl hasAgbsBeenAccepted   Validators requiredTrue
      answers  this formBuilder array this questionFormGroups offerForm



  buildCostForm costForm  CostForm
    const isFixedPriceFormControl   new FormControl costForm isFixedPrice
    const isRequiredWithHourlyRate   MyValidators dynamicallyRequired        isFixedPriceFormControl value
    const isRequiredWithFixedPrice   MyValidators dynamicallyRequired       isFixedPriceFormControl value

    return this formBuilder group
      cost  this formBuilder group
        work  this formBuilder group
          isFixedPrice  isFixedPriceFormControl
          duration   costForm durationInMinutes   isRequiredWithHourlyRate  MyValidators optionalMinValue 1
          hourlyRate   costForm netHourlyRate  isRequiredWithHourlyRate
          fixedRate   costForm fixedRate  isRequiredWithFixedPrice

        items  new FormControl costForm costItemForms

        validator  this costValidator




  private questionFormGroups offerForm  OfferForm   FormGroup
    if  offerForm questions length     0
      return


    return offerForm questions map  question  Question     this formBuilder group
         question
      answer   question answer  MyValidators present



  private chosenTimesValidator control  FormControl   ValidationErrors
    if   control value    control value length    0
      return  minLength  1



  private costValidator    ValidatorFn
    const totalCost   this totalCost
    return  formGroup  FormGroup   ValidationErrors
      const calculatedTotalCost   totalCost formGroup
      if   calculatedTotalCost    calculatedTotalCost   TalentOfferFormBuilderService MINIMUM TOTAL COST IN CENTS
        return  totalCost   below minimum

      return this validateWorkCost formGroup



  private validateWorkCost costFormGroup  FormGroup
    const costValue   costFormGroup value
    if   costValue work isFixedPrice
      TalentOfferFormBuilderService calculateWorkCost costValue    TalentOfferFormBuilderService MINIMUM WORK COST IN CENTS
      return  work   work cost below minimum
      else
      return null



  totalCost costFormGroup  FormGroup   number
    const costValue   costFormGroup value
    if  costValue work isFixedPrice
      return costValue work fixedRate    0


    return TalentOfferFormBuilderService calculateTotalHourlyRateCost costValue


import   TimeStruct   from        api endpoints work state api interface
import   CostItemForm   from        shared models cost item form model

type DurationInMinutes   number
type MoneyInCents   number

export interface WorkFormValue
  isFixedPrice  boolean
  duration  DurationInMinutes
  hourlyRate  MoneyInCents
  fixedRate  MoneyInCents


export interface CostFormValue
  work  WorkFormValue
  items  CostItemForm


export interface OfferFormValue
  chosenTimes  TimeStruct
  offerText  string
  workPlace  Geolocation
  cost  CostFormValue

import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import   Observable   from  rxjs Observable
import   TalentRating   from     models talent rating model
import   CustomerRatesTalentService   from    customer rates talent service

 Injectable
export class TalentRatingsResolver implements Resolve TalentRating
  constructor private talentRatingService  CustomerRatesTalentService

  resolve route  ActivatedRouteSnapshot   Observable TalentRating
    return this talentRatingService all route params  id


import   RoleStorageService   from    role storage service
import   TalentRegistrationGuardService   from    talent registration guard service

describe  TalentRegistrationGuardService
  let service  TalentRegistrationGuardService
  let talentRegistrationService  any
  let router  any
  let roleStorageService  RoleStorageService

  beforeEach
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     isProcessRunning    clearData    cancelRegistration
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToCustomer
    router   jasmine createSpyObj  router     navigate
    service   new TalentRegistrationGuardService talentRegistrationService  router


  function callCanDeactivate currentUrl  string  nexUrl  string   boolean
    return service canDeactivate null  null   any   url  currentUrl    any   url  nexUrl


  describe  canActivate
    it  returns true if process is running
      talentRegistrationService isProcessRunning and returnValue true
      expect service canActivate    toEqual true
      expect talentRegistrationService isProcessRunning  toHaveBeenCalled


    it  returns false and navigates away if process is not running
      talentRegistrationService isProcessRunning and returnValue false
      expect service canActivate    toEqual false
      expect router navigate  toHaveBeenCalledWith



  describe  canDeactivate
    it  returns true if process is not running
      talentRegistrationService isProcessRunning and returnValue false
      expect service canDeactivate null  null  null  null   toEqual true


    describe  process is running
      beforeEach
        talentRegistrationService isProcessRunning and returnValue true


      it  returns true if next url is in registration scope
        expect callCanDeactivate       talent registration 1    toEqual true
        expect talentRegistrationService clearData  not toHaveBeenCalled


      it  returns true if moving away but current step is modal
        expect callCanDeactivate    auth register talent          toEqual true
        expect talentRegistrationService clearData  toHaveBeenCalled


      it  returns true if moving away and accept the confirm dialog
        spyOn window   confirm   and returnValue true
        expect callCanDeactivate   talent registration 1         toEqual true
        expect talentRegistrationService cancelRegistration  toHaveBeenCalled
        expect window confirm  toHaveBeenCalled


      it  returns false if moving away and canceled the confirm dialog
        spyOn window   confirm   and returnValue false
        expect callCanDeactivate   talent registration 1         toEqual false
        expect talentRegistrationService cancelRegistration  not toHaveBeenCalled
        expect window confirm  toHaveBeenCalled




import   Injectable   from   angular core
import   CanActivate  CanDeactivate  Router  RouterStateSnapshot   from   angular router
import   I18n   from     i18n i18n
import   TalentProfileCurrentStepComponent   from     talent profile registration current step talent profile current step component
import   TalentRegistrationService   from    talent registration service

 Injectable
export class TalentRegistrationGuardService implements CanActivate  CanDeactivate TalentProfileCurrentStepComponent
  static readonly REGISTRATION STEPS      auth register talent      auth login     talent registration 1    talent registration 2
  static readonly REGISTRATION STEPS MODAL      auth register talent      auth login

  constructor private talentRegistrationService  TalentRegistrationService  private router  Router

  canActivate    boolean
    if  this talentRegistrationService isProcessRunning
      return true

    this router navigate
    return false


  canDeactivate    any   route  any  currentState  RouterStateSnapshot  nextState  RouterStateSnapshot   boolean
    if  this talentRegistrationService isProcessRunning      this isAboutToLeaveRegistration nextState url
      if  this isInModalStep currentState url
        this talentRegistrationService clearData
        return true
        else
        return this confirm


    return true


  private confirm    boolean
    if  window confirm I18n t talentRegistration leaveRegistrationConfirmation
      this talentRegistrationService cancelRegistration
      return true
      else
      return false



  private isAboutToLeaveRegistration nextUrl  string   boolean
    return  TalentRegistrationGuardService REGISTRATION STEPS some registrationUrl    nextUrl includes registrationUrl


  private isInModalStep currentUrl  string   boolean
    return TalentRegistrationGuardService REGISTRATION STEPS MODAL some registrationUrl    currentUrl includes registrationUrl


import   Observable   from  rxjs Observable
import   Talent   from     models talent model
import   User   from     models user model
import   GoogleAnalyticsEventsService   from    google analytics events service
import   TalentRegistrationService   from    talent registration service

describe  TalentRegistrationService
  let service  TalentRegistrationService
  let userSessionService  any
  let router  any
  let googleAnalytics  any
  const callbackObj
    onSuccess    talent  Talent   void    undefined
    onCancel      void    undefined


  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser    currentTalent
    router   jasmine createSpyObj  router     navigate
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent
    service   new TalentRegistrationService router  userSessionService  googleAnalytics


  function emitUserAndTalent user  User  talent  Talent
    userSessionService currentUser and returnValue Observable of user
    userSessionService currentTalent and returnValue Observable of talent


  describe  get set talentForm
    it  returns an initialized talent with user
      const talent   service talentForm
      expect talent  toEqual jasmine any Talent
      expect talent qualification isProfessional  toEqual false
      expect talent user  toEqual jasmine any User


    it  sets the talentForm
      const talent   new Talent
      service talentForm   talent
      expect service talentForm  toEqual talent



  describe  buildingTalentWithUserId
    it  returns the building talent with the user id
      expect service talentForm user id  toBeUndefined
      emitUserAndTalent  any   id  3   null
      service ensureTalent null  null
      expect service buildingTalentWithUserId   user id  toEqual 3



  describe  ensureTalent
    it  clears the data
      emitUserAndTalent null  null
      spyOn service   clearData
      service ensureTalent null  null
      expect service clearData  toHaveBeenCalled


    it  sets the process running
      emitUserAndTalent null  null
      expect service isProcessRunning    toEqual false
      service ensureTalent null  null
      expect service isProcessRunning    toEqual true


    it  navigates to register modal if not user and not talent
      emitUserAndTalent null  null
      service ensureTalent null  null
      expect router navigate  toHaveBeenCalledWith        outlets   auth    register talent        queryParamsHandling   preserve


    it  navigates to first talent registration step if user but not talent
      emitUserAndTalent new User    null
      service ensureTalent null  null
      expect router navigate  toHaveBeenCalledWith   outlets   primary    talent registration    1    auth  null
         queryParamsHandling   preserve


    it  finishes registration if is talent
      const talent   new Talent
      emitUserAndTalent new User    talent
      spyOn service   clearData
      spyOn callbackObj   onSuccess
      service ensureTalent callbackObj onSuccess  null
      expect callbackObj onSuccess  toHaveBeenCalledWith talent
      expect service clearData  toHaveBeenCalled
      expect service isProcessRunning    toEqual false
      expect googleAnalytics emitEvent  toHaveBeenCalledWith  Talent    registered



  describe  cancelRegistrationWithRedirect
    beforeEach
      emitUserAndTalent null  null
      spyOn service   clearData
      service ensureTalent callbackObj onSuccess


    it  cancels the registration and redirect
      expect service isProcessRunning    toEqual true
      service cancelRegistrationWithRedirect
      expect service isProcessRunning    toEqual false
      expect service clearData  toHaveBeenCalled
      expect router navigate  toHaveBeenCalledWith



  describe  cancelRegistration
    beforeEach
      emitUserAndTalent null  null
      spyOn service   clearData
      service ensureTalent callbackObj onSuccess


    it  cancels the registration
      expect service isProcessRunning    toEqual true
      service cancelRegistration
      expect service isProcessRunning    toEqual false
      expect service clearData  toHaveBeenCalled
      expect router navigate  not toHaveBeenCalledWith



import   Injectable   from   angular core
import   Router   from   angular router
import   Observable   from  rxjs Observable
import   Subscription   from  rxjs Subscription
import   TalentQualification   from     models
import   Talent   from     models talent model
import   User   from     models user model
import   GoogleAnalyticsEventsService   from    google analytics events service
import   UserSessionService   from    user session service

 Injectable
export class TalentRegistrationService
  private user  User
  private talent  Talent
  private  talentForm  Talent
  private onSuccess   talent  Talent     void
  private redirectNavigateCommands  any
  private subscription  Subscription
  private isRunning   false

  constructor private router  Router  private userSessionService  UserSessionService
              private googleAnalyticsEventsService  GoogleAnalyticsEventsService

  clearData
    if  this subscription    this subscription unsubscribe    this subscription   undefined
    this  talentForm   undefined
    this user   undefined
    this talent   undefined
    this onSuccess   undefined
    this redirectNavigateCommands   undefined
    this isRunning   false


  get talentForm    Talent
    if   this  talentForm
      this  talentForm   new Talent
      this  talentForm qualification   new TalentQualification  isProfessional  false
      this  talentForm user   new User

    return this  talentForm


  set talentForm talent  Talent
    this  talentForm   talent


  buildingTalentWithUserId    Talent
    this talentForm user id   this user id
    return this talentForm


  ensureTalent onSuccess   talent  Talent     void  redirectNavigateCommands  any
    this clearData
    this isRunning   true
    this onSuccess   onSuccess
    this redirectNavigateCommands   redirectNavigateCommands
    this loadAndSubscribe


  isProcessRunning    boolean
    return this isRunning


  cancelRegistrationWithRedirect
    this router navigate this redirectNavigateCommands
    this cancelRegistration


  cancelRegistration
    this isRunning   false
    this clearData


  private finishRegistration
    this isRunning   false
    this googleAnalyticsEventsService emitEvent  Talent    registered
    this onSuccess this talent
    this clearData


  private loadAndSubscribe
    this subscription   Observable zip
      this userSessionService currentTalent
      this userSessionService currentUser
      subscribe value
      this talent   value 0
      this user   value 1
      this evaluateNextStep



  private evaluateNextStep
    if   this isRunning    return
    if  this talent
      this finishRegistration
      return

    this checkUser


  private checkUser
    if  this user
      this router navigate   outlets   primary    talent registration    1    auth  null      queryParamsHandling   preserve
      else
      this router navigate        outlets   auth    register talent        queryParamsHandling   preserve



import
  PublicTalentApiIndexResponse
  PublicTalentApiShowResponse
  TalentUserApiCreateResponse
  from     api endpoints talent api interface
import   publicTalentIndexMockDataJson  publicTalentShowMockDataJson   from     api mock data talent api service mock data
import   Subcategory   from     categories shared subcategory model
import   HttpSpyObject   from     mocks helper mock
import   Talent   from     models
import   Geolocation   from     models geolocation model
import   TalentQualification   from     models talent qualification model
import   TalentVisibility   from     models talent visibility model
import   User   from     models user model
import   TalentService   from    talent service
import Spy   jasmine Spy

export class MockTalentService extends HttpSpyObject
  static mockDataCreate  TalentUserApiCreateResponse
    data
      type   talents
      attributes
        about   About me
        company name   Sample Company
        company uid register number   CHE 409 950 039
        website   example com
        is professional  false
        visible  false
        service description   programm  engineer good software
        latitude  53 20
        longitude  41 40
        mobile number   a
        education   my education
        professional experience   my professional experience
        profile picture url  undefined
        project portfolio   my project portfolio
        address   a
        zip   a
        city   a
        country   a
        user id   3
        vat number   vat123
        vat rate  0 4


    included
      id   3
      type   users
      attributes
        first name   a
        last name   a




  static mockTalent    Talent
    const talent   new Talent
    talent id   1
    talent user   new User
    talent user id   1
    talent user firstName    Hansa
    talent user lastName    Muster
    talent user phoneNumber    0448887744
    talent user address street    Industriestrasse 34
    talent user address zip    8050
    talent user address city    ZÃ¼rich
    talent user address country    Schweiz
    talent serviceTitle    Chef
    talent serviceDescription    cheffen
    talent address   new Geolocation
      latitude  47 3769
      longitude  8 5417

    talent netHourlyRate   50
    talent vatRate   8 0
    talent vatNumber    5464165
    talent subcategory   new Subcategory  id  12
    talent qualification   new TalentQualification  isProfessional  true
    talent visibility   new TalentVisibility  isHidden  true
    return talent


  static getTalents
    return  this mockTalent


  static getMockDataAll    PublicTalentApiIndexResponse
    return publicTalentIndexMockDataJson


  static getMockDataShow    PublicTalentApiShowResponse
    return publicTalentShowMockDataJson


  static getMockDataCreate    any
    return  data  this mockDataCreate


  static getProviders    any
    return   provide  TalentService  useValue  this


  allSpy  Spy

  constructor
    super TalentService

    this allSpy   this spy  all   andReturn this


import   publicTalentShowMockDataJson   from     api mock data talent api service mock data
import   LawoonHttpMock   from     api utils lawoon http service mock
import   TalentQualification   from     models talent qualification model
import   Talent   from     models talent model
import   TalentFilter   from     shared talent filter talent filter model
import   TalentService   from    talent service
import   MockTalentService   from    talent service mock data

describe  TalentService
  const http  any   new LawoonHttpMock
  let userService  any
  let sessionService  any
  let service  TalentService

  beforeEach
    userService   jasmine createSpyObj  userService     updateCurrentUser
    sessionService   jasmine createSpyObj  sessionService     getRandomSeed
    service   new TalentService http  userService  sessionService


  describe  all
    it  returns the five elements and page one if page and size of pages are given   done
      http mockResponse MockTalentService getMockDataAll
      service all   subscribe response
        expect http lastData params toString    toContain  page 5Bnumber 5D 1 page 5Bsize 5D 25
        expect response data 0  id  toEqualData 1
        expect response data 0  serviceTitle  toEqualData  Mediamatik und Webdesign
        done



    it  adds filter data into the request   done
      const filter  TalentFilter   new TalentFilter
      filter professional   new TalentQualification  isProfessional  true
      service all filter  subscribe  response
        expect http lastData params toString    toContain  filter 5Bprofessional 5D true
        done



    it  does not add empty filter data into the request   done
      const filter  TalentFilter   new TalentFilter
      filter searchQuery
      service all filter  subscribe  response
        expect http lastData params toString    not toContain  filter 5BsearchQuery 5D
        done



    it  does not add undefined filter data into the request   done
      const filter  TalentFilter   new TalentFilter
      filter rating   undefined
      service all filter  subscribe  response
        expect http lastData params toString    not toContain  filter 5BsearchQuery 5D
        done



    it  returns the 25 page size and page 1 if no page and size of pages are given   done
      service all   subscribe  response
        expect http lastData params toString    toContain  page 5Bnumber 5D 1 page 5Bsize 5D 25
        done




  describe  create
    it  creates a talent and updates the talent and user sources   done
      const talent   MockTalentService mockTalent
      spyOn service   updateCurrentTalent
      http mockResponse publicTalentShowMockDataJson  201
      service create talent  subscribe responseTalent
        expect responseTalent  toEqual jasmine any Talent
        expect service updateCurrentTalent  toHaveBeenCalledWith responseTalent
        expect userService updateCurrentUser  toHaveBeenCalledWith responseTalent user
        done




  describe  update
    it  updates a talent   done
      const talent   MockTalentService mockTalent
      spyOn service   updateCurrentTalent
      http mockResponse publicTalentShowMockDataJson  200
      service update talent  subscribe responseTalent
        expect responseTalent  toEqual jasmine any Talent
        expect service updateCurrentTalent  toHaveBeenCalledWith responseTalent
        done




  describe  getById
    it  returns the talent   done
      http mockResponse MockTalentService getMockDataShow
      service getById 1  subscribe response
        expect response id  toEqualData 1
        expect response serviceTitle  toEqualData  Mediamatik und Webdesign
        expect http lastPath  toEqual  talents 1
        done




import   Injectable   from   angular core
import   URLSearchParams   from   angular http
import  rxjs add operator catch
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Subject   from  rxjs Subject
import   Api   from     api api
import   Paginated   from     api api types
import   TalentApiObject  TalentUserApiCreateResponse  TalentUserApiUpdateResponse   from     api endpoints talent api interface
import   LawoonHttp   from     api utils lawoon http service
import   Talent   from     models talent model
import   TalentFilter   from     shared talent filter talent filter model
import   SessionService   from    session service
import   UserService   from    user service

 Injectable
export class TalentService
  currentTalentUpdated  Observable Talent
  private updateTalentSource  Subject Talent    new Subject Talent

  constructor private lawoonHttp  LawoonHttp  private userService  UserService
              private sessionService  SessionService
    this currentTalentUpdated   this updateTalentSource asObservable


  current    Observable Talent
    return this lawoonHttp get  talent users   catch       Observable of null   map response
      if   response    response status     204
        return null
        else
        return new Api TalentApiObject  Talent  response  deserializeObject




  all filter  TalentFilter   new TalentFilter     Observable Paginated Talent
    const params   new URLSearchParams
    filter serialize params
    params set  random seed   this sessionService getRandomSeed
    return this lawoonHttp get  talents    params   map data    new Api TalentApiObject  Talent  data  deserializeForPagination


  getById id  number   Observable Talent
    return this lawoonHttp get  talents   id
       map data    new Api TalentApiObject  Talent  data  deserializeObject


     TODO  Split this request into two separate ones  so we can get rid of UserService in this class
     https   github com renuo lawoon frontend issues 933
  create talent  Talent   Observable Talent
    const userIdAsString   talent user id toString
    const postData  TalentUserApiCreateResponse
      data
        type   talents   attributes  talent talentAttributes userIdAsString

      included
        id  userIdAsString
        type   users
        attributes  talent userAttributes


    return this lawoonHttp post  talent users   postData
       map response
        const talentResponse   new Api TalentApiObject  Talent  response  deserializeObject
        this updateCurrentTalent talentResponse
        this userService updateCurrentUser talentResponse user
        return talentResponse



  update talent  Talent   Observable Talent
    const postData  TalentUserApiUpdateResponse
      data
        type   talents   attributes  talent talentAttributes talent user id toString


    return this lawoonHttp patch  talents   talent id    postData
       map response
        const talentResponse   new Api TalentApiObject  Talent  response  deserializeObject
        this updateCurrentTalent talentResponse
        return talentResponse



  updateCurrentTalent talent  Talent
    this updateTalentSource next talent


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   User   from     models user model
import   UserService   from    user service

describe  UserService
  let api  any
  let service  UserService

  beforeEach
    api   jasmine createSpyObj  api     update    current
    api current and returnValue Observable of  id  44
    service   new UserService api


  describe  current
    it  returns the current user   done
      service current   subscribe user
        expect user id  toEqual 44
        expect api current  toHaveBeenCalled
        done




  describe  update
    it  updates the current user   done
      const updatedUser   new User  id  22
      api update and returnValue Observable of updatedUser
      spyOn service   updateCurrentUser
      service update updatedUser  subscribe user
        expect user  toEqual updatedUser
        expect api update  toHaveBeenCalledWith updatedUser
        expect service updateCurrentUser  toHaveBeenCalledWith updatedUser
        done




  describe  updateCurrentUser
    it  fires an observable if the current user is update   done
      const user   new User
      service currentUserUpdated subscribe updatedUser
        expect updatedUser  toBe user
        done

      service updateCurrentUser user



import   Injectable   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Subject   from  rxjs Subject
import   UserApi   from     api endpoints user api service
import   User   from     models user model

 Injectable
export class UserService
  currentUserUpdated  Observable User
  private updateUserSource  Subject User    new Subject User

  constructor private api  UserApi
    this currentUserUpdated   this updateUserSource asObservable


  current    Observable User
    return this api current


  update user  User   Observable User
    return this api update user  map updatedUser
      this updateCurrentUser updatedUser
      return user



  updateCurrentUser customer  User
    this updateUserSource next customer


import  rxjs add observable of
import  rxjs add observable zip
import   Observable   from  rxjs Observable
import   Subject   from  rxjs Subject
import   Talent   from     models talent model
import   User   from     models user model
import   UserSessionService   from    user session service

describe  UserSessionService
  let userService  any
  let talentService  any
  let sessionService  any
  let roleStorageService  any
  let enrichErrorService  any
  let userSessionService  UserSessionService
  let userSubject  Subject User
  let talentSubject  Subject Talent
  const currentUser   new User  id  3  email   max example com
  const currentTalent   new Talent

  function initUserService
    userSessionService   new UserSessionService userService  talentService  sessionService  roleStorageService  enrichErrorService


  beforeEach
    userSubject   new Subject User
    talentSubject   new Subject Talent
    roleStorageService   jasmine createSpyObj  roleStorageService     getCurrentRole
    enrichErrorService   jasmine createSpyObj  enrichErrorService     removeUserContext    addUserContext
    sessionService    isLoggedIn            getCurrentUserId        4
    userService    current            updateCurrentUser            currentUserUpdated  userSubject asObservable
    talentService    current            updateCurrentTalent            currentTalentUpdated  talentSubject asObservable
    spyOn sessionService   isLoggedIn
    spyOn userService   current
    spyOn talentService   current
    sessionService isLoggedIn and returnValue Observable of false
    userService current and returnValue Observable of currentUser
    talentService current and returnValue Observable of currentTalent


  describe  listeners
    describe  currentUserUpdated of userService
      it  updates the user by subscribing to changes in the userService   done
        initUserService
        const newUser   new User  id  4  firstName   Max
        userSubject next newUser      mocked subject on userService
        userSessionService currentUser   subscribe userNew
          expect userNew  toBe newUser
          done



      describe  sentry context
        it  adds context for sentry if a new user is passed
          initUserService
          const newUser   new User  id  5  email   max2 example com
          userSubject next newUser      mocked subject on userService
          expect enrichErrorService addUserContext  toHaveBeenCalledWith
            email   max2 example com
            id   5



        it  removes context for sentry
          initUserService
          userSubject next null      mocked subject on userService
          expect enrichErrorService removeUserContext  toHaveBeenCalled




    describe  currentTalentUpdated of talentService
      it  updates the talent by subscribing to changes in the talentService   done
        initUserService
        const newTalent   new Talent
        newTalent companyName    Renuo
        talentSubject next newTalent      mocked subject on userService
        userSessionService currentTalent   subscribe userNew
          expect userNew  toBe newTalent
          done




    describe  isLoggedIn of sessionService
      let sessionSubject  Subject boolean

      beforeEach
        sessionSubject   new Subject boolean
        sessionService isLoggedIn and returnValue sessionSubject asObservable
        initUserService


      describe  on login
        beforeEach
          sessionSubject next true


        it  loads the user
          expect userService current  toHaveBeenCalled


        it  loads the talent
          expect talentService current  toHaveBeenCalled



      describe  on logout
        beforeEach
          spyOn talentService   updateCurrentTalent
          spyOn userService   updateCurrentUser
          sessionSubject next false


        it  resets the user to null
          expect userService updateCurrentUser  toHaveBeenCalledWith null


        it  resets the user to null
          expect talentService updateCurrentTalent  toHaveBeenCalledWith null





  describe  isLoggedIn
    it  calls the session service to check if is logged in   done
      sessionService isLoggedIn and returnValue Observable of false
      initUserService
      userSessionService isLoggedIn   subscribe  isLoggedIn  boolean
        expect sessionService isLoggedIn  toHaveBeenCalled
        expect isLoggedIn  toBe false
        done




  describe  isCustomer
    it  returns true if current user is customer   done
      userService current and returnValue Observable of  id  1  email   test example com   isCustomer  true
      initUserService
      userSessionService isCustomer   subscribe  isCustomer  boolean
        expect userService current  toHaveBeenCalled
        expect isCustomer  toBe true
        done



    it  returns false if not is logged in   done
      userService current and returnValue Observable of undefined
      initUserService
      userSessionService isCustomer   subscribe  isCustomer  boolean
        expect userService current  toHaveBeenCalled
        expect isCustomer  toBe false
        done



    it  returns false if current user is not customer   done
      userService current and returnValue Observable of  id  1  email   test example com   isCustomer  false
      initUserService
      userSessionService isCustomer   subscribe  isCustomer  boolean
        expect userService current  toHaveBeenCalled
        expect isCustomer  toBe false
        done




  describe  isTalent
    it  returns true if talent service has a talent   done
      talentService current and returnValue Observable of currentTalent
      initUserService
      userSessionService isTalent   subscribe  isTalent  boolean
        expect talentService current  toHaveBeenCalled
        expect isTalent  toBe true
        done



    it  returns false if talent service has no talent if talent service has no talent   done
      talentService current and returnValue Observable of undefined
      initUserService
      userSessionService isTalent   subscribe  isTalent  boolean
        expect talentService current  toHaveBeenCalled
        expect isTalent  toBe false
        done




  describe  isUserAndTalent
    function expectIsUserAndTalentToBe given  boolean  expected  boolean
      expect talentService current  toHaveBeenCalled
      expect userService current  toHaveBeenCalled
      expect given  toBe expected


    it  returns true if user is talent and customer   done
      talentService current and returnValue Observable of currentTalent
      userService current and returnValue Observable of  id  1  email   test example com   isCustomer  true
      initUserService
      userSessionService isUserAndTalent   subscribe  isUserAndTalent  boolean
        expectIsUserAndTalentToBe isUserAndTalent  true
        done



    it  returns false if user is only talent   done
      talentService current and returnValue Observable of currentTalent
      userService current and returnValue Observable of  id  1  email   test example com   isCustomer  false
      initUserService
      userSessionService isUserAndTalent   subscribe  isUserAndTalent  boolean
        expectIsUserAndTalentToBe isUserAndTalent  false
        done



    it  returns false if user is only customer   done
      talentService current and returnValue Observable of undefined
      userService current and returnValue Observable of  id  1  email   test example com   isCustomer  true
      initUserService
      userSessionService isUserAndTalent   subscribe  isUserAndTalent  boolean
        expectIsUserAndTalentToBe isUserAndTalent  false
        done




  describe  currentUser
    it  gets current user via userService   done
      initUserService
      userSessionService currentUser   subscribe
        expect userService current  toHaveBeenCalled
        done




  describe  currentTalent
    it  gets current user via talentService   done
      initUserService
      userSessionService currentTalent   subscribe
        expect talentService current  toHaveBeenCalled
        done




  describe  currentRole
    let talentSpy  any
    let customerSpy  any

    beforeEach
      roleStorageService getCurrentRole and returnValue Observable of  current role
      initUserService
      customerSpy   spyOn userSessionService   isCustomer
      talentSpy   spyOn userSessionService   isTalent
      userService current and returnValue Observable of currentUser
      talentService current and returnValue Observable of currentTalent


    function expectCurrentRole given  string  expected  string
      expect userSessionService isCustomer  toHaveBeenCalled
      expect userSessionService isTalent  toHaveBeenCalled
      expect roleStorageService getCurrentRole  toHaveBeenCalled
      expect given  toBe expected


    it  returns the current selected role if user has both roles   done
      customerSpy and returnValue Observable of true
      talentSpy and returnValue Observable of true
         Note  roleStorageService getCurretRole would just return  talent  or  customer
      userSessionService currentRole   subscribe  currentRole   customer     talent
        expectCurrentRole currentRole   current role
        done



    it  returns  customer  if user is a customer   done
      customerSpy and returnValue Observable of true
      talentSpy and returnValue Observable of false
      userSessionService currentRole   subscribe  currentRole   customer     talent
        expectCurrentRole currentRole   customer
        done



    it  returns  talent  if user is a talent   done
      customerSpy and returnValue Observable of false
      talentSpy and returnValue Observable of true
      userSessionService currentRole   subscribe  currentRole   customer     talent
        expectCurrentRole currentRole   talent
        done



    it  returns  customer  if user is neither talent nor user   done
      customerSpy and returnValue Observable of false
      talentSpy and returnValue Observable of false
      userSessionService currentRole   subscribe  currentRole   customer     talent
        expectCurrentRole currentRole   customer
        done




import   Injectable   from   angular core
import  rxjs add observable zip
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Talent   from     models talent model
import   User   from     models user model
import   BufferSubject   from     shared buffer subject buffer subject
import   EnrichErrorService   from    enrich error service
import   RoleStorageService   from    role storage service
import   SessionService   from    session service
import   TalentService   from    talent service
import   UserService   from    user service

 Injectable
export class UserSessionService
  private user  Observable User
  private talent  Observable Talent
  private currentUserSource  BufferSubject User
  private currentTalentSource  BufferSubject Talent

  constructor private userService  UserService  private talentService  TalentService
              private sessionService  SessionService  private roleStorageService  RoleStorageService
              private enrichErrorService  EnrichErrorService
    this setObservables
    this loadUserAndTalent
    this setListenerForUpdates


  private setListenerForUpdates
    this sessionService isLoggedIn   subscribe isLoggedIn    this onLoggedInListener isLoggedIn
    this userService currentUserUpdated subscribe user    this currentUserSource next user
    this talentService currentTalentUpdated subscribe talent    this currentTalentSource next talent
    this addUserContextForErrorHandler


  private onLoggedInListener isLoggedIn  boolean
    if   isLoggedIn
      this userService updateCurrentUser null
      this talentService updateCurrentTalent null
      else
      this currentUserSource clearBuffer
      this currentTalentSource clearBuffer
      this loadUserAndTalent



  private setObservables
    this currentUserSource   new BufferSubject User
    this currentTalentSource   new BufferSubject Talent
    this user   this currentUserSource asObservable
    this talent   this currentTalentSource asObservable


  private loadUserAndTalent
    this loadUser
    this loadTalent


  private addUserContextForErrorHandler
    this user subscribe user
      if   user
        this enrichErrorService removeUserContext
        else
        this enrichErrorService addUserContext
          email  user email
          id  user id toString





  private loadUser
    this userService current   subscribe user    this currentUserSource next user


  private loadTalent
    this talentService current   subscribe talent    this currentTalentSource next talent


  isLoggedIn    Observable boolean
    return this sessionService isLoggedIn


  isCustomer    Observable boolean
    return this user map user      user    user isCustomer


  isUserAndTalent    Observable boolean
    return Observable zip
      this isCustomer
      this isTalent
      map observables    observables 0     observables 1


  isTalent    Observable boolean
    return this talent map talent      talent


  currentUser    Observable User
    return this user


  currentTalent    Observable Talent
    return this talent


  currentRole    Observable  customer     talent
    return Observable zip
      this isCustomer
      this isTalent
      this roleStorageService getCurrentRole
      map observables    this getRole observables 0   observables 1   observables 2


     tslint disable next line
  private getRole isCustomer  boolean  isTalent  boolean  roleFromLocalStorage   customer     talent     customer     talent
    if  isCustomer    isTalent
      return roleFromLocalStorage
      else if  isTalent
      return  talent
      else if  isCustomer
      return  customer

       TODO  introduce new role  user  if is whether user nor talent
    return  customer


import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   AdminWorksService   from     admin works admin works service
import   PendingWork   from     shared models work states pending work model

 Injectable
export class WorkAdminDetailResolver implements Resolve PendingWork
  constructor private workService  AdminWorksService

  resolve route  ActivatedRouteSnapshot   Observable PendingWork
    return this workService getDraftWork route params  id


import   Injectable   from   angular core
import   ActivatedRouteSnapshot  Resolve   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   PendingWork   from     shared models work states pending work model
import   WorkService   from    work service

 Injectable
export class WorkDetailResolver implements Resolve PendingWork
  constructor private workService  WorkService

  resolve route  ActivatedRouteSnapshot   Observable PendingWork
    return this workService getPendingWork route params  id


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   WorkFlow   from     shared models work flow model
import   WorkFlowService   from    work flow service

describe  WorkFlowService
  let service  WorkFlowService
  let api  any

  beforeEach
    api   jasmine createSpyObj  workApi     allPending    allArchived    get
    service   new WorkFlowService api


  describe  getById
    it  lists a public announcements by the current url   done
      const expectedWorkFlow   new WorkFlow
      api get and returnValue Observable of expectedWorkFlow
      service getById 5  subscribe workFlow
        expect workFlow  toEqual expectedWorkFlow
        expect api get  toHaveBeenCalledWith 5
        done




  describe  all
    it  returns all work flows   done
      const expectedResponse    new WorkFlow    new WorkFlow
      api allPending and returnValue Observable of expectedResponse
      service all   subscribe workFlows
        expect workFlows  toEqual expectedResponse
        expect api allPending  toHaveBeenCalled
        done




  describe  allArchived
    it  returns all archived work flows   done
      api allArchived and returnValue Observable of
      service allArchived 3  subscribe
        expect api allArchived  toHaveBeenCalledWith 3
        done




import   Injectable   from   angular core
import  rxjs add operator first
import  rxjs add operator mergeMap
import   Observable   from  rxjs Observable
import   Paginated   from     api api types
import   WorkFlowApi   from     api endpoints work flow api service
import   WorkFlow   from     shared models work flow model

 Injectable
export class WorkFlowService

  constructor private api  WorkFlowApi

  getById id  number   Observable WorkFlow
    return this api get id


  all    Observable WorkFlow
    return this api allPending


  allArchived page   1   Observable Paginated WorkFlow
    return this api allArchived page


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from     api api types
import
  WorkApiObjectCreateRequest  WorkApiObjectUpdateRequest
  WorkApiObjectUpdateRequestAttributes
  from     api endpoints work api interface
import   WorkInvitationApiObjectCreateRequest   from     api endpoints work invitation api interface
import   declinedWorkInvitationMockDataJSON   from     api mock data work invitation api service mock data
import   Category   from     categories shared category model
import   Subcategory   from     categories shared subcategory model
import   WorkDescriptionForm   from     customer work shared work description form model
import   Geolocation   from     models geolocation model
import   WorkFilter   from     public browse public work work filter model
import   PendingWork   from     shared models work states pending work model
import   WorkDescription   from     shared models work states work description model
import   WorkService   from    work service

describe  WorkService
  let service  WorkService
  let userSessionService  any
  let api  any
  const mockedResponse  Paginated WorkDescription     any

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    api   jasmine createSpyObj  workApi     all    update    pendingByUserID    archivedByUserID    get    create    getPendingWork
       addWorkInvitation    deleteWorkInvitation    delete
    service   new WorkService api  userSessionService


  function buildWorkDescriptionForm    WorkDescriptionForm
    const workDescriptionForm   new WorkDescriptionForm
    workDescriptionForm title    Title
    workDescriptionForm description    Description
    workDescriptionForm workPlace   new Geolocation  zip   a   street   b   city   c   latitude  80 8  longitude  90 999  country   CH
    workDescriptionForm isPublic   false
    workDescriptionForm possibleTimes
    workDescriptionForm questions
    workDescriptionForm isPublic   false
    workDescriptionForm category   new Category
    workDescriptionForm subcategory   new Subcategory  id  5
    workDescriptionForm files
    workDescriptionForm estimatedWorkMinutes   300
    workDescriptionForm talents    any    id  1    id  2
    return workDescriptionForm


  const expectedAttributes  WorkApiObjectUpdateRequestAttributes
    address   b
    description   Description
    files
    status   draft
    public  false
    questions
    subcategory id  5
    time suggestions
    title   Title
    work place lat  80 8
    work place lng  90 999
    city   c
    country   CH
    zip   a
    estimated work minutes  300


  describe  getById
    it  lists a public announcements by the current url   done
      const expectedPublicWork   new WorkDescription
      api get and returnValue Observable of expectedPublicWork
      service getById 5  subscribe workDescription
        expect workDescription  toEqual expectedPublicWork
        expect api get  toHaveBeenCalledWith 5
        done




  describe  all
    it  lists all public work for filter criteria   done
      const mockedFilter  WorkFilter    any
      api all and returnValue Observable of mockedResponse
      service all mockedFilter  subscribe
        expect api all  toHaveBeenCalledWith mockedFilter
        done




  describe  addWorkInvitation
    it  calls the work api service with the given talent and work   done
      api addWorkInvitation and returnValue Observable of null
      const expectedSerializedRequest  WorkInvitationApiObjectCreateRequest
        data
          type   workInvitations
          attributes
            talent id  5



      service addWorkInvitation  any   id  8    any   id  5   subscribe
        expect api addWorkInvitation  toHaveBeenCalledWith 8  expectedSerializedRequest
        done





  describe  deleteWorkInvitation
    it  calls the work api service with the given work and workInvitation   done
      api deleteWorkInvitation and returnValue Observable of declinedWorkInvitationMockDataJSON
      service deleteWorkInvitation  any   id  3  workDescription   id  8    subscribe
        expect api deleteWorkInvitation  toHaveBeenCalledWith 8  3
        done





  describe  update
    it  updates an work   done
      const id   5
      const expectedPublicWork   new WorkDescription
      api update and returnValue Observable of expectedPublicWork

      const expectedSerializedUpdateRequest  WorkApiObjectUpdateRequest
        data
          type   works
          attributes
               expectedAttributes
            status   offering



      service update buildWorkDescriptionForm    id  subscribe workDescription
        expect workDescription  toEqual expectedPublicWork
        expect api update  toHaveBeenCalledWith expectedSerializedUpdateRequest  id
        done




  describe  create
    it  creates a work   done
      const expectedPublicWork   new WorkDescription
      api create and returnValue Observable of expectedPublicWork

      const expectedSerializedCreateRequest  WorkApiObjectCreateRequest
        data
          type   works
          attributes
               expectedAttributes
            talents   1  2



      service create buildWorkDescriptionForm    subscribe workDescription
        expect workDescription  toEqual expectedPublicWork
        expect api create  toHaveBeenCalledWith expectedSerializedCreateRequest
        done




  describe  pendingWorks
    const pendingWork   new PendingWork

    beforeEach
      userSessionService currentUser and returnValue Observable of  id  5
      api pendingByUserID and returnValue Observable of  pendingWork  pendingWork


    it  calls the userSessionService to retrieve the current user   done
      service pendingWorks   subscribe
        expect userSessionService currentUser  toHaveBeenCalled
        done



    it  calls the api work service with the current user   done
      service pendingWorks   subscribe
        expect api pendingByUserID  toHaveBeenCalledWith 5
        done



    it  returns a pending work   done
      service pendingWorks   subscribe pendingWorkResponse
        expect pendingWorkResponse length  toBe 2
        expect pendingWorkResponse 1   toEqual pendingWork
        done




  describe  pendingWorks and archivedWorks
    it  calls the api work service with archived flag and page   done
      userSessionService currentUser and returnValue Observable of  id  5
      api archivedByUserID and returnValue Observable of  new PendingWork
      service archivedWorks 2  subscribe
        expect api archivedByUserID  toHaveBeenCalledWith 5  2
        done




  describe  getPendingWork
    const pendingWork   new PendingWork

    beforeEach
      userSessionService currentUser and returnValue Observable of  id  5
      api getPendingWork and returnValue Observable of pendingWork


    it  calls the userSessionService to retrieve the current user   done
      service getPendingWork 3  subscribe
        expect userSessionService currentUser  toHaveBeenCalled
        done



    it  calls the api work service with the current user   done
      service getPendingWork 3  subscribe
        expect api getPendingWork  toHaveBeenCalledWith 5  3
        done



    it  returns a pending work   done
      service getPendingWork 3  subscribe pendingWorkResponse
        expect pendingWorkResponse  toEqual pendingWork
        done




  describe  delete
    it  deletes a work   done
      const work   new WorkDescription
      work id   42
      api delete and returnValue Observable of undefined
      service delete work  subscribe
        expect api delete  toHaveBeenCalledWith 42
        done




import   Injectable   from   angular core
import  rxjs add operator first
import  rxjs add operator mergeMap
import   Observable   from  rxjs Observable
import   Paginated   from     api api types
import   WorkApiObjectCreateRequest  WorkApiObjectUpdateRequest   from     api endpoints work api interface
import   WorkApi   from     api endpoints work api service
import   WorkDescriptionForm   from     customer work shared work description form model
import   Talent   from     models talent model
import   WorkFilter   from     public browse public work work filter model
import   PendingWork   from     shared models work states pending work model
import   WorkDescription   from     shared models work states work description model
import   UserSessionService   from    user session service

 Injectable
export class WorkService
  constructor protected api  WorkApi  protected userSessionService  UserSessionService

  getById id  number   Observable WorkDescription
    return this api get id


  all filter  WorkFilter   new WorkFilter
    return this api all filter


  addWorkInvitation workDescription  WorkDescription  talent  Talent
    return this api addWorkInvitation workDescription id
      data
        type   workInvitations
        attributes
          talent id  talent id





  deleteWorkInvitation workInvitation  any
    return this api deleteWorkInvitation workInvitation workDescription id  workInvitation id


  update workDescriptionForm  WorkDescriptionForm  id  number   Observable WorkDescription
    const postData  WorkApiObjectUpdateRequest
      data   type   works   attributes  workDescriptionForm serializeForUpdate

    return this api update postData  id


  create workDescriptionForm  WorkDescriptionForm   Observable WorkDescription
    const postData  WorkApiObjectCreateRequest
      data   type   works   attributes  workDescriptionForm serializeForCreate

    return this api create postData


  archivedWorks page   1   Observable Paginated PendingWork
    return this userSessionService currentUser   first   mergeMap user    this api archivedByUserID user id  page


  pendingWorks    Observable PendingWork
    return this userSessionService currentUser   first   mergeMap user    this api pendingByUserID user id


  getPendingWork workId  number   Observable PendingWork
    return this userSessionService currentUser   first   mergeMap user    this api getPendingWork user id  workId


  delete workDescription  WorkDescription   Observable void
    return this api delete workDescription id


import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   WorkStateRedirectService   from    work state redirect service

describe  WorkStateRedirectService
  let component  WorkStateRedirectService
  let linkUrlService  any
  let router  any
  let route  any

  beforeEach
    linkUrlService   jasmine createSpyObj  linkUrlService     getLinkUrl
    router   jasmine createSpyObj  router     navigateByUrl
    route    params   id  5
    component   new WorkStateRedirectService linkUrlService  router


  describe  canActivate
    describe  success
      beforeEach
        linkUrlService getLinkUrl and returnValue Observable of   offer 3


      it  calls the linkUrlService with the correct param
        component canActivate route  null
        expect linkUrlService getLinkUrl  toHaveBeenCalledWith 5


      it  navigates to the returned url
        component canActivate route  null  subscribe  result
          expect router navigateByUrl  toHaveBeenCalledWith   offer 3



      it  returns false
        component canActivate route  null  subscribe result
          expect result  toEqual false




    describe  error case
      beforeEach
        linkUrlService getLinkUrl and returnValue Observable throw  boom


      it  does not navigate to the returned url
        component canActivate route  null
        expect router navigateByUrl  not toHaveBeenCalled


      it  returns true
        component canActivate route  null  subscribe result
          expect result  toEqual true





import   Injectable   from   angular core
import   ActivatedRouteSnapshot  CanActivate  Router  RouterStateSnapshot   from   angular router
import  rxjs add operator catch
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   LinkUrlService   from    link url service

 Injectable
export class WorkStateRedirectService implements CanActivate
  constructor private linkUrlService  LinkUrlService  private router  Router

  canActivate route  ActivatedRouteSnapshot   state  RouterStateSnapshot   Observable boolean
    const workFlowId   route params  id
    return this linkUrlService getLinkUrl workFlowId  map linkUrl
      this router navigateByUrl linkUrl
      return false
       catch  error    Observable of true


import   BackButtonComponent   from    back button component

describe  BackButtonComponent
  let component  BackButtonComponent
  let location  any
  let router  any

  beforeEach
    location   jasmine createSpyObj  location     back
    router   jasmine createSpyObj  router     navigate
    component   new BackButtonComponent router  location


  it  goes to previous URL if navigated from app
    router navigated   true
    component goBack
    expect location back  toHaveBeenCalled


  it  goes one step higher if URL was pasted into browser
    router navigated   false
    component goBack
    expect router navigate  toHaveBeenCalledWith            queryParamsHandling   preserve


import   Location   from   angular common
import   Component  Input   from   angular core
import   Router   from   angular router

 Component
  selector   my back button
  styleUrls    back button component scss
  templateUrl   back button component html

export class BackButtonComponent
   Input   label  string

  constructor private router  Router  private location  Location


  goBack
    if  this router navigated
      this location back
      else
      this router navigate            queryParamsHandling   preserve



import   ObjectUnsubscribedError   from  rxjs Rx
import   Subject   from  rxjs Subject
import   SubjectSubscription   from  rxjs SubjectSubscription
import   Subscriber   from  rxjs Subscriber
import   Subscription   from  rxjs Subscription

export class BufferSubject T  extends Subject T
  private  events  T
  private  bufferSize  number

  constructor
    super
    this  bufferSize   1


  next value  T   void
    this  events push value
    this  trimBufferThenGetEvents
    super next value


  clearBuffer    void
    this  events


     tslint disable next line cyclomatic complexity
  protected  subscribe subscriber  Subscriber T    Subscription
    const  events   this  trimBufferThenGetEvents
    let subscription  Subscription

    if  this closed
      throw new ObjectUnsubscribedError
      else if  this hasError
      subscription   Subscription EMPTY
      else if  this isStopped
      subscription   Subscription EMPTY
      else
      this observers push subscriber
      subscription   new SubjectSubscription this  subscriber


    const len    events length
    for  let i   0  i   len     subscriber closed  i
      subscriber next  events i


    if  this hasError
      subscriber error this thrownError
      else if  this isStopped
      subscriber complete


    return subscription


  private  trimBufferThenGetEvents    T
    const  bufferSize   this  bufferSize
    const  events   this  events

    const eventsCount    events length
    let spliceCount   0

    if  eventsCount    bufferSize
      spliceCount   eventsCount    bufferSize


    if  spliceCount   0
       events splice 0  spliceCount


    return  events


import   CheckboxComponent   from    checkbox component

describe  CheckboxComponent
  const component  CheckboxComponent   new CheckboxComponent

  it  has a description attribute
    component description    cool description
    expect component description  toEqual  cool description


  it  sets checked to false by default
    expect component checked  toEqual false


  describe  toggleCheckbox
    let propagate  any

    beforeEach
      propagate   jasmine createSpy  propagteChange
      spyOn component change   emit
      component registerOnChange propagate


    it  sets checked to false if its true
      component checked   true
      component toggleCheckbox
      expect component checked  toEqual false
      expect propagate  toHaveBeenCalledWith false
      expect component change emit  toHaveBeenCalledWith false


    it  sets checked to true if its false
      component checked   false
      component toggleCheckbox
      expect component checked  toEqual true
      expect propagate  toHaveBeenCalledWith true
      expect component change emit  toHaveBeenCalledWith true


    it  does nothing if is disabled
      component checked   true
      component disabled   true
      component toggleCheckbox
      expect component checked  toEqual true
      expect propagate  not toHaveBeenCalled
      expect component change emit  not toHaveBeenCalled



  describe  writeValue
    it  writes a value of true
      component checked   false
      component writeValue true
      expect component checked  toEqual true


    it  writes a value of false
      component checked   true
      component writeValue false
      expect component checked  toEqual false



import   Component  EventEmitter  forwardRef  Input  Output   from   angular core
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms

 Component
  selector   my checkbox
  templateUrl   checkbox component html
  providers

      provide  NG VALUE ACCESSOR
         tslint disable next line no forward ref
      useExisting  forwardRef       CheckboxComponent
      multi  true



export class CheckboxComponent implements ControlValueAccessor
   Input   checked  boolean   false
   Input   description  string
   Input   disabled  boolean   false
   Output   change  EventEmitter boolean    new EventEmitter boolean
  private propagateChange       any

  toggleCheckbox
    if  this disabled    return
    this checked    this checked
    this change emit this checked
    this propagateChange this checked


  writeValue value  any   void
    this checked   value


  registerOnChange fn  any
    this propagateChange   fn


  registerOnTouched    void

import   CollapsibleBaseComponent   from    collapsible base component

describe  CollapsibleBaseComponent
  let component  CollapsibleBaseComponent

  beforeEach
    component   new CollapsibleBaseComponent


  describe  ngOnInit
    it  sets the isExpanded to false if is collapsed
      component collapsed   true
      component ngOnInit
      expect component isExpanded  toBe false


    it  sets the isExpanded to true if is not collapsed
      component collapsed   false
      component ngOnInit
      expect component isExpanded  toBe true



  describe  toggleCollapsed
    describe  if is expanded
      beforeEach
        component collapsed   false
        component ngOnInit


      it  sets isExpanded to false if toggles again
        expect component isExpanded  toBe true
        component toggleCollapsed
        expect component isExpanded  toBe false




import   Input  OnInit   from   angular core
import   I18n   from        i18n i18n

export class CollapsibleBaseComponent implements OnInit
  i18n   I18n
   Input   collapsed  boolean   true
  isExpanded  boolean
  private expanding  any

  ngOnInit
    this isExpanded    this collapsed


  toggleCollapsed    void
    this collapsed    this collapsed
    this onCollapsed


  protected onCollapsed
    if  this collapsed
      this isExpanded   false
      clearTimeout this expanding
      else
      this expanding   setTimeout
        this isExpanded   true
         1000



import   Component  Input  OnInit   from   angular core
import   CollapsibleBaseComponent   from    collapsible base component

 Component
  selector   my collapsible link
  templateUrl   collapsible link component html
  styleUrls    collapsible component scss

export class CollapsibleLinkComponent extends CollapsibleBaseComponent implements OnInit
   Input   closeAtBottom  boolean   false
   Input   title  string
   Input   closeTitle  string
   Input   icons  string

  ngOnInit
    super ngOnInit
    if   this closeTitle
      this closeTitle   this title



import   Component  OnInit   from   angular core
import   CollapsibleBaseComponent   from    collapsible base component

 Component
  selector   my collapsible text
  templateUrl   collapsible text component html
  styleUrls    collapsible component scss

export class CollapsibleTextComponent extends CollapsibleBaseComponent implements OnInit

import   Component   from   angular core
import   CollapsibleBaseComponent   from    collapsible base component

 Component
  selector   my collapsible title
  templateUrl   collapsible title component html
  styleUrls    collapsible component scss

export class CollapsibleTitleComponent extends CollapsibleBaseComponent

import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   Contract   from        models contract model

 Component
  selector   my contract address details
  templateUrl   contract address details component html

export class ContractAddressDetailsComponent
   Input   contract  Contract
  i18n   I18n

  customerAddressParts
    const customer   this contract customer
    const address   customer address
    const fullName      customer firstName    customer lastName
    return  fullName  address street  address zipCity    address country  filter x    x


  talentAddressParts
    const talent   this contract talent
    const address   talent address    talent user address
    const fullName      talent user firstName    talent user lastName
    return  talent companyName  fullName  address street  address zipCity    address country  filter x    x


import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule   from   angular forms
import   HttpModule   from   angular http
import   BrowserModule   from   angular platform browser
import   DropdownModule   from  ng2 bootstrap dropdown
import   CheckboxComponent   from    checkbox checkbox component
import   DropdownComponent   from    dropdown dropdown component
import   DurationInputComponent   from    duration input duration input component
import   MoneyInputComponent   from    money input money input component
import   RadioButtonComponent   from    radio button radio button component
import   SubmitButtonComponent   from    submit button submit button component
import   TimeInputComponent   from    time input time input component

 NgModule
  imports
    CommonModule
    FormsModule
    BrowserModule
    HttpModule
    DropdownModule forRoot

  declarations
    DropdownComponent
    DurationInputComponent
    MoneyInputComponent
    RadioButtonComponent
    SubmitButtonComponent
    TimeInputComponent
    CheckboxComponent

  exports
    DropdownComponent
    DurationInputComponent
    MoneyInputComponent
    RadioButtonComponent
    SubmitButtonComponent
    TimeInputComponent
    CheckboxComponent


export class CustomFormElementModule

import   Component  Input   from   angular core
import   I18n   from        i18n i18n
import   Cost   from     models cost cost model

 Component
  selector   my customer cost listing
  templateUrl   customer cost listing component html

export class CustomerCostListingComponent
   Input   cost  Cost
  currency   chf     eur
  i18n   I18n

import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   Cost   from        models cost cost model

 Component
  selector   my customer work cost listing
  templateUrl   customer work cost listing component html

export class CustomerWorkCostListingComponent
   Input   cost  Cost
  currency   chf     eur
  i18n   I18n

  get isFixedCost
    return   this cost work fixedRate


import   Component  OnDestroy  OnInit   from   angular core
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   UserSessionService   from        services user session service
import   TabItem   from     models tab item model

 Component
  templateUrl   archived component html

export class ArchivedComponent implements OnInit  OnDestroy
  tabItems  TabItem
  i18n   I18n
  private subscription  Subscription

  constructor public userSessionService  UserSessionService

  ngOnInit
    this subscription   this i18n getLang   subscribe       this buildTabItems


  private buildTabItems
    this tabItems
      new TabItem this i18n t dashboard tabs pending   dashboard
      new TabItem this i18n t dashboard tabs archived   archived



  ngOnDestroy
    this subscription unsubscribe


import   Component  OnDestroy  OnInit   from   angular core
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   UserSessionService   from        services user session service
import   TabItem   from     models tab item model

 Component
  templateUrl   dashboard component html

export class DashboardComponent implements OnInit  OnDestroy
  tabItems  TabItem
  i18n   I18n
  private subscription  Subscription

  constructor public userSessionService  UserSessionService

  ngOnInit
    this subscription   this i18n getLang   subscribe       this buildTabItems


  private buildTabItems
    this tabItems
      new TabItem this i18n t dashboard tabs pending   dashboard
      new TabItem this i18n t dashboard tabs archived   archived



  ngOnDestroy
    this subscription unsubscribe


import   EventEmitter   from   angular core
import   DropdownComponent   from    dropdown component
import   Option   from    option model

describe  DropdownComponent
  let component  DropdownComponent

  beforeEach
    component   new DropdownComponent


  it  has a onSelected which is a eventEmitter
    expect component onSelected  toEqual jasmine any EventEmitter


  it  has a options attribute
    const option1   new Option  option1   1
    const option2   new Option  option2   2
    component options    option1  option2
    expect component options 0   toEqual option1
    expect component options 1   toEqual option2


  it  has a selectedOption attribute
    const option   new Option  cool option   5
    component selectedOption   option
    expect component selectedOption  toEqual option


  it  has a dropdownDescription attribute
    component dropdownDescription    cool description
    expect component dropdownDescription  toEqual  cool description


  it  has a placeholder attribute
    component placeholder    cool placeholder
    expect component placeholder  toEqual  cool placeholder


  it  sets showOptions to false by default
    expect component showOptions  toEqual false


  describe  toggleDropdown
    it  sets toggle to false if its true
      component showOptions   true
      component toggleDropdown
      expect component showOptions  toEqual false


    it  sets toggle to true if its false
      component showOptions   false
      component toggleDropdown
      expect component showOptions  toEqual true



  describe  changeSelectedOption
    const option   new Option  cool option   4
    beforeEach
      spyOn component onSelected   emit   and returnValue true
      component changeSelectedOption option


    it  sets selectedOption to given Option
      expect component selectedOption  toEqual option


    it  emits event
      expect component onSelected emit  toHaveBeenCalledWith option



  describe  ngOnChanges
    it  doesnt do anything if options are undefined
      const expectedSelectedOption   new Option  cool option   5
      component options   undefined
      component selectedOption   expectedSelectedOption
      component ngOnChanges
      expect component selectedOption  toEqual expectedSelectedOption


    it  sets the selectedOption to the selected value if there are options
      const expectedSelectedOption   new Option  cool option    key1   value1   key2  2
      component options    new Option  cool option   4   expectedSelectedOption
      component selectedValue    key1   value1   key2  2
      component ngOnChanges
      expect component selectedOption  toEqual expectedSelectedOption


    it  sets the selectedOption to undefined if selected value isnt found in the options
      component options    new Option  cool option   4   new Option  cool option    key1   value1   key2  2
      component selectedValue    key1   value1   key2  3
      component ngOnChanges
      expect component selectedOption  toBeUndefined



  describe  selectedOptionLabel
    it  returns selected option label if there is one
      component selectedOption   new Option  selectedLabel   5
      expect component selectedOptionLabel    toEqual  selectedLabel


    it  it returns placeholder if there is no selectedOption
      component placeholder    no option selected
      component selectedOption   undefined
      expect component selectedOptionLabel    toEqual  no option selected



  describe  isValid
    it  returns false if no option is chosen
      expect component isValid    toEqual false


    it  returns true if option is chosen
      component selectedOption   new Option  test   true
      expect component isValid    toEqual true



  describe  isDisabled
    it  returns true if options is not set
      component options   null
      expect component isDisabled    toBe true


    it  returns true if no options available
      component options
      expect component isDisabled    toBe true


    it  returns false if options available
      component options    new Option  cool option   4
      expect component isDisabled    toBe false


    describe  checks read only property
      beforeEach
        component options    new Option  cool option   4


      it  returns true if it is set to read only
        component isReadOnly   true
        expect component isDisabled    toBe true


      it  returns false if it is not set to read only
        expect component isDisabled    toBe false




import   Component  EventEmitter  Input  OnChanges  Output   from   angular core
import   isEqual   from  lodash
import   Option   from    option model

 Component
  selector   my dropdown
  templateUrl   dropdown component html
  styleUrls    dropdown component scss    dropup component scss

export class DropdownComponent implements OnChanges
   Output   onSelected   new EventEmitter Option
   Input   options  Option
   Input   selectedValue  any
   Input   dropdownDescription  string
   Input   placeholder  string
   Input   dropUp  boolean   false
   Input   labelClass  string
   Input   isReadOnly   false
   Input   requiredMark  boolean   false

  selectedOption  Option
  showOptions  boolean   false

  toggleDropdown
    this showOptions    this showOptions


  ngOnChanges
    if  this options
      this setOptionByValue



  private setOptionByValue
    this selectedOption   this options find option    isEqual option value   this selectedValue


  changeSelectedOption option  Option
    this selectedOption   option
    this onSelected emit option


  selectedOptionLabel    string
    if  this selectedOption    return this selectedOption label
    return this placeholder


  isValid    boolean
    return   this selectedOption


  isDisabled
    return this isReadOnly     this options     this options length


import   Option   from    option model

describe  Option
  it  constructs a option
    const option  Option   new Option  My Label    my value
    expect option label  toEqual  My Label
    expect option value  toEqual  my value


  it  is possible to pass every value as a value
    const specialValue   new Date
    const option  Option   new Option  My Label   specialValue
    expect option value  toEqual specialValue


export class Option
  label  string
  value  any

  constructor label  string  value  any
    this label   label
    this value   value


import   Duration   from        models duration model
import   DurationInputComponent   from    duration input component

describe  DurationInputComponent
  let component  DurationInputComponent

  beforeEach
    component   new DurationInputComponent


  describe  writeValue
    it  sets the hours if duration is in hours
      component writeValue 300
      expect component duration  toEqual new Duration 300



  describe  form has setters to notify changes
    let onChangeFunction    durationInMinutes  number
    beforeEach
      onChangeFunction   jasmine createSpy  test
      component registerOnChange onChangeFunction


    describe  setMinutes
      it  returns false if minutes not set
        expect component duration minutes  toEqual 0
        component setMinutes  30
        expect component duration minutes  toEqual 30


      it  notifies the registered component about the change
        component setMinutes  30
        expect onChangeFunction  toHaveBeenCalledWith 30



    describe  setHours
      it  it switches focus to the element ref if hourse length equals 2
        expect component duration hours  toEqual 0
        component setHours  3
        expect component duration hours  toEqual 3


      it  notifies the registered component about the change
        component setMinutes  30
        component setHours  1
        expect onChangeFunction  toHaveBeenCalledWith 90



    describe  setDisabledState
      it  has the necessary function for the interface which sets a disabled attribute
        expect component disabled  toBe false
        component setDisabledState true
        expect component disabled  toBe true
        component setDisabledState false
        expect component disabled  toBe false




import   Component  forwardRef  Input   from   angular core
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms
import   I18n   from        i18n i18n
import   Duration   from        models duration model

 Component
  selector   my duration input
  templateUrl   duration input component html
  styleUrls    duration input component scss
  providers

      provide  NG VALUE ACCESSOR
         tslint disable next line no forward ref
      useExisting  forwardRef       DurationInputComponent
      multi  true



export class DurationInputComponent implements ControlValueAccessor
   Input   isInvalid  boolean
  duration  Duration   new Duration
  disabled   false
  i18n   I18n

  private propagateChange     durationInMinutes  number

  writeValue value  any   void
    this duration   new Duration value


  registerOnTouched    void

  registerOnChange fn  any   void
    this propagateChange   fn


  setDisabledState isDisabled  boolean   void
    this disabled   isDisabled


  setMinutes minutes  string
    this duration minutes   parseInt minutes  10
    this onChange


  setHours hours  string
    this duration hours   parseInt hours  10
    this onChange


  private onChange
    this propagateChange this duration getInMinutes


import   Duration   from        models duration model
import   EstimatedWorkDurationComponent   from    estimated work duration component

describe  EstimatedWorkDurationComponent
  let component  EstimatedWorkDurationComponent

  beforeEach
    component   new EstimatedWorkDurationComponent


  describe  ngOnInit
    it  initializes the duration
      component estimatedWorkDuration   300
      component ngOnInit
      expect component duration  toEqual new Duration 300



  describe  hasEstimatedWorkDuration
    it  returns false if is 0  which is the default
      component estimatedWorkDuration   0
      expect component hasEstimatedWorkDuration    toBe false


    it  returns true if is greater than null
      component estimatedWorkDuration   1
      expect component hasEstimatedWorkDuration    toBe true



import   Component  Input  OnInit   from   angular core
import   I18n   from        i18n i18n
import   Duration   from        models duration model

 Component
  selector   my estimated work duration
  templateUrl   estimated work duration component html

export class EstimatedWorkDurationComponent implements OnInit
   Input   estimatedWorkDuration  number
  i18n   I18n
  duration  Duration

  ngOnInit
    this duration   new Duration this estimatedWorkDuration


  hasEstimatedWorkDuration    boolean
    return this estimatedWorkDuration   0


import   FooterComponent   from    footer component

describe  FooterComponent
  let languageService  any
  let component  FooterComponent

  beforeEach
    languageService   jasmine createSpyObj  languageService     changeLocale
    component   new FooterComponent languageService


  describe  setLang
    it  calls changeLocaleAndUpdateUser of the languageService with given param
      component setLang  de CH
      expect languageService changeLocale  toHaveBeenCalledWith  de CH



import   Component   from   angular core
import   I18n   from        i18n i18n
import   LanguageService   from        services language service

 Component
  selector   my footer
  styleUrls    footer component scss
  templateUrl   footer component html

export class FooterComponent
  i18n   I18n

  constructor private languageService  LanguageService

  setLang locale  string
    this languageService changeLocale locale


export abstract class FormBase
  submitted   false

  abstract isFormValid    boolean

  showMissingAttributesError
    return this submitted     this isFormValid


import   Component  Input   from   angular core
import   I18n   from        i18n i18n
import   Cost   from     models cost cost model

 Component
  selector   my lawoon cost listing
  templateUrl   lawoon cost listing component html

export class LawoonCostListingComponent
   Input   cost  Cost
  currency   chf     eur
  i18n   I18n

  hasTalentVAT    boolean
    return this cost totals talentVat vatRate   0


import   TalentRating   from        models talent rating model
import   Talent   from        models talent model
import   WorkDescription   from    work states work description model

export class CompletedWork
  id  number
  createdAt  Date
  workDescription  WorkDescription
  talent  Talent
  talentRating  TalentRating

import   TimeDifferenceCalculator   from        models helpers time difference calculator
import   Talent   from        models talent model
import   User   from        models user model
import   PaymentMethod   from        payment payment method model
import   PossibleTime   from    possible time model
import   WorkFlow   from    work flow model
import   Offer   from    work states offer model
import   WorkDescription   from    work states work description model

export class Contract
  id  number
  createdAt  Date
  offer  Offer
  workDescription  WorkDescription
  customer  User
  talent  Talent
  chosenTime  PossibleTime
  paymentMethod  PaymentMethod
  workFlow  WorkFlow

  constructor private timeDifferenceCalculator  TimeDifferenceCalculator   new TimeDifferenceCalculator

  timeDifference    number
    return this timeDifferenceCalculator timeDifferenceToNow this createdAt


import   CostItemForm   from    cost item form model

describe  CostItemForm
  let model  CostItemForm

  beforeEach
    model   new CostItemForm  My Item   925  2


  it  has always a description attribute
    expect model description  toEqual  My Item


  it  has always a price attribute
    expect model price  toEqual 925


  it  serializes the object
    expect model serialize    toEqual
      amount  2
      description   My Item
      price  925



  describe  isValid
    beforeEach
      model amount   1
      model price   200
      model description    Something


    it  is valid when the item is filled out
      expect model isValid    toBe true


    it  is valid when the price is above 45 cent
      model price   45
      expect model isValid    toBe true


    it  is invalid when the amount is 0
      model amount   0
      expect model isValid    toBe false


    it  is invalid when the amount is negative
      model amount    5
      expect model isValid    toBe false


    it  is invalid when the description is empty
      model description
      expect model isValid    toBe false


    it  is invalid when the total is below 45 cent
      model price   44
      expect model isValid    toBe false


    it  is valid when the total is above 45 cent
      model amount   2
      model price   25
      expect model isValid    toBe true


    it  is invalid when the price is negative
      model price    20
      expect model isValid    toBe false



export class CostItemForm
  constructor public description  string  public price  number  public amount  number

  serialize
    return  amount  this amount  description  this description  price  this price


  isValid    boolean
    return this description length   0    this amount   0    this total      45


  private total
    return this price   this amount


import   CostSegmentation   from    cost segmentation model

export interface CostItem
  description  string
  price  number
  amount  number
  calculatedPrice  CostSegmentation
  totals  CostSegmentation

export interface CostLawoon
  workServiceFee  number
  itemServiceFee  number
  fee  number
  vatRate  number
  vatNumber  string
  vat  number

export interface CostPayment
  customer  number
  talent  number
  lawoon  number
  actualFeeRate  number

export interface CostSegmentation
  costExcludingFee  number
  costIncludingFee  number
  fee  number
  feeRate  number

export interface CostTalentVat
  vatRate  number
  vatNumber  string
  vat  number

export interface CostTotalsSegmentation
  costExcludingFee  number
  costIncludingFee  number
  fee  number

import   CostItem   from    cost item model
import   CostLawoon   from    cost lawoon model
import   CostPayment   from    cost payment model
import   CostSegmentation   from    cost segmentation model
import   CostTalentVat   from    cost talent vat model
import   CostTotalsSegmentation   from    cost totals segmentation model

export interface WorkCost
  fixedRate   number
  duration   number
  hourlyRate   number


interface WorkCostWithCalculatedRate extends WorkCost
  calculatedHourlyRate   CostSegmentation
  calculatedFixedRate   CostSegmentation


export interface Cost
  currency   chf
  work  WorkCostWithCalculatedRate
  items  CostItem
  totals
    items  CostTotalsSegmentation
    work  CostTotalsSegmentation
    subtotal  CostTotalsSegmentation
    talentVat  CostTalentVat
    lawoon  CostLawoon
    payment  CostPayment


export interface FirebaseSerializedNotification
   key  string
  type   activity     chatMessage
  message  string
  createdAtTimestamp  number
  url   string
  isRead   boolean


export class Notification
  constructor readonly key  string  readonly type   activity     chatMessage   readonly message  string
              private  createdAtTimestamp  number  readonly isRead   boolean  readonly url   string


  get createdAt    Date
    return new Date this  createdAtTimestamp


import   costMockJSON   from        api mock data cost api service mock data
import   Geolocation   from        models geolocation model
import   CostForm   from        talent costs cost form model
import   OfferForm   from    offer form model
import   PossibleTime   from    possible time model
import   Question   from    question model
import   Offer   from    work states offer model

describe  OfferForm
  let model  OfferForm
  const chosenTimes
    new PossibleTime new Date  2016 12 29T11 28 58 000Z
    new PossibleTime new Date  2017 01 03T10 43 55 000Z


  beforeEach
    model   new OfferForm


  describe  initialization without an offer
    it  has chosenTimes attribute  set to empty array
      expect model chosenTimes  toEqual


    it  has offerText attribute
      expect model offerText  toEqual undefined


    it  has questions attribute  set to empty array
      expect model questions  toEqual



  describe  initialization with an offer
    let offer  Offer

    beforeEach
      offer   new Offer


    it  adds the offerText to the offer form
      offer offerText    hello world
      expect new OfferForm offer  offerText  toEqual  hello world


    it  adds the workPlace to the offer form
      const workPlace   new Geolocation
      offer workPlace   workPlace
      expect new OfferForm offer  workPlace  toEqual workPlace


    it  adds the workPlace to the offer form
      offer chosenTimes   chosenTimes
      expect new OfferForm offer  chosenTimes  toEqual chosenTimes


    it  adds the questions with answers to the offer form
      const question1    question   q1   answer   a1
      const question2    question   q2   answer   a2
      offer answers    question1  question2
      expect new OfferForm offer  questions  toEqual  new Question question1   new Question question2


    it  adds a initialized costform object to the offer form
      const cost   costMockJSON attributes cost
      offer cost   cost
      expect new OfferForm offer  costForm  toEqual new CostForm cost



import   CostForm   from        talent costs cost form model
import   Question   from    question model
import   Offer   from    work states offer model

export class OfferForm
  offer  Offer
  questions  Question
  costForm  CostForm   new CostForm

  get chosenTimes
    return this offer chosenTimes


  get offerText
    return this offer offerText


  get workPlace
    return this offer workPlace


  constructor offer   Offer
    this offer   offer    new Offer
    this questions   this offer answers map answer    new Question     answer
    this costForm   new CostForm this offer cost


import   as moment from  moment
import  moment locale de
import   PossibleTime   from    possible time model

describe  PossibleTime
  const fromInput    2012 12 10T11 05 00 000Z
  const model   new PossibleTime new Date Date UTC 2012  11  10  11  5

  beforeEach
    moment locale  de


  describe  constructor parses strings
    it  accepts a UTC time string
      expect model from  toEqual new Date Date UTC 2012  11  10  11  5



  describe  dateFromAsString
    it  formats the  from  date to a passed in format of moment js
      expect model dateFromAsString  L    toEqual  10 12 2012
      expect model dateFromAsString  L   LT    toEqual  10 12 2012   12 05



  describe  serialize
    it  serializes the time as UTC time strings
      expect model serialize    toEqual jasmine objectContaining  from  fromInput



  describe  parseToString
    it  prints data as good readable string
      expect model parseToString    toEqual  10 12 2012   12 05



import   as moment from  moment
import   TimeStruct   from        api endpoints work state api interface

export class PossibleTime

  constructor readonly from  Date
    this from   moment from  toDate


  parseToString    string
    return this dateFromAsString  L   LT


  dateFromAsString format  string   string
    return moment this from  format format


  serialize    TimeStruct
    return
      from  this from toISOString



import   Question   from    question model

describe  Question
  let model  Question   new Question

  it  has question attribute
    expect model question  toEqual undefined


  it  has answer attribute
    expect model answer  toEqual undefined


  describe  isEmpty
    it  empty object returns true
      model   new Question
      expect model isEmpty    toBeTruthy


    it  not empty object returns false
      model   new Question
      model question    test
      expect model isEmpty    toBeFalsy



  describe  serialize
    it  serializes an empty object with undefined
      model   new Question
      expect model serialize    toEqual undefined


    it  serializes a not empty object the right way
      model   new Question
      model question    What
      const expectedSerialized  any    question   What    answer  undefined
      expect model serialize    toEqual expectedSerialized



import   extend   from  lodash

export interface IQuestionOptions
  question   string
  answer   string


export class Question
  question   string
  answer   string

  constructor options   IQuestionOptions
    if  options
      extend this  options



  isEmpty    boolean
    return  this question     this answer


  serialize
    if   this isEmpty
      return
        question  this question
        answer  this answer




  deserialize data  any   Question
    this question   data question
    this answer   data answer
    return this


export class TabItem
  constructor public title  string  public link  string  public badgeNumber   number

import   Talent   from        models talent model
import   User   from        models user model
import   Contract   from    contract model
import   SpecifiedWorkFlowStatus  WorkFlowStatus   from    work flow types
import   Bill   from    work states bill
import   DeclinedInvitation   from    work states declined invitation model
import   DeclinedOffer   from    work states declined offer model
import   Offer   from    work states offer model
import   Receipt   from    work states receipt
import   WorkDescription   from    work states work description model
import   WorkInvitation   from    work states work invitation model

export class WorkFlow
  id  number
  latestType  WorkFlowStatus
  latestId  number
  workDescription  WorkDescription
  workInvitation  WorkInvitation
  declinedInvitation  DeclinedInvitation
  offer  Offer
  declinedOffer  DeclinedOffer
  contract  Contract
  bill  Bill
  receipt  Receipt
  talent  Talent
  customer  User

  constructor id   number
    this id   id


  getStatus    SpecifiedWorkFlowStatus
    if  this latestType      contract     this contract    this contract chosenTime 0  from    new Date
      return  contractDone

    return this latestType


export type WorkFlowStatus    workInvitation     offer     contract     bill    ArchivedWorkFlowStatus
export type SpecifiedWorkFlowStatus   WorkFlowStatus    contractDone
export type ArchivedWorkFlowStatus    declinedInvitation     declinedOffer     receipt
import   Talent   from           models talent model
import   User   from           models user model
import   PaymentMethod   from           payment payment method model
import   Contract   from     contract model
import   Cost   from     cost cost model
import   WorkFlow   from     work flow model
import   Offer   from    offer model
import   WorkDescription   from    work description model

export class Bill
  id  number
  cost  Cost
  contract  Contract
  offer  Offer
  workDescription  WorkDescription
  paymentMethod  PaymentMethod
  customer  User
  talent  Talent
  createdAt  Date
  archivedAt  Date
  workFlow  WorkFlow

import   Talent   from           models talent model
import   User   from           models user model
import   WorkFlow   from     work flow model
import   WorkDescription   from       work states work description model

export class DeclinedInvitation
  id  number
  createdAt  Date
  workDescription  WorkDescription
  talent  Talent
  customer  User
  workFlow  WorkFlow
  declinedBy   customer     talent

import   Talent   from           models talent model
import   User   from           models user model
import   WorkFlow   from     work flow model
import   Offer   from       work states offer model
import   WorkDescription   from       work states work description model

export class DeclinedOffer
  id  number
  reason  string
  createdAt  Date
  offer  Offer
  workDescription  WorkDescription
  customer  User
  talent  Talent
  workFlow  WorkFlow
  declinedBy   customer     talent

import   Offer   from    offer model

describe  Offer
  let model  Offer

  beforeEach
    model   new Offer


  it  has id attribute
    expect model id  toEqual undefined


  it  has chosenTimes attribute  set to empty array
    expect model chosenTimes  toEqual


  it  has offerText attribute
    expect model offerText  toEqual undefined


  it  has costs attribute  set to undefined
    expect model cost  toBeUndefined


  it  has answer attribute  set to empty array
    expect model answers  toEqual


  describe  timeDifference
    it  returns difference in days of createdAt to today
      model createdAt   new Date 2013  9  21
      const baseTime   new Date 2013  9  23
      jasmine clock   mockDate baseTime
      expect model timeDifference    toEqual 2



import   AnswerStruct   from           api endpoints work state api interface
import   Category   from           categories shared category model
import   Subcategory   from           categories shared subcategory model
import   Geolocation   from           models geolocation model
import   TimeDifferenceCalculator   from           models helpers time difference calculator
import   Talent   from           models talent model
import   User   from           models user model
import   Cost   from     cost cost model
import   PossibleTime   from     possible time model
import   WorkFlow   from     work flow model
import   WorkDescription   from    work description model

export class Offer
  id  number
  workDescription  WorkDescription
  customer  User
  talent  Talent
  category  Category
  subcategory  Subcategory
  answers  AnswerStruct
  chosenTimes  PossibleTime
  cost  Cost
  createdAt  Date
  archivedAt  Date
  offerText  string
  workPlace  Geolocation
  workFlow  WorkFlow

  constructor private timeDifferenceCalculator  TimeDifferenceCalculator   new TimeDifferenceCalculator

  timeDifference    number
    return this timeDifferenceCalculator timeDifferenceToNow this createdAt


import   Contract   from     contract model
import   Bill   from    bill
import   DeclinedInvitation   from    declined invitation model
import   DeclinedOffer   from    declined offer model
import   Offer   from    offer model
import   Receipt   from    receipt
import   WorkDescription   from    work description model
import   WorkInvitation   from    work invitation model

export class PendingWork
  workDescription  WorkDescription
  offers  Offer
  contract  Contract
  workInvitations  WorkInvitation
  bill  Bill
  receipt  Receipt
  declinedInvitations  DeclinedInvitation
  declinedOffers  DeclinedOffer

  offersCount    number
    return this offers filter offer     offer archivedAt  length


import   Talent   from           models talent model
import   User   from           models user model
import   Contract   from     contract model
import   WorkFlow   from     work flow model
import   Bill   from    bill
import   Offer   from    offer model
import   WorkDescription   from    work description model

export class Receipt
  id  number
  bill  Bill
  contract  Contract
  offer  Offer
  workDescription  WorkDescription
  customer  User
  talent  Talent
  createdAt  Date
  archivedAt  Date
  workFlow  WorkFlow

import   WorkDescription   from    work description model

describe  WorkDescription
  describe  timeDifference
    it  returns difference in days of createdAt to today
      const model  WorkDescription   new WorkDescription
      model createdAt   new Date 2013  9  21
      const baseTime   new Date 2013  9  23
      jasmine clock   mockDate baseTime
      expect model timeDifference    toEqual 2



import   Category   from           categories shared category model
import   Subcategory   from           categories shared subcategory model
import   Geolocation   from           models geolocation model
import   TimeDifferenceCalculator   from           models helpers time difference calculator
import   User   from           models user model
import   PossibleTime   from     possible time model
import   Question   from     question model
import   WorkStatus   from    work types

export class WorkDescription
  id  number
  title  string
  description  string
  possibleTimes  PossibleTime
  questions  Question
  files  string
  workPlace  Geolocation
  estimatedWorkMinutes  number
  status  WorkStatus
  createdAt  Date
  subcategory  Subcategory
  category  Category
  customer  User
  isPublic  boolean

  constructor private timeDifferenceCalculator  TimeDifferenceCalculator   new TimeDifferenceCalculator

  timeDifference    number
    return this timeDifferenceCalculator timeDifferenceToNow this createdAt


  referenceNumber    string
    return this id toString


import   Talent   from           models talent model
import   DeclinedInvitation   from    declined invitation model
import   WorkDescription   from    work description model

export class WorkInvitation
  id  number
  workDescription  WorkDescription
  talent  Talent
  archivedAt   Date
  createdAt  Date
  declinedInvitation  DeclinedInvitation

export type WorkStatus    canceled     offering     running     payment     rating     done     draft
export type SpecifiedWorkStatus   WorkStatus    offeringWithOffers     waitingForBill
import   MoneyInputComponent   from    money input component

describe  MoneyInputComponent
  const component   new MoneyInputComponent

  describe  writeValue
    let callbackSpy  jasmine Spy

    beforeEach
      component input
        nativeElement
          value



      callbackSpy   spyOn component   onChangeCallback


    it  converts the given cents into a currency CHF EUR to the native element
      component writeValue 2000
      expect component input nativeElement value  toEqual  20 00
      expect callbackSpy  toHaveBeenCalledWith 2000


    it  converts also zero
      component writeValue 0
      expect component input nativeElement value  toEqual  0 00
      expect callbackSpy  toHaveBeenCalledWith 0


    it  resets the native element when the written value is undefined
      component writeValue undefined
      expect component input nativeElement value  toEqual
      expect callbackSpy  toHaveBeenCalledWith undefined


    it  resets the native element when the written value is not a number
      component writeValue  e
      expect component input nativeElement value  toEqual
      expect callbackSpy  toHaveBeenCalledWith undefined


    it  does not allow negative numbers
      component writeValue  2000
      expect component input nativeElement value  toEqual  20 00
      expect callbackSpy  toHaveBeenCalledWith 2000



  describe  onChange
    const event
      target
        value  20



    it  writes the the value in Cents
      const writeSpy   spyOn component   writeValue
      component onChange event
      expect writeSpy  toHaveBeenCalledWith 2000


    it  calls the value change callback
      const spy   spyOn component valueChanged   emit
      component onChange event
      expect spy  toHaveBeenCalled



  describe  registerOnTouched
    it  sets the touch callback
      const callback
      component registerOnTouched callback
      expect component onTouchedCallback  toEqual callback



  describe  registerOnChange
    it  sets the change callback
      const callback
      component registerOnChange callback
      expect component onChangeCallback  toEqual callback



import   Component  ElementRef  EventEmitter  forwardRef  Input  Output  ViewChild   from   angular core
import   ControlValueAccessor  NG VALUE ACCESSOR   from   angular forms

export const MONEY ACCESSOR  any
  provide  NG VALUE ACCESSOR
     tslint disable next line no forward ref
  useExisting  forwardRef       MoneyInputComponent
  multi  true


 Component
  selector   my money input
  templateUrl   money input component html
  styles
  providers   MONEY ACCESSOR

export class MoneyInputComponent implements ControlValueAccessor
   Input   className  string
   Input   placeholder  string
   Input   disabled  boolean
   Input   isInvalid  boolean
   Output   valueChanged   new EventEmitter void
   ViewChild  input   input  ElementRef

  onTouchedCallback
  onChangeCallback       any

  onChange event  any
    const amountInCents   parseFloat event target value    100
    this writeValue amountInCents
    this valueChanged emit


  private convertFromCents centsAmount  number   undefined   string
    const amount   centsAmount   100
    return isNaN amount         amount toFixed 2


  writeValue object  any
    const centsAmount   this roundedCentsAmountToFiveCents object
    this input nativeElement value   this convertFromCents centsAmount
    this onChangeCallback centsAmount


  private roundedCentsAmountToFiveCents object  any   number   undefined
    const centsAmount   Math abs parseFloat object
    if  isNaN centsAmount     return undefined
    return Math ceil centsAmount   5    0 2


  registerOnTouched func  any
    this onTouchedCallback   func


  registerOnChange func  any
    this onChangeCallback   func


import   NavigationEnd   from   angular router
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   MockRouter   from        mocks router mock
import   NavbarDesktopComponent   from    navbar desktop component

describe  NavbarDesktopComponent
  let component  NavbarDesktopComponent
  let userSessionService  any
  const mockRouter  MockRouter   new MockRouter

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     isLoggedIn    currentRole    isUserAndTalent
    component   new NavbarDesktopComponent userSessionService   any  mockRouter   any


  describe  isLoggedIn
    it  deletages the logged in to the userSessionService
      userSessionService isLoggedIn and returnValue Observable of true
      component isLoggedIn   subscribe loggedIn
        expect loggedIn  toBe true
        expect userSessionService isLoggedIn  toHaveBeenCalled




  describe  isTalentAndCustomer
    it  deletages isTalentAndCustomer to the userSessionService
      userSessionService isUserAndTalent and returnValue Observable of true
      component isTalentAndCustomer   subscribe isUserAndTalent
        expect isUserAndTalent  toBe true
        expect userSessionService isUserAndTalent  toHaveBeenCalled




  describe  isHomeSite
    it  is false by default
      expect component isHomeSite  toBeFalsy


    it  works for the home route
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1
      expect component isHomeSite  toBeTruthy


    it  doesn work if it isnt the home route
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1    talents     talents
      expect component isHomeSite  toBeFalsy


    it  works for the home route with login auth modal open
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1     auth login       auth login
      expect component isHomeSite  toBeTruthy


    it  works for the home route with register auth modal open
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1     auth register       auth register
      expect component isHomeSite  toBeTruthy


    it  works for the talent landingpage route
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1    create profile     create profile
      expect component isHomeSite  toBeTruthy


    it  works for the customer landingpage route
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1    place a job     create profile
      expect component isHomeSite  toBeTruthy


    it  works for the home route with login auth modal open and route params
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1     auth login redirect  2Fcustomer 2Fworks 2Fnew 2F1
           auth login redirect  2Fcustomer 2Fworks 2Fnew 2F1
      expect component isHomeSite  toBeTruthy


    it  works for the home route with fragment link
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1     how it works      how it works
      expect component isHomeSite  toBeTruthy


    it  works with parameters
      component ngOnInit
      mockRouter mockEvent new NavigationEnd 1     locale it      locale it
      expect component isHomeSite  toBeTruthy



  describe  displayTalentTopNav
    it  returns true if current role is talent   done
      userSessionService currentRole and returnValues Observable of  talent
      component displayTalentTopNav   subscribe displayTalentTopNav
        expect displayTalentTopNav  toBe true
        expect userSessionService currentRole  toHaveBeenCalled
        done



    it  returns false if current role is customer   done
      userSessionService currentRole and returnValues Observable of  customer
      component displayTalentTopNav   subscribe displayTalentTopNav
        expect displayTalentTopNav  toBe false
        expect userSessionService currentRole  toHaveBeenCalled
        done




import   Component  HostListener  OnDestroy  OnInit   from   angular core
import   NavigationEnd  Router   from   angular router
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   RefererService   from        services referer service
import   UserSessionService   from        services user session service

 Component
  selector   my navbar desktop
  templateUrl   navbar desktop component html
  styleUrls    navbar desktop component scss

export class NavbarDesktopComponent implements OnInit  OnDestroy
  i18n   I18n
  isHomeSite  boolean   false
  isTalentHomeSite  boolean   false
  isSticky  boolean   true
  previousTop  number   0
  private subscription  Subscription

   HostListener  window scroll
  onWindowScroll
    const currentTop   window pageYOffset    document documentElement scrollTop    document body scrollTop    0
    this setSticky currentTop
    this previousTop   currentTop


  constructor private userSessionService  UserSessionService  private router  Router  public refererService  RefererService

  ngOnInit    void
    this subscription   this router events filter event    event instanceof NavigationEnd
       subscribe  x  NavigationEnd     this setUrlProperties x url


  ngOnDestroy    void
    this subscription unsubscribe


  isLoggedIn    Observable boolean
    return this userSessionService isLoggedIn


  displayTalentTopNav    Observable boolean
    return this userSessionService currentRole   map role    role      talent


  isTalentAndCustomer    Observable boolean
    return this userSessionService isUserAndTalent


  private setUrlProperties url  string
    this isHomeSite   this isRoot url     this isLandingpage url     this isUrlModal url     this isStartpageWithAddition url
    this isTalentHomeSite   url startsWith   create profile


  private isRoot url  string
    return url


  private isLandingpage url  string
    return url startsWith   create profile      url startsWith   place a job


  private isUrlModal url  string
    return url startsWith    auth


  private isStartpageWithAddition url  string
    return url startsWith          url startsWith


  private setSticky currentTop  number
    const headerHeight   150
    if  currentTop   this previousTop
      this isSticky   true
      else if  currentTop   this previousTop    currentTop   headerHeight
      this isSticky   false



import   MockRouter   from        mocks router mock
import   NavbarMobileComponent   from    navbar mobile component

describe  NavbarMobileComponent
  let component  NavbarMobileComponent
  let renderer  any

  beforeEach
    renderer   jasmine createSpyObj  renderer     addClass    removeClass
    component   new NavbarMobileComponent  any       any  new MockRouter     any       any  renderer


  describe  toggleNav
    beforeEach
      component ngOnInit


    it  opens the nav
      component isCollapsed   true
      component toggleNav
      expect renderer addClass  toHaveBeenCalledWith document body   no scroll
      expect renderer removeClass  not toHaveBeenCalled
      expect component isCollapsed  toBe false


    it  closes the nav
      component isCollapsed   false
      component toggleNav
      expect renderer removeClass  toHaveBeenCalledWith document body   no scroll
      expect renderer addClass  not toHaveBeenCalled
      expect component isCollapsed  toBe true



   tslint disable no access missing member
import   Component  Renderer2   from   angular core
import   Router   from   angular router
import   RefererService   from        services referer service
import   UserSessionService   from        services user session service
import   NavbarDesktopComponent   from    navbar desktop component

 Component
  selector   my navbar mobile
  templateUrl   navbar mobile component html
  styleUrls    navbar mobile component scss

export class NavbarMobileComponent extends NavbarDesktopComponent
  isCollapsed  boolean   true

  constructor userSessionService  UserSessionService  router  Router  public refererService  RefererService
              private renderer  Renderer2
    super userSessionService  router  refererService


  toggleNav
    if  this isCollapsed
      this renderer addClass document body   no scroll
      else
      this renderer removeClass document body   no scroll

    this isCollapsed    this isCollapsed


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   NavbarRightComponent   from    navbar right component

describe  NavbarRightComponent
  let component  NavbarRightComponent
  let sessionService  any
  let userSessionService  any

  beforeEach
    sessionService   jasmine createSpyObj  sessionService     logout
    userSessionService   jasmine createSpyObj  userSessionService     currentRole    isLoggedIn
    component   new NavbarRightComponent sessionService  userSessionService


  describe  logout
    it  calls the logout on session service
      component logout
      expect sessionService logout  toHaveBeenCalledTimes 1



  describe  isLoggedIn
    it  calls the isLoggedIn on session service   done
      userSessionService isLoggedIn and returnValue Observable of false
      component isLoggedIn   subscribe
        expect userSessionService isLoggedIn  toHaveBeenCalledTimes 1
        done




import   Component   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   SessionService   from           services session service
import   UserSessionService   from           services user session service

 Component
  selector   my navbar right
  templateUrl   navbar right component html
  styleUrls    navbar right component scss

export class NavbarRightComponent
  i18n   I18n

  constructor private sessionService  SessionService  private userSessionService  UserSessionService

  logout
    return this sessionService logout


  isLoggedIn    Observable boolean
    return this userSessionService isLoggedIn


import   CommonModule   from   angular common
import   NgModule   from   angular core
import   RouterModule   from   angular router
import   CollapseModule   from  ng2 bootstrap collapse
import   PublicBrowseModule   from        public browse public browse module
import   CustomFormElementModule   from     custom form element module
import   NavbarDesktopComponent   from    navbar desktop component
import   NavbarMobileComponent   from    navbar mobile component
import   NavbarRightComponent   from    navbar right navbar right component
import   NotificationsComponent   from    notifications notifications component
import   CustomerQuickActionComponent   from    quick actions customer quick action component
import   CustomerQuickActionLinksComponent   from    quick actions links customer quick action links component
import   TalentQuickActionLinksComponent   from    quick actions links talent quick action links component
import   TalentQuickActionComponent   from    quick actions talent quick action component

 NgModule
  imports
    CommonModule
    CustomFormElementModule
    PublicBrowseModule
    CollapseModule forRoot
    RouterModule forChild

  declarations
    CustomerQuickActionComponent
    NavbarDesktopComponent
    NavbarMobileComponent
    NavbarRightComponent
    NotificationsComponent
    TalentQuickActionComponent
    CustomerQuickActionLinksComponent
    TalentQuickActionLinksComponent

  exports
    NavbarDesktopComponent
    NavbarMobileComponent


export class NavbarModule
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   NotificationsComponent   from    notifications component

describe  NotificationsComponent
  let notificationService  any
  let component  NotificationsComponent

  beforeEach
    notificationService   jasmine createSpyObj  notificationService     all    markAsRead
    component   new NotificationsComponent null  notificationService


  describe  dismissDropdown
    it  sets the isOpen flag to false
      component isOpen   true
      component dismissDropdown
      expect component isOpen  toEqual false


    it  leaves the isOpen flag on false if already false
      component isOpen   false
      component dismissDropdown
      expect component isOpen  toEqual false



  describe  markAsRead
    it  calls the notifications service with the given notification
      const notification    data   test
      component markAsRead  any  notification
      expect notificationService markAsRead  toHaveBeenCalledWith notification



  describe  toggleDropdown
    let event  any

    beforeEach
      event   jasmine createSpyObj  event     preventDefault


    it  sets the isOpen flag to false if it was true
      component isOpen   true
      component toggleDropdown event
      expect component isOpen  toEqual false
      expect event preventDefault  toHaveBeenCalled


    it  sets the isOpen flag to true if it was false
      component isOpen   false
      component toggleDropdown event
      expect component isOpen  toEqual true
      expect event preventDefault  toHaveBeenCalled



  describe  unreadCount
    it  returns the length of notifications not yet read
      const notifications     isRead  true    isRead  false    isRead  false
      component notifications    any  notifications
      expect component unreadCount    toEqual 2



  describe  ngOnInit
    it  subscribes to the notificationService and assigns it in reverse order to the notifications property
      const notifications     id  1    id  2    id  3
      notificationService all and returnValue Observable of notifications
      component ngOnInit
      expect component notifications  toEqual  any    id  3    id  2    id  1



import   Component  ElementRef  HostListener  OnInit   from   angular core
import   I18n   from           i18n i18n
import   NotificationService   from           services notification service
import   Notification   from        models notification model

 Component
  selector   my notifications
  templateUrl   notifications component html
  styleUrls    notifications component scss

export class NotificationsComponent implements OnInit
  i18n   I18n
  isOpen  boolean   false
  notifications  Notification

   HostListener  document click      event
  clickout event  any
    if   this elRef nativeElement contains event target
      this dismissDropdown



  constructor private elRef  ElementRef  private notificationService  NotificationService

  ngOnInit
    this notificationService all   subscribe notifications
      this notifications   notifications
      this notifications reverse



  unreadCount    number
    return this notifications filter n     n isRead  length


  toggleDropdown event  any
    event preventDefault
    this isOpen    this isOpen


  dismissDropdown
    this isOpen   false


  markAsRead notification  Notification
    this notificationService markAsRead notification


import   CustomerQuickActionComponent   from    customer quick action component

describe  CustomerQuickActionComponent
  let component  CustomerQuickActionComponent
  let roleStorageService  any

  beforeEach
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToTalent
    component   new CustomerQuickActionComponent roleStorageService   any       any       any


  describe  setRoleToTalent
    it  changes the role by calling the role service
      component changeToTalentRole
      expect roleStorageService setRoleToTalent  toHaveBeenCalled



   tslint disable no access missing member
import   Component  ElementRef   from   angular core
import   RoleStorageService   from           services role storage service
import   SessionService   from           services session service
import   UserSessionService   from           services user session service
import   QuickActionComponent   from    quick action component

 Component
  selector   my customer quick action
  templateUrl   customer quick action component html
  styleUrls    customer quick action component scss    quick action component scss

export class CustomerQuickActionComponent extends QuickActionComponent
  constructor roleStorageService  RoleStorageService  sessionService  SessionService
              userSessionService  UserSessionService  elRef  ElementRef
    super roleStorageService  sessionService  userSessionService  elRef


  changeToTalentRole
    this roleStorageService setRoleToTalent


   tslint disable no access missing member
import   Component  ElementRef   from   angular core
import   RoleStorageService   from              services role storage service
import   SessionService   from              services session service
import   UserSessionService   from              services user session service
import   CustomerQuickActionComponent   from     customer quick action component

 Component
  selector   my customer quick action links
  templateUrl   customer quick action links component html
  styleUrls    quick action links component scss

export class CustomerQuickActionLinksComponent extends CustomerQuickActionComponent

  constructor roleStorageService  RoleStorageService  sessionService  SessionService
              userSessionService  UserSessionService  elRef  ElementRef
    super roleStorageService  sessionService  userSessionService  elRef


   tslint disable no access missing member
import   Component  ElementRef   from   angular core
import   RoleStorageService   from              services role storage service
import   SessionService   from              services session service
import   UserSessionService   from              services user session service
import   TalentQuickActionComponent   from     talent quick action component

 Component
  selector   my talent quick action links
  templateUrl   talent quick action links component html
  styleUrls    quick action links component scss

export class TalentQuickActionLinksComponent extends TalentQuickActionComponent

  constructor roleStorageService  RoleStorageService  sessionService  SessionService
              userSessionService  UserSessionService  elRef  ElementRef
    super roleStorageService  sessionService  userSessionService  elRef


import   ElementRef   from   angular core
import  rxjs add observable of
import   Observable   from  rxjs Observable
import   QuickActionComponent   from    quick action component

describe  QuickActionComponent
  let component  QuickActionComponent
  let roleStorageService  any
  let sessionService  any
  let userSessionService  any
  const elementRef  ElementRef    any   current        Observable of  firstName   Megan

  beforeEach
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToCustomer    setRoleToTalent
    sessionService   jasmine createSpyObj  sessionService     logout
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    component   new QuickActionComponent roleStorageService  sessionService  userSessionService  elementRef


  describe  logout
    it  calls the session service to logout
      component logout
      expect sessionService logout  toHaveBeenCalled



  describe  shortenedName
    it  returns the shortende name if customer has a first name   done
      userSessionService currentUser and returnValue Observable of  firstName   Megan   lastName   Fox
      component shortenedName   subscribe shortenedName
        expect shortenedName  toEqual  Megan F
        done



    it  returns the email if customer has no first name   done
      userSessionService currentUser and returnValue Observable of  firstName      lastName   Fox   email   example com
      component shortenedName   subscribe shortenedName
        expect shortenedName  toEqual  example com
        done



    it  returns an empty string  if no user  not logged in    done
      userSessionService currentUser and returnValue Observable of null
      component shortenedName   subscribe shortenedName
        expect shortenedName  toEqual
        done




  describe  dismissDropdown
    it  sets isOpen to false
      component isOpen   true
      component dismissDropdown
      expect component isOpen  toEqual false
      component dismissDropdown
      expect component isOpen  toEqual false



  describe  dismissDropdown
    const event   jasmine createSpyObj  event     preventDefault

    it  sets isOpen from true to false
      component isOpen   true
      component toggleDropdown event
      expect component isOpen  toEqual false
      expect event preventDefault  toHaveBeenCalled


    it  sets isOpen from false to true
      component isOpen   false
      component toggleDropdown event
      expect component isOpen  toEqual true
      expect event preventDefault  toHaveBeenCalled



import   ElementRef  HostListener   from   angular core
import  rxjs add operator map
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   RoleStorageService   from           services role storage service
import   SessionService   from           services session service
import   UserSessionService   from           services user session service

export class QuickActionComponent
  i18n   I18n
  isOpen  boolean   false

   HostListener  document click      event
  clickout event  any
    if   this elRef nativeElement contains event target
      this dismissDropdown



  constructor protected roleStorageService  RoleStorageService  private sessionService  SessionService
              public userSessionService  UserSessionService  private elRef  ElementRef

  logout
    this sessionService logout


  toggleDropdown event  any
    event preventDefault
    this isOpen    this isOpen


  dismissDropdown
    this isOpen   false


  shortenedName    Observable string
    return this userSessionService currentUser   map currentUser
      if   currentUser    return
      return currentUser firstName       currentUser firstName    currentUser lastName 0        currentUser email



import   TalentQuickActionComponent   from    talent quick action component

describe  TalentQuickActionComponent
  let component  TalentQuickActionComponent
  let roleStorageService  any

  beforeEach
    roleStorageService   jasmine createSpyObj  roleStorageService     setRoleToCustomer
    component   new TalentQuickActionComponent roleStorageService   any       any       any


  describe  changeToCustomerRole
    it  changes the role by calling the role service
      component changeToCustomerRole
      expect roleStorageService setRoleToCustomer  toHaveBeenCalled



   tslint disable no access missing member
import   Component  ElementRef   from   angular core
import   RoleStorageService   from           services role storage service
import   SessionService   from           services session service
import   UserSessionService   from           services user session service
import   QuickActionComponent   from    quick action component

 Component
  selector   my talent quick action
  templateUrl   talent quick action component html
  styleUrls    talent quick action component scss    quick action component scss

export class TalentQuickActionComponent extends QuickActionComponent
  constructor roleStorageService  RoleStorageService  sessionService  SessionService
              userSessionService  UserSessionService  elRef  ElementRef
    super roleStorageService  sessionService  userSessionService  elRef


  changeToCustomerRole
    this roleStorageService setRoleToCustomer


import   Component   from   angular core
import   I18n   from        i18n i18n
import   ConnectionService   from        services connection service

 Component
  selector   my no connection
  templateUrl   no connection component html
  styleUrls    no connection component scss

export class NoConnectionComponent
  i18n   I18n

  constructor public connectionService  ConnectionService

  reload
       not tested yet
    window location reload


import   cloneDeep   from  lodash
import   Observable   from  rxjs Observable
import   notificationSettingsDataMockJSON   from        api mock data notification settings mock data
import   I18n   from        i18n i18n
import   NotificationSettingsComponent   from    notification settings component

describe  NotificationSettingsComponent
  let alertService  any
  let notificationSettingsService  any
  let userSessionService  any
  let component  NotificationSettingsComponent

  beforeEach
    notificationSettingsService   jasmine createSpyObj  notificationSettingsService     getSettings    updateSettings
    userSessionService   jasmine createSpyObj  userSessionService     currentUser    currentTalent
    alertService   jasmine createSpyObj  alertService     success    danger
    component   new NotificationSettingsComponent notificationSettingsService  userSessionService  alertService


  describe  submit
    beforeEach
      component newSettings   cloneDeep notificationSettingsDataMockJSON
      component user    any   id  5


    describe  successful
      beforeEach
        notificationSettingsService updateSettings and returnValue Observable of null
        component submit


      it  calls update on customerService
        expect notificationSettingsService updateSettings  toHaveBeenCalledWith notificationSettingsDataMockJSON  5


      it  shows success alert
        expect alertService success  toHaveBeenCalledWith I18n t notificationSettings updateSuccess



    describe  unsuccessful
      it  shows danger alert
        notificationSettingsService updateSettings and returnValue Observable throw null
        component submit
        expect alertService danger  toHaveBeenCalledWith I18n t notificationSettings updateError




  describe  ngOnInit
    beforeEach
      userSessionService currentUser and returnValue Observable of  id  4
      userSessionService currentTalent and returnValue Observable of  id  22
      notificationSettingsService getSettings and returnValue Observable of  some   settings


    it  calls the current user and stores it
      component ngOnInit
      expect userSessionService currentUser  toHaveBeenCalled
      expect component user  toEqual  any   id  4


    it  calls the current talent and stores it
      component ngOnInit
      expect userSessionService currentTalent  toHaveBeenCalled
      expect component talent  toEqual  any   id  22


    it  calls the settings service with the user id from current user
      component ngOnInit
      expect notificationSettingsService getSettings  toHaveBeenCalledWith 4



  describe  notificationKeys
    it  returns only the user keys if only user
      expect component notificationKeys    toEqual   group   user   keys  NotificationSettingsComponent userNotificationKeys


    it  returns also the customer keys if customer
      component isCustomer   true
      expect component notificationKeys    toEqual
         group   user   keys  NotificationSettingsComponent userNotificationKeys
         group   customer   keys  NotificationSettingsComponent customerNotificationKeys


    it  returns also the talent keys if talent
      component isTalent   true
      expect component notificationKeys    toEqual
         group   user   keys  NotificationSettingsComponent userNotificationKeys
         group   talent   keys  NotificationSettingsComponent talentNotificationKeys


    it  returns all keys if both
      component isCustomer   true
      component isTalent   true
      expect component notificationKeys    toEqual

           group   user   keys  NotificationSettingsComponent userNotificationKeys
           group   customer   keys  NotificationSettingsComponent customerNotificationKeys
           group   talent   keys  NotificationSettingsComponent talentNotificationKeys




  describe  isConfigurableForSMS
    beforeEach
      component user    any


    describe  is of notification group  talent
      beforeEach
        component isTalent   true


      it  returns true if is a talent but has no customer phone number
        expect component isConfigurableForSMS  talent    toBe true


      it  returns true if is a talent but has a customer phone number
        component user phoneNumber     41 79
        expect component isConfigurableForSMS  talent    toBe true



    describe  is of notification key group  user
      describe  it returns true if
        it  is is a talent and therefore must have a phone number
          component isTalent   true
          expect component isConfigurableForSMS  user    toBe true


        it  is has a phone number but is no talent
          component user phoneNumber     41 79
          expect component isConfigurableForSMS  user    toBe true



      describe  it returns false if
        it  has no talent account and no phone number from the customer
          component isTalent   false
          expect component isConfigurableForSMS  user    toBe false




    describe  is of notification key group  customer
      describe  it returns true if
        beforeEach
          component user phoneNumber     41 79


        it  is talent and has a phone number
          component isTalent   true
          expect component isConfigurableForSMS  customer    toBe true


        it  has a phone number
          component user phoneNumber     41 79
          expect component isConfigurableForSMS  customer    toBe true



      describe  returns false if
        it  has no phone number
          component user phoneNumber
          expect component isConfigurableForSMS  customer    toBe false


        it  is talent and has no phone number
          component isTalent   true
          expect component isConfigurableForSMS  customer    toBe false





  describe  isCustomerWithoutPhoneNumber
    it  returns true if is a customer with no phone number
      component user    any
      component isCustomer   true
      expect component isCustomerWithoutPhoneNumber    toBe true


    it  returns false if is a customer with a phone number
      component isCustomer   true
      component user    any   phoneNumber   0041
      expect component isCustomerWithoutPhoneNumber    toBe false


    it  returns false if is a customer with a phone number
      component isCustomer   false
      component user    any
      expect component isCustomerWithoutPhoneNumber    toBe false



  describe  changeDailySummaryNotification
    beforeEach
      component newSettings    any   customNotifications   dailySummary   interval


    it  sets the daily summary period to daily
      component newSettings customNotifications dailySummary interval    never
      component changeDailySummaryNotification  daily


    it  sets the daily summary period to never
      component newSettings customNotifications dailySummary interval    daily
      component changeDailySummaryNotification  never



  describe  toggle setting
    beforeEach
      component newSettings   cloneDeep notificationSettingsDataMockJSON


    it  toggles the email field of the specified key
      expect component newSettings eventNotifications newOffer email  toEqual true
      component toggleEmailSetting false   newOffer
      expect component newSettings eventNotifications newOffer email  toEqual false


    it  toggles the sms field of the specified key
      expect component newSettings eventNotifications newOffer sms  toEqual false
      component toggleSMSSetting true   newOffer
      expect component newSettings eventNotifications newOffer sms  toEqual true


    it  toggles the push field of the specified key
      expect component newSettings eventNotifications newOffer push  toEqual true
      component togglePushSetting false   newOffer
      expect component newSettings eventNotifications newOffer push  toEqual false



  describe  showWarning
    beforeEach
      component currentSettings   cloneDeep notificationSettingsDataMockJSON
      component newSettings   cloneDeep notificationSettingsDataMockJSON


    it  returns true if keys changed to false
      component newSettings eventNotifications newOffer email   false
      expect component showWarning    toBe true


    it  returns false if keys have not changed
      expect component showWarning    toBe false


    it  returns false if keys changed to true
      component newSettings eventNotifications newInvitation email   true
      expect component showWarning    toBe false



import   Component  Input  OnInit   from   angular core
import   cloneDeep   from  lodash
import   AlertService   from        alerts alerts service
import
  DailySummarySendingInterval
  NotificationSettings  SendTypes
  from        api endpoints notification settings api interface
import   I18n   from        i18n i18n
import   Talent   from        models talent model
import   User   from        models user model
import   NotificationSettingsService   from        services notification settings service
import   UserSessionService   from        services user session service
import   Option   from        shared dropdown option model
import   NotificationSettingsGroup  NotificationSettingsProperty   from    notification settings types

 Component
  selector   my notification settings
  templateUrl   notification settings component html
  styleUrls    notification settings component scss

export class NotificationSettingsComponent implements OnInit
  static talentNotificationKeys     newInvitation    customerDeclinedOffer    newContract    billPaid    billReminder
  static customerNotificationKeys     newOffer    newBill
  static userNotificationKeys     newMessage    workStartReminder

   Input   isCustomer   false
   Input   isTalent   false
  i18n   I18n
  formSent   false
  currentSettings  NotificationSettings
  newSettings  NotificationSettings
  user  User
  talent  Talent
  dailySummaryOptions  Option
    new Option this i18n t notificationSettings dailySummary daily   daily
    new Option this i18n t notificationSettings dailySummary never   never


  constructor private notificationSettingsService  NotificationSettingsService  private userSessionService  UserSessionService
              private alertService  AlertService

  ngOnInit
    this userSessionService currentUser   first   zip this userSessionService currentTalent   first    subscribe values
      this user   values 0
      this talent   values 1
      this notificationSettingsService getSettings this user id  subscribe settings
        this currentSettings   settings
        this newSettings   cloneDeep settings




  submit
    this formSent   true
    this notificationSettingsService updateSettings this newSettings  this user id
       subscribe       this onSuccess          this onError


  notificationKeys    NotificationSettingsProperty
    const keys
      group   NotificationSettingsGroup   user
      keys  NotificationSettingsComponent userNotificationKeys

    this addCustomerNotificationKeys keys
    this addTalentNotificationKeys keys
    return keys


  private addCustomerNotificationKeys keys  NotificationSettingsProperty
    if  this isCustomer
      keys push
        group   customer
        keys  NotificationSettingsComponent customerNotificationKeys




  private addTalentNotificationKeys keys  NotificationSettingsProperty
    if  this isTalent
      keys push
        group   talent
        keys  NotificationSettingsComponent talentNotificationKeys




  isConfigurableForSMS group  NotificationSettingsGroup   boolean
    if  group      customer     return   this user phoneNumber
    return this hasAnyMobilePhoneNumber


  private hasAnyMobilePhoneNumber    boolean
    return   this user phoneNumber    this isTalent


  isCustomerWithoutPhoneNumber    boolean
    return this isCustomer     this user phoneNumber


  toggleEmailSetting value  boolean  key  string
    this toggleSetting  email   value  key


  togglePushSetting value  boolean  key  string
    this toggleSetting  push   value  key


  toggleSMSSetting value  boolean  key  string
    this toggleSetting  sms   value  key


  private toggleSetting type   email     sms     push   value  boolean  key  string
    this newSettings eventNotifications key  type    value


  changeDailySummaryNotification dailySummaryInterval  DailySummarySendingInterval
    this newSettings customNotifications dailySummary interval   dailySummaryInterval


  showWarning    boolean
    if   this newSettings    return false
    return Object keys this newSettings eventNotifications  some key    this hasNewUnchecked key


  private hasNewUnchecked key  string   boolean
    const notificationSetting   this newSettings eventNotifications key
    return this hasNewlyUncheckedByType notificationSetting  key   email


  private hasNewlyUncheckedByType notificationSetting  SendTypes  key  string  type   email
    return notificationSetting type      false
       this currentSettings eventNotifications key  type      notificationSetting type


  private onSuccess
    this formSent   false
    this currentSettings   cloneDeep this newSettings
    this alertService success this i18n t notificationSettings updateSuccess


  private onError
    this formSent   false
    this alertService danger this i18n t notificationSettings updateError


export type NotificationSettingsGroup    user     customer     talent

export interface NotificationSettingsProperty
  group  NotificationSettingsGroup
  keys  string

import   Observable   from  rxjs Observable
import   Category   from        categories shared category model
import   WorkSuggestionsSettingsComponent   from    work suggestions settings component

describe  WorkSuggestionsSettingsComponent
  let component  WorkSuggestionsSettingsComponent
  let categoryService  any
  const categories  any    new Category    new Category

  beforeEach
    categoryService   jasmine createSpyObj  categoryService     all
    categoryService all and returnValue Observable of categories
    component   new WorkSuggestionsSettingsComponent categoryService
    component workSuggestionsSettings    subcategories      interval   never   email  true  sms  false  push  true


  describe  ngOnInit
    beforeEach
      expect component categories  toEqual
      component ngOnInit


    it  calls the category service
      expect categoryService all  toHaveBeenCalled


    it  assigns the categories to the component
      expect component categories  toEqual categories



  describe  toggleSubcategory
    describe  if element is not included and subcategory is toggled
      beforeEach
        expect component workSuggestionsSettings subcategories  toEqual


      it  adds subcategory to the selected subcategories
        component toggleSubcategory 1
        expect component workSuggestionsSettings subcategories  toEqual  1
        component toggleSubcategory 2
        expect component workSuggestionsSettings subcategories  toEqual  1  2


      it  emits all selected subcategories with the toggled
        spyOn component workSuggestionsSettingsChange   emit
        component toggleSubcategory 1
        expect component workSuggestionsSettingsChange emit  toHaveBeenCalledWith component workSuggestionsSettings



    describe  if it is already selected and subcategory is toggled again
      beforeEach
        component workSuggestionsSettings subcategories    1  2  3  5  7


      it  removes the subcategory
        component toggleSubcategory 5
        expect component workSuggestionsSettings subcategories  toEqual  1  2  3  7


      it  emits the rest of selected subcategories
        spyOn component workSuggestionsSettingsChange   emit
        component toggleSubcategory 2
        expect component workSuggestionsSettingsChange emit  toHaveBeenCalledWith component workSuggestionsSettings




  describe  isSubcategorySelected
    beforeEach
      component workSuggestionsSettings subcategories    1  2  3


    it  returns false if a given subcategory id is not selected
      expect component isSubcategorySelected 0   toBe false
      expect component isSubcategorySelected 4   toBe false


    it  returns true if a given subcategory id is selected
      expect component isSubcategorySelected 1   toBe true
      expect component isSubcategorySelected 3   toBe true



  describe  changeInterval
    it  sets the work suggestion period interval daily
      component changeInterval  daily
      expect component workSuggestionsSettings interval  toEqual  daily


    it  sets the work suggestion period interval immediate
      component changeInterval  immediate
      expect component workSuggestionsSettings interval  toEqual  immediate


    it  sets the work suggestion period interval never
      component changeInterval  never
      expect component workSuggestionsSettings interval  toEqual  never



  describe  toggle email  sms and push setting
    it  toggles the email field of the specified key
      expect component workSuggestionsSettings email  toEqual true
      component toggleEmailSetting false
      expect component workSuggestionsSettings email  toEqual false


    it  toggles the sms field of the specified key
      expect component workSuggestionsSettings sms  toEqual false
      component toggleSMSSetting true
      expect component workSuggestionsSettings sms  toEqual true


    it  toggles the push field of the specified key
      expect component workSuggestionsSettings push  toEqual true
      component togglePushSetting false
      expect component workSuggestionsSettings push  toEqual false



import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   WorkSuggestions  WorkSuggestionsSendingInterval   from        api endpoints notification settings api interface
import   Category   from        categories shared category model
import   CategoryService   from        categories shared category service
import   I18n   from        i18n i18n
import   Option   from     dropdown option model

 Component
  selector   my work suggestions settings
  templateUrl   work suggestions settings component html
  styleUrls    work suggestions settings component scss

export class WorkSuggestionsSettingsComponent implements OnInit
  i18n   I18n
  categories  Category
   Input   workSuggestionsSettings  WorkSuggestions
   Input   hasApp  boolean
   Output   workSuggestionsSettingsChange   new EventEmitter WorkSuggestions
  workSuggestionsOptions  Option
    new Option this i18n t notificationSettings workSuggestions interval immediate   immediate
    new Option this i18n t notificationSettings workSuggestions interval daily   daily
    new Option this i18n t notificationSettings workSuggestions interval never   never


  constructor private categoryService  CategoryService

  ngOnInit
    this categoryService all   subscribe categories    this categories   categories


  toggleSubcategory subcategoryId  number
    if  this isSubcategorySelected subcategoryId
      this deleteSelectedSubcategoryById subcategoryId
      else
      this workSuggestionsSettings subcategories push subcategoryId

    this workSuggestionsSettingsChange emit this workSuggestionsSettings


  changeInterval workSuggestionsInterval  WorkSuggestionsSendingInterval
    this workSuggestionsSettings interval   workSuggestionsInterval


  toggleEmailSetting value  boolean
    this workSuggestionsSettings email   value


  toggleSMSSetting value  boolean
    this workSuggestionsSettings sms   value


  togglePushSetting value  boolean
    this workSuggestionsSettings push   value


  private deleteSelectedSubcategoryById subcategoryId  number
    this workSuggestionsSettings subcategories splice this workSuggestionsSettings subcategories indexOf subcategoryId   1


  isSubcategorySelected subcategoryId  number   boolean
    return this workSuggestionsSettings subcategories includes subcategoryId


import   OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router

export abstract class PaginatedArchiveBase implements OnInit
  totalCount  number
  page   1
  size   25

  constructor protected route  ActivatedRoute  protected router  Router

  ngOnInit
    window scrollTo 0  0
    this route queryParams subscribe params    this queryParamsChanged params


  private queryParamsChanged params  Params
    this page   parseInt  params  page      1   10
    this getWorks


  pageChanged    void
    window scrollTo 0  0


  updateQueryParams
    this router navigate
      queryParams   page  this page     1   null   this page
      relativeTo  this route



  abstract getWorks    void

import  rxjs add observable of
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   TabItem   from     models tab item model
import   ProfileSettingsComponent   from    profile settings component

describe  ProfileSettingsComponent
  const route    any   params  Observable of  tab   account     danger
  let userSessionService  any
  let router  any
  let component  ProfileSettingsComponent

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     isCustomer    isTalent
    router   jasmine createSpyObj  router     navigate
    component   new ProfileSettingsComponent route  router  userSessionService


  describe  ngOnInit
    const accountTabItem   new TabItem I18n t profileSubnavbar account   account
    const talentTabItem   new TabItem I18n t profileSubnavbar talent   talent
    const paymentTabItem   new TabItem I18n t profileSubnavbar payment   payment
    const customerTabItem   new TabItem I18n t profileSubnavbar user   user
    const notificationsTabItem   new TabItem I18n t profileSubnavbar notifications   notifications

    it  is only customer
      userSessionService isCustomer and returnValue Observable of true
      userSessionService isTalent and returnValue Observable of false
      component ngOnInit
      expect component tabItems  toEqual  accountTabItem  notificationsTabItem  paymentTabItem  customerTabItem


    it  is only talent
      userSessionService isCustomer and returnValue Observable of false
      userSessionService isTalent and returnValue Observable of true
      component ngOnInit
      expect component tabItems  toEqual  accountTabItem  notificationsTabItem  talentTabItem  paymentTabItem


    it  is nothing
      userSessionService isCustomer and returnValue Observable of false
      userSessionService isTalent and returnValue Observable of false
      component ngOnInit
      expect component tabItems  toEqual  accountTabItem  notificationsTabItem


    it  is both
      userSessionService isCustomer and returnValue Observable of true
      userSessionService isTalent and returnValue Observable of true
      component ngOnInit
      expect component tabItems  toEqual  accountTabItem  notificationsTabItem  talentTabItem  paymentTabItem  customerTabItem



import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   UserSessionService   from        services user session service
import   TabItem   from     models tab item model

 Component
  templateUrl   profile settings component html

export class ProfileSettingsComponent implements OnInit  OnDestroy
  i18n   I18n
  tab   account     notifications     talent     user     payment
  paramsSub  Subscription
  tabItems  TabItem
  isCustomer   false
  isTalent   false
  private langSub  Subscription

  constructor private route  ActivatedRoute  private router  Router  public userSessionService  UserSessionService

  ngOnInit
    this subscribeToRoles


  private subscribeToRoles
    this userSessionService isTalent   first   zip this userSessionService isCustomer   first
       subscribe values
        this isCustomer   values 1
        this isTalent   values 0
        this langSub   this i18n getLang   subscribe       this buildTabItems
        this paramsSub   this route params subscribe params    this paramsChanged params



     tslint disable next line cyclomatic complexity
  private buildTabItems
    this tabItems
      new TabItem this i18n t profileSubnavbar account   account
      new TabItem this i18n t profileSubnavbar notifications   notifications

    if  this isTalent    this tabItems push new TabItem this i18n t profileSubnavbar talent   talent
    if  this isTalent    this isCustomer    this tabItems push new TabItem this i18n t profileSubnavbar payment   payment
    if  this isCustomer    this tabItems push new TabItem this i18n t profileSubnavbar user   user


  private paramsChanged params  Params
    this tab   params  tab
    if   this tabItems some tabItem    tabItem link     this tab
      this router navigate   404



  ngOnDestroy
    this langSub unsubscribe
    this paramsSub unsubscribe


import   PossibleTime   from     models possible time model
import   RadioButtonComponent   from    radio button component

describe  RadioButtonComponent
  let component  RadioButtonComponent

  beforeEach
    component   new RadioButtonComponent
    component value    123


  describe  ngOnInit
    it  sets the label to the value if the label is undefined
      component ngOnInit
      expect component label  toEqual  123


    it  doesnt sets the label if its defined
      component label    test
      expect component label  toEqual  test



  describe  isChecked
    it  returns true if the model equals the value
      component model    123
      expect component isChecked    toBe true


    it  returns false if the model is not equal the value
      component model    1234
      expect component isChecked    toBe false


    it  compares also objects
      const date   new Date
      component model   new PossibleTime date
      component value   new PossibleTime date
      expect component isChecked    toBe true



  describe  setValue
    it  returns true if the model equals the value
      component model    123
      expect component isChecked    toBe true


    it  sets the model to the value and emits it
      component model    1234
      spyOn component modelChange   emit
      component setValue
      expect component model  toEqual  123
      expect component modelChange emit  toHaveBeenCalledWith  123



import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   isEqual   from  lodash

 Component
  selector   my radio button
  templateUrl   radio button component html

export class RadioButtonComponent implements OnInit
   Input   model  any
   Input   value  any
   Input   label  string
   Output   modelChange  EventEmitter any    new EventEmitter any

  ngOnInit
    if  this label     undefined
      this label   this value



  isChecked    boolean
    return isEqual this value  this model


  setValue
    this model   this value
    this modelChange emit this value


import   Component   from   angular core
import   RatingDisplayComponent   from    rating display component

 Component
  selector   my compact rating display
  templateUrl   compact rating display component html
  styleUrls    compact rating display component scss

export class CompactRatingDisplayComponent extends RatingDisplayComponent

import   Component  Input   from   angular core
import   I18n   from        i18n i18n

 Component
  selector   my rating display
  templateUrl   rating display component html
  styleUrls    rating display component scss

export class RatingDisplayComponent
   Input   average  number
   Input   quantity  number
  i18n   I18n

  isNewMember    boolean
    return this quantity     0


  roundedAverage
    return Math round this average


import   Component  Input   from   angular core

 Component
  selector   my star display
  templateUrl   star display component html
  styleUrls    shared rating styles scss    star display component scss

export class StarDisplayComponent
   Input   averageRating  number
   Input   gray  boolean   false
  readonly range    1  2  3  4  5

import   Component  EventEmitter  Output   from   angular core

 Component
  selector   my star rating
  templateUrl   star rating component html
  styleUrls    shared rating styles scss    star display component scss

export class StarRatingComponent
   Output   change  EventEmitter number    new EventEmitter number
  readonly range    1  2  3  4  5
  rate  number   0

  update value  number
    this rate   value
    this change emit value


import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  selector   my work rating
  templateUrl   work rating component html
  styleUrls    work rating component scss

export class WorkRatingComponent
  i18n   I18n
  rate  number
  comment  string

  update value  number
    this rate   value


  isValid
    return this rate


import   Component   from   angular core
import   I18n   from        i18n i18n
import   UserSessionService   from        services user session service

 Component
  templateUrl   receipt list component html

export class ReceiptListComponent
  i18n   I18n

  constructor public userSessionService  UserSessionService

import   I18n   from        i18n i18n
import   Receipt   from     models work states receipt

export abstract class ReceiptBaseComponent
  abstract receipt  Receipt
  i18n   I18n

  customerAddressParts
    const customer   this receipt customer
    const address   customer address
    const fullName      customer firstName    customer lastName
    return  fullName  address street  address zipCity    address country  filter x    x


  hasTalentVAT    boolean
    return this receipt bill cost totals talentVat vatRate   0


  talentAddressParts
    const talent   this receipt talent
    const address   talent address    talent user address
    const fullName      talent user firstName    talent user lastName
    return  talent companyName  fullName  address street  address zipCity    address country  filter x    x


import   Component  Input   from   angular core
import   Receipt   from     models work states receipt
import   ReceiptBaseComponent   from    receipt base component

 Component
  selector   my receipt customer
  templateUrl   receipt customer component html
  styleUrls    receipt shared styles scss

export class ReceiptCustomerComponent extends ReceiptBaseComponent
   Input   receipt  Receipt

import   I18n   from        i18n i18n
import   SubmitButtonComponent   from    submit button component

describe  SubmitButtonComponent
  let component  SubmitButtonComponent

  beforeEach
    component   new SubmitButtonComponent


  describe  label
    it  has a setter
      component label    foo
      expect component label  toEqual  foo


    it  has a default value
      expect component label  toEqual I18n t submitButton label



  describe  buttonClasses
    it  has a setter
      component buttonClasses    foo bar
      expect component buttonClasses  toEqual  foo bar



  describe  isValid
    it  has a property isValid
      component isValid   true
      expect component isValid  toBe true
      component isValid   false
      expect component isValid  toBe false



  describe  isSubmitted
    it  is false by default
      expect component isSubmitted  toBe false


    it  has a setter
      component isSubmitted   true
      expect component isSubmitted  toBe true



  describe  isDisabled
    describe  when isValid   false
      beforeEach         component isValid   false

      describe  when isSubmitted   false
        beforeEach         component isSubmitted   false

        it  is true
          expect component isDisabled    toBe true



      describe  when isSubmitted   true
        beforeEach         component isSubmitted   true

        it  is true
          expect component isDisabled    toBe true




    describe  when isValid   true
      beforeEach         component isValid   true

      describe  when isSubmitted   false
        beforeEach         component isSubmitted   false

        it  is false
          expect component isDisabled    toBe false



      describe  when isSubmitted   true
        beforeEach         component isSubmitted   true

        it  is true
          expect component isDisabled    toBe true





  describe  isErrorHidden
    describe  when isValid   false
      beforeEach         component isValid   false

      it  is false
        expect component isErrorHidden    toBe false



    describe  when isValid   true
      beforeEach         component isValid   true

      it  is true
        expect component isErrorHidden    toBe true




import   Component  Input   from   angular core
import   I18n   from        i18n i18n

 Component
  selector   my submit button
  templateUrl   submit button component html

export class SubmitButtonComponent
   Input   label   I18n t submitButton label
   Input   isValid  boolean
   Input   isSubmitted   false
   Input   buttonClasses  string

  isDisabled    boolean
    return this isSubmitted     this isValid


  isErrorHidden    boolean
    return this isValid


import   Component  OnInit   from   angular core
import   AppSettings   from        app settings
import   I18n   from        i18n i18n

 Component
  selector   my support box
  styleUrls    support box component scss
  templateUrl   support box component html

export class SupportBoxComponent implements OnInit
  i18n   I18n
  open   true
  showBox   false

  ngOnInit
    setTimeout
      this showBox   true
       AppSettings SUPPORT BOX OPEN TIME



import   TabSubnavbarComponent   from    tab subnavbar component

describe  TabSubnavbarComponent
  let component  TabSubnavbarComponent
  let element  any
  let elementRef  any
  let renderer  any
  let nativeElement  any

  beforeEach
    element   jasmine createSpyObj  element     scrollIntoView
    nativeElement   jasmine createSpyObj  nativeElement     querySelector    querySelectorAll
    elementRef    nativeElement
    renderer   jasmine createSpyObj  renderer     setStyle    addClass    removeClass
    component   new TabSubnavbarComponent renderer  elementRef


  describe  ngAfterViewChecked
    describe  because ngAfterViewChecked is called multiple times but element is not there from beginning
      beforeEach
        nativeElement querySelector and returnValues null  null  null  element  element  element
        spyOn component   setSubnavWidth
        component ngAfterViewChecked
        component ngAfterViewChecked
        component ngAfterViewChecked
        component ngAfterViewChecked
        component ngAfterViewChecked


      it  will only call the query selector  as long as element is not there
        expect nativeElement querySelector  toHaveBeenCalledTimes 4
        expect nativeElement querySelector  toHaveBeenCalledWith   sub navbar  item  active


      it  will only call scrollIntoView once
        expect element scrollIntoView  toHaveBeenCalledTimes 1


      it  will only call setSubnavWidth once
        expect component setSubnavWidth  toHaveBeenCalledTimes 1



    describe  if scrollIntoView has not been called
      it  selects the active item
        component ngAfterViewChecked
        expect nativeElement querySelector  toHaveBeenCalledWith   sub navbar  item  active


      it  does nothing if element doesnt exist
        nativeElement querySelector and returnValue null
        component ngAfterViewChecked
        expect element scrollIntoView  not toHaveBeenCalled


      it  jumps to the active element if this is given
        component ngAfterViewChecked
        expect element scrollIntoView  not toHaveBeenCalled




  describe  ngAfterContentChecked
    it  resets the size if component changed  language changed
      spyOn component   setSubnavWidth
      component ngAfterContentChecked
      expect component setSubnavWidth  toHaveBeenCalled



  describe  setSubnavWidth
    const subnav    subnav   element
    beforeEach
      nativeElement querySelector and returnValues subnav
      nativeElement querySelectorAll and returnValues   offsetWidth  5 1    offsetWidth  10 5
      component setSubnavWidth


    it  gets the subnav
      expect nativeElement querySelector  toHaveBeenCalledWith   navbar nav


    it  gets all tab elements
      expect nativeElement querySelectorAll  toHaveBeenCalledWith   navbar nav li


    it  calls the renderer with the sum of all offset widths plus an extra of 10px
      expect renderer setStyle  toHaveBeenCalledWith subnav   width    27px



import   AfterContentChecked  AfterViewChecked  Component  ElementRef  Input  Renderer2   from   angular core
import   TabItem   from     models tab item model

 Component
  selector   my tab subnavbar
  templateUrl   tab subnavbar component html
  styleUrls    tab subnavbar component scss

export class TabSubnavbarComponent implements AfterViewChecked  AfterContentChecked
   Input   tabItems  TabItem
  private isTabSelected   false

  constructor private renderer  Renderer2  private element  ElementRef

  ngAfterViewChecked
    this scrollToSubnavItem


  ngAfterContentChecked
    this setSubnavWidth


  private scrollToSubnavItem
    if  this isTabSelected    return
    const element  HTMLElement   this element nativeElement querySelector   sub navbar  item  active
    if  element
      this isTabSelected   true
      this setSubnavWidth       before it s not loaded
      element scrollIntoView element



  setSubnavWidth
    const subnav  HTMLElement   this element nativeElement querySelector   navbar nav
    this renderer setStyle subnav   width      this getSubnavWidth   px


  private getSubnavWidth    number
    return this getExactSubnavWidth     10


  private getExactSubnavWidth    number
    const tabElements  HTMLElement     Array from HTMLElement  this element nativeElement querySelectorAll   navbar nav li
    return tabElements reduce  sum  number  element  HTMLElement     sum   Math ceil element offsetWidth   0


import   Component  Input   from   angular core
import   I18n   from        i18n i18n
import   Cost   from     models cost cost model

 Component
  selector   my talent cost listing
  templateUrl   talent cost listing component html

export class TalentCostListingComponent
   Input   cost  Cost
  currency   chf     eur
  i18n   I18n

import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   Cost   from        models cost cost model

 Component
  selector   my work cost listing
  templateUrl   work cost listing component html

export class WorkCostListingComponent
   Input   cost  Cost
  currency   chf     eur
  i18n   I18n

  isFixedPrice
    return   this cost work fixedRate


import   CommonModule   from   angular common
import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   RouterModule   from   angular router
import   NgxErrorsModule   from   ultimate ngxerrors
import   CollapseModule   from  ng2 bootstrap collapse
import   ModalModule   from  ng2 bootstrap modal
import   PaginationModule   from  ng2 bootstrap pagination
import   AddressSelectorModule   from     address selector address selector module
import   ApiModule   from     api api module
import   ChatModule   from     chat chat module
import   PaymentModule   from     payment payment module
import   PublicBrowseModule   from     public browse public browse module
import   BillService   from     services bill service
import   ContractService   from     services contract service
import   NotificationSettingsService   from     services notification settings service
import   OfferService   from     services offer service
import   ReceiptDetailResolver   from     services receipt detail resolver service
import   ReceiptService   from     services receipt service
import   UserService   from     services user service
import   AboutLawoonComponent   from     static pages about lawoon about lawoon component
import   FaqComponent   from     static pages faq faq component
import   TermsComponent   from     static pages terms terms component
import   TalentProfileBankAccountEditComponent   from     talent profile bank account edit talent profile bank account edit component
import   TalentProfileEditComponent   from     talent profile edit talent profile edit component
import   TalentProfileMiscEditComponent   from     talent profile shared misc talent profile misc edit component
import
  TalentProfilePersonalInformationEditComponent
  from     talent profile shared personal information talent profile personal information edit component
import
  TalentProfileQualificationsEditComponent
  from     talent profile shared qualifications talent profile qualifications edit component
import   PhoneNumberFormatterService   from     utils phone number formatter service
import   ContractAddressDetailsComponent   from    contract address details contract address details component
import   CustomFormElementModule   from    custom form element module
import   CustomerCostListingComponent   from    customer cost listing customer cost listing component
import   CustomerWorkCostListingComponent   from    customer cost listing customer work cost listing customer work cost listing component
import   LawoonCostListingComponent   from    lawoon cost listing lawoon cost listing component
import   NotificationSettingsComponent   from    notification settings notification settings component
import   WorkSuggestionsSettingsComponent   from    notification settings work suggestions settings component
import   StarRatingComponent   from    rating star rating component
import   WorkRatingComponent   from    rating work rating component
import   ReceiptCustomerComponent   from    receipt receipt customer component
import   UserProfileEditComponent   from    user profile edit user profile edit component
import   UserProfileFormComponent   from    user profile form user profile form component

const SHARED DECLARATIONS
  AboutLawoonComponent
  ContractAddressDetailsComponent
  CustomerCostListingComponent
  CustomerWorkCostListingComponent
  FaqComponent
  LawoonCostListingComponent

  NotificationSettingsComponent
  TalentProfileBankAccountEditComponent
  TalentProfileEditComponent
  TalentProfileMiscEditComponent
  TalentProfilePersonalInformationEditComponent
  TalentProfileQualificationsEditComponent
  WorkSuggestionsSettingsComponent

  ReceiptCustomerComponent
  StarRatingComponent
  TermsComponent
  UserProfileEditComponent
  UserProfileFormComponent
  WorkRatingComponent


 NgModule
  imports
    AddressSelectorModule
    ChatModule
    CollapseModule forRoot
    CommonModule
    FormsModule
    ReactiveFormsModule
    CustomFormElementModule
    PublicBrowseModule
    PaginationModule forRoot
    ApiModule
    RouterModule forChild
    PaymentModule
    NgxErrorsModule
    ModalModule forRoot

  declarations
       SHARED DECLARATIONS

  exports
       SHARED DECLARATIONS

  providers
    BillService
    ContractService
    NotificationSettingsService
    OfferService
    PhoneNumberFormatterService
    ReceiptDetailResolver
    ReceiptService
    UserService


export class TalentCustomerSharedModule

import   Observable   from  rxjs Observable
import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model
import   TalentFilterComponent   from    talent filter component
import   TalentFilter   from    talent filter model

describe  TalentFilterComponent
  let component  TalentFilterComponent

  beforeEach
    component   new TalentFilterComponent
    component talentFilter   new TalentFilter
    spyOn component onFilterChanged   emit


  describe  ngOnInit
    beforeEach
      component searchFieldRef    nativeElement
      spyOn Observable   fromEvent   and callFake       Observable of


    it  sets the qualification options
      component ngOnInit
      expect component qualificationOptions length  toBe 3


    it  inits the typeAhead
      component ngOnInit
      expect Observable fromEvent  toHaveBeenCalledWith component searchFieldRef nativeElement   keyup



  describe  selectQualification
    it  sets the qualification after changing the select field
      const qualification   new TalentQualification  isProfessional  false
      expect component talentFilter professional  toEqual undefined
      component selectQualification qualification
      expect component talentFilter professional  toEqual qualification



  describe  placeChanged
    it  sets the placeChanged after changing the field
      const geolocation   new Geolocation
      expect component talentFilter geolocation  toEqual undefined
      component placeChanged geolocation
      expect component talentFilter geolocation  toEqual geolocation
      component placeChanged undefined
      expect component talentFilter geolocation  toEqual undefined



import   Component  ElementRef  EventEmitter  Input  OnDestroy  OnInit  Output  ViewChild   from   angular core
import  rxjs add operator debounceTime
import   Observable   from  rxjs Observable
import   Subscription   from  rxjs Subscription
import   I18n   from        i18n i18n
import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model
import   Option   from     dropdown option model
import   TalentFilter   from    talent filter model

 Component
  selector   my talent filter
  templateUrl   talent filter component html
  styleUrls    talent filter component scss

export class TalentFilterComponent implements OnInit  OnDestroy
   Input   talentFilter  TalentFilter
   Output   onFilterChanged  EventEmitter TalentFilter    new EventEmitter TalentFilter
   ViewChild  search   searchFieldRef  ElementRef
  i18n   I18n
  qualificationOptions  Option
  private subscription  Subscription

  ngOnInit
    this buildQualificationOptions
    this initTypeAhead


  private buildQualificationOptions
    this qualificationOptions
      new Option this i18n t talentFilter allQualifications  null
      new Option this i18n t talentFilter professional      u00B9   new TalentQualification  isProfessional  true
      new Option this i18n t talentFilter nonprofessional  new TalentQualification  isProfessional  false



  placeChanged geolocation  Geolocation   undefined
    this talentFilter geolocation   geolocation
    this emitFilterChange


  private initTypeAhead
    this subscription   Observable fromEvent KeyboardEvent  this searchFieldRef nativeElement   keyup
       debounceTime 500
       subscribe       this emitFilterChange



  selectQualification professional  TalentQualification
    this talentFilter professional   professional
    this emitFilterChange


  private emitFilterChange    void
    this onFilterChanged emit this talentFilter


  ngOnDestroy
    this subscription unsubscribe


import   URLSearchParams   from   angular http
import   as   from  lodash
import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model
import   ITalentFilterOptions  TalentFilter   from    talent filter model

describe  TalentFilter
  function createModel additionalParams  ITalentFilterOptions   TalentFilter
    const defaultParams
      geolocation  new Geolocation  latitude  12 2938212  longitude  7 18293827
      professional  new TalentQualification  isProfessional  false
      searchQuery   John Doe

    return new TalentFilter   merge defaultParams  additionalParams


  describe  serialize
    it  can be serialized with searchText
      const params   new URLSearchParams
      createModel  searchQuery   John doe    serialize params
      expect params get  filter search text     toEqual  John doe


    it  can be serialized with professional
      const params   new URLSearchParams
      createModel  professional  new TalentQualification  isProfessional  false     serialize params
      expect params get  filter professional     toEqual  false


    it  can be serialized with pagination
      const params   new URLSearchParams
      createModel  page  3  size  7   serialize params
      expect params get  page number     toBe  3
      expect params get  page size     toBe  7


    it  can be serialized with geodata
      const params   new URLSearchParams
      createModel  geolocation  new Geolocation  latitude  23 23354244  longitude  7 238327373     serialize params
      expect params get  lat    toBe  23 23354244
      expect params get  lng    toBe  7 238327373



import   URLSearchParams   from   angular http
import   extend   from  lodash
import   Geolocation   from        models geolocation model
import   TalentQualification   from        models talent qualification model

export interface ITalentFilterOptions
  searchQuery   string
  rating   number
  geolocation   Geolocation
  professional   TalentQualification
  page   number
  size   number


export class TalentFilter
  searchQuery  string
  rating  number
  geolocation  Geolocation
  professional  TalentQualification
  page  number   1
  size  number   25

  constructor options   ITalentFilterOptions
    if  options
      extend this  options



  serialize params  URLSearchParams
    this serializeLocation params
    this serializeProfessional params
    this serializeSearchText params
    this serializePagination params


  private serializeLocation params  URLSearchParams
    if  this geolocation
      params set  lat   this geolocation latitude toString
      params set  lng   this geolocation longitude toString



  private serializeProfessional params  URLSearchParams
    if  this professional
      params set  filter professional    this professional isProfessional toString



  private serializeSearchText params  URLSearchParams
    if  this searchQuery
      params set  filter search text    this searchQuery



  private serializePagination params  URLSearchParams
    params set  page number    this page toString
    params set  page size    this size toString


import   Component  Input   from   angular core
import   Talent   from        models talent model

 Component
  selector   my talent info box
  templateUrl   talent info box component html
  styleUrls          customer shared compact talent list scss    talent info box component scss

export class TalentInfoBoxComponent
   Input   talent  Talent

import   ElementRef   from   angular core
import   TimeInputComponent   from    time input component

describe  TimeInputComponent
  let minuteInputRef  ElementRef
  let component  TimeInputComponent

  function setHours hour  number  minute  number
    component hours   hour
    component minutes   minute


  beforeEach
    minuteInputRef    nativeElement  jasmine createSpyObj  nativeElement     focus
    component   new TimeInputComponent
    component minuteInputRef   minuteInputRef


  describe  isValid
    describe  hours get validated
      it  returns false if hour not set
        component minutes   0
        expect component isValid    toBe false


      it  returns false if hour is less than zero
        setHours  1  0
        expect component isValid    toBe false


      it  returns false if hour is greater than 23
        setHours 24  0
        expect component isValid    toBe false


      it  returns true if hour is between 0 23
        setHours 23  0
        expect component isValid    toBe true
        setHours 2  0
        expect component isValid    toBe true


      it  returns false if hour is NaN  that means empty
        setHours NaN  0
        expect component isValid    toBe false



    describe  minutes get validated
      it  returns false if minutes not set
        component hours   0
        expect component isValid    toBe false


      it  returns false if minute is less than zero
        setHours 0   1
        expect component isValid    toBe false


      it  returns false if minute is greater than 59
        setHours 0  60
        expect component isValid    toBe false


      it  returns true if minute is between 0 59
        setHours 0  59
        expect component isValid    toBe true
        setHours 0  1
        expect component isValid    toBe true


      it  returns false if minute is NaN  that means empty
        setHours 0  NaN
        expect component isValid    toBe false




  describe  setHours
    it  it switches focus to the element ref if hourse length equals 2
      component setHours  20
      expect minuteInputRef nativeElement focus  toHaveBeenCalled



  describe  reset
    it  sets hours and minutes to undefined
      component hours   4
      component minutes   55
      component reset
      expect component hours  toBeUndefined
      expect component minutes  toBeUndefined



  describe  normalizedValue
    it  returns the value if is a number
      expect component normalizedValue 1   toEqual 1
      expect component normalizedValue 0   toEqual 0


    it  returns the value if is not a number
      expect component normalizedValue undefined   toEqual
      expect component normalizedValue null   toEqual



import   Component  ElementRef  ViewChild   from   angular core
import   Time   from    time model

 Component
  selector   my time input
  templateUrl   time input component html
  styleUrls    time input component scss

export class TimeInputComponent
   ViewChild  minuteInput   minuteInputRef  ElementRef
  hours   number
  minutes   number

  isValid    boolean
    if  this isHourInvalid      this isMinuteInvalid      return false
    return true


  setHours hours  string
    this hours   parseInt hours  10
    if  hours length    2
      this autojumpToMinutesField



  private autojumpToMinutesField
    this minuteInputRef nativeElement focus


  setMinutes minutes  string
    this minutes   parseInt minutes  10


  private isHourInvalid    boolean
    return  this hours     undefined     this hours   0    this hours   23    isNaN this hours


  private isMinuteInvalid
    return  this minutes     undefined     this minutes   0    this minutes   59    isNaN this minutes


  getTime    Time
    return new Time this hours  this minutes


  normalizedValue value  number   undefined   null   number
    return isNaN value     value    null        value


  reset
    this hours   undefined
    this minutes   undefined


export class Time
  constructor public readonly hours  number  public readonly minutes  number

import   PossibleTime   from     models possible time model
import   OptionalTimeSelectionComponent   from    optional time selection component

describe  OptionalTimeSelectionComponent
  let component  OptionalTimeSelectionComponent
  const possibleTime1   new PossibleTime new Date  2012 12 10T15 00 00 000Z

  beforeEach
    component   new OptionalTimeSelectionComponent
    component isAtSpecificTime   true


  describe  ngOnInit
    it  sets isAtSpecificTime to true if there are possible times
      component possibleTimes    possibleTime1
      component ngOnInit
      expect component isAtSpecificTime  toEqual true


    it  sets isAtSpecificTime to false if there are possible times
      component possibleTimes
      component ngOnInit
      expect component isAtSpecificTime  toEqual false



  describe  getPossibleTimes
    beforeEach
      component timeSelectionComponent    any   getPossibleTimes         possibleTime1


    it  if is not at specific date  return an empty array
      component isAtSpecificTime   false
      expect component getPossibleTimes    toEqual


    it  if is not at specific date  return possible times
      expect component getPossibleTimes    toEqual  possibleTime1



  describe  toggleAtSpecificTime
    it  changes atSpecific time from false to true
      component isAtSpecificTime   false
      component toggleAtSpecificTime
      expect component isAtSpecificTime  toEqual true


    it  changes atSpecific time from true to false
      component toggleAtSpecificTime
      expect component isAtSpecificTime  toEqual false



  describe  possibleTimesChanged
    it  sets possible times and emits it
      spyOn component onPossibleTimesSelected   emit
      component possibleTimesChanged  possibleTime1
      expect component possibleTimes  toEqual  possibleTime1
      expect component onPossibleTimesSelected emit  toHaveBeenCalledWith  possibleTime1



  describe  setPossibleTime
    beforeEach
      component timeSelectionComponent   jasmine createSpyObj  timeSelectionComponent     addPossibleTime


    it  sets no possible time if empty array passed
      component setPossibleTime
      expect component timeSelectionComponent addPossibleTime  not toHaveBeenCalled


    it  adds given times to time selection
      const possibleTime2   new PossibleTime new Date  2012 12 11T15 00 00 000Z
      component setPossibleTime  possibleTime1  possibleTime2
      expect component timeSelectionComponent addPossibleTime  toHaveBeenCalledWith possibleTime1
      expect component timeSelectionComponent addPossibleTime  toHaveBeenCalledWith possibleTime2
      expect component timeSelectionComponent addPossibleTime  toHaveBeenCalledTimes 2



  describe  isValid
    let timeSelectionComponent  any

    beforeEach
      timeSelectionComponent   jasmine createSpyObj  timeSelectionComponent     getPossibleTimes
      component timeSelectionComponent   timeSelectionComponent


    describe  if is not at specific time
      beforeEach
        component isAtSpecificTime   false


      it  is valid if is not at specific time
        timeSelectionComponent getPossibleTimes and returnValue
        expect component isValid    toBe true



    describe  if is at specific time
      beforeEach
        component isAtSpecificTime   true


      it  is invalid if is at specific time and no possible times selected
        timeSelectionComponent getPossibleTimes and returnValue
        expect component isValid    toBe false


      it  is valid if is at specific time and possible times selected
        timeSelectionComponent getPossibleTimes and returnValue  possibleTime1
        expect component isValid    toBe true




import   Component  EventEmitter  Input  OnInit  Output  ViewChild   from   angular core
import   I18n   from        i18n i18n
import   PossibleTime   from     models possible time model
import   TimePickerComponent   from    time picker component

 Component
  selector   my optional time selection
  templateUrl   optional time selection component html
  styleUrls    optional time selection component scss

export class OptionalTimeSelectionComponent implements OnInit
   ViewChild TimePickerComponent  timeSelectionComponent  TimePickerComponent
   Input   possibleTimes  PossibleTime
   Output   onPossibleTimesSelected   new EventEmitter PossibleTime

  isAtSpecificTime  boolean   false
  i18n   I18n

  ngOnInit
    this isAtSpecificTime   this possibleTimes length   0


  getPossibleTimes
    return this isAtSpecificTime   this timeSelectionComponent getPossibleTimes


  toggleAtSpecificTime
    this isAtSpecificTime    this isAtSpecificTime


  possibleTimesChanged possibleTimes  PossibleTime
    this possibleTimes   possibleTimes
    this onPossibleTimesSelected emit this possibleTimes


  isValid
    return  this isAtSpecificTime    this timeSelectionComponent getPossibleTimes   length   0


  setPossibleTime possibleTimes  PossibleTime
    possibleTimes forEach possibleTime
      this timeSelectionComponent addPossibleTime possibleTime



import   as moment from  moment
import  moment locale de
import   Option   from     dropdown option model
import   PossibleTime   from     models possible time model
import   TimeOptionSelectionComponent   from    time option selection component

describe  TimeOptionSelectionComponent
  let component  any
  const possibleTime   new PossibleTime new Date Date UTC 2016  11  1  11  28  58

  beforeEach
    moment locale  de
    component   new TimeOptionSelectionComponent


  describe  ngOnInit
    it  returns an empty array if no times are given
      component ngOnInit
      expect component timeOptions  toEqual


    it  returns an option array if possible times are given
      component possibleTimes    possibleTime  possibleTime
      component ngOnInit
      const expectedOption   new Option  01 12 2016   12 28   possibleTime
      expect component timeOptions  toEqual  expectedOption  expectedOption



  describe  setPossibleTime
    it  emits on select via setPossible time
      const emitter   jasmine createSpyObj  emitter     emit
      component changePossibleTime   emitter
      component setPossibleTime possibleTime
      expect emitter emit  toHaveBeenCalledWith possibleTime



import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   I18n   from        i18n i18n
import   Option   from     dropdown option model
import   PossibleTime   from     models possible time model

 Component
  selector   my time option selection
  templateUrl   time option selection component html

export class TimeOptionSelectionComponent implements OnInit
   Input   possibleTimes  PossibleTime
   Input   selectedTime  PossibleTime
   Output   changePossibleTime  EventEmitter PossibleTime    new EventEmitter PossibleTime

  i18n   I18n
  timeOptions  Option

  ngOnInit
    this setPossibleTimeOptions


  private setPossibleTimeOptions
    this timeOptions   this possibleTimes map possibleTime    new Option possibleTime parseToString    possibleTime


  setPossibleTime possibleTime  PossibleTime
    this changePossibleTime emit possibleTime


import   I18n   from        i18n i18n
import   PossibleTime   from     models possible time model
import   Time   from     time input time model
import   TimePickerFormComponent   from    time picker form component

describe  TimeSelectionFormComponent
  let timeInputComponent  any
  let timeSelectionFormModal  any
  let component  TimePickerFormComponent

  beforeEach
    timeInputComponent   jasmine createSpyObj  timeInputComponent     isValid    getTime    reset
    timeSelectionFormModal   jasmine createSpyObj  timeSelectionFormModal     show    hide
    component   new TimePickerFormComponent
    component timeInputComponent   timeInputComponent
    component timeSelectionFormModal   timeSelectionFormModal


  describe  minimumSelectableFromDate
    it  returns the date of yesterday
      jasmine clock   mockDate new Date  2017 01 20T14 49 53 988 01 00
      expect component minimumSelectableFromDate    toEqual new Date  2017 01 19T14 49 53 988 01 00



  describe  isValid
    beforeEach
      jasmine clock   mockDate new Date 2017  1  1  16  10  0
      timeInputComponent getTime and returnValue new Time 0  0


    it  returns false if from date is not set
      timeInputComponent isValid and returnValue true
      expect component isValid    toBe false


    it  returns false if time selection is invalid
      component fromDate    jsdate  new Date 2017  4  10
      timeInputComponent isValid and returnValue false
      expect component isValid    toBe false


    it  returns true from date is set and time selection valid
      timeInputComponent isValid and returnValue true
      component fromDate    jsdate  new Date 2017  4  10
      expect component isValid    toBe true


    it  returns false if the date is in the past
      timeInputComponent isValid and returnValue true
      jasmine clock   mockDate new Date 2017  1  2  16  10  0
      component fromDate    jsdate  new Date 2017  1  2
      expect component isValid    toBe false



  describe  showError
    beforeEach
      jasmine clock   mockDate new Date 2017  1  2  16  10  0
      timeInputComponent getTime and returnValue new Time 0  0


    it  shows the normal error if date is not valid
      timeInputComponent isValid and returnValue false
      expect component showError    toEqual I18n t timeSelectionForm errorMessage invalid


    it  shows a special error if date is not in future
      component fromDate    jsdate  new Date 2017  1  1
      timeInputComponent isValid and returnValue true
      expect component showError    toEqual I18n t timeSelectionForm errorMessage notInFuture



  describe  show
    it  calls the show method of the modal
      component show
      expect timeSelectionFormModal show  toHaveBeenCalled



  describe  onSubmit
    describe  if invalid
      beforeEach
        spyOn component   isValid   and returnValue false


      it  sets the visibility of errors to true
        expect component isErrorMessageVisible  toBe false
        component onSubmit
        expect component isErrorMessageVisible  toBe true


      it  does not emit any value
        spyOn component addPossibleTime   emit
        component onSubmit
        expect component addPossibleTime emit  not toHaveBeenCalled


      it  does not hide the modal
        component onSubmit
        expect timeSelectionFormModal hide  not toHaveBeenCalled


      it  does not reset the timeinput
        component onSubmit
        expect timeInputComponent reset  not toHaveBeenCalled



    describe  if valid
      beforeEach
        spyOn component   isValid   and returnValue true
        component fromDate    jsdate  new Date 2017  1  22
        timeInputComponent getTime and returnValue new Time 10  15


      it  sets the visibility of errors to false if was valid
        component isErrorMessageVisible   true
        component onSubmit
        expect component isErrorMessageVisible  toBe false


      it  emits the form with possible time model
        spyOn component addPossibleTime   emit
        component onSubmit
        expect component addPossibleTime emit
           toHaveBeenCalledWith new PossibleTime new Date 2017  1  22  10  15


      it  hides the modal
        component onSubmit
        expect timeSelectionFormModal hide  toHaveBeenCalled


      it  resets the timeinput
        component onSubmit
        expect timeInputComponent reset  toHaveBeenCalled




import   Component  EventEmitter  Output  ViewChild   from   angular core
import   IMyOptions   from  mydatepicker
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from        i18n i18n
import   PossibleTime   from     models possible time model
import   TimeInputComponent   from     time input time input component

interface DatePickerReturnType
  jsdate  Date


 Component
  selector   my time picker form
  templateUrl   time picker form component html
  styleUrls    time picker form component scss

export class TimePickerFormComponent
   Output   addPossibleTime  EventEmitter PossibleTime    new EventEmitter PossibleTime
   ViewChild TimeInputComponent  timeInputComponent  TimeInputComponent
   ViewChild  timeSelectionFormModal   timeSelectionFormModal  ModalDirective

  fromDate  DatePickerReturnType   undefined
  i18n   I18n
  isErrorMessageVisible  boolean   false

  minimumSelectableFromDate
       TODO workaround  BUG in ng2 datetime picker  the date is not selectable
    const d   new Date
    d setDate d getDate     1
    return d


  show
    this timeSelectionFormModal show


  myDatePickerOptions  IMyOptions
    dateFormat   dd mm yyyy


  isValid    boolean
    return this isDateValid      this isDateInFuture


  private isDateValid    boolean
    return   this fromDate    this timeInputComponent isValid


  onSubmit
    this isErrorMessageVisible    this isValid
    if  this isValid
      this timeSelectionFormModal hide
      this addPossibleTime emit new PossibleTime this getDateTime
      this timeInputComponent reset



  showError    string
    return  this isDateValid       this isDateInFuture      this i18n t timeSelectionForm errorMessage notInFuture
      this i18n t timeSelectionForm errorMessage invalid


  private isDateInFuture    boolean
    return this getDateTime     new Date


  private getDateTime    Date   undefined
    const dateTime   new Date this fromDate jsdate getTime
    const time   this timeInputComponent getTime
    dateTime setHours time hours  time minutes
    return dateTime


import   PossibleTime   from     models possible time model
import   TimePickerComponent   from    time picker component

describe  TimePickerComponent
  let component  TimePickerComponent
  const possibleTime1   new PossibleTime new Date  2012 12 10T15 00 00 000Z
  const onChangeEmitter   jasmine createSpyObj  emitter     emit
  beforeEach
    component   new TimePickerComponent
    component changePossibleTime   onChangeEmitter


  describe  addPossibleTime
    beforeEach
      component addPossibleTime possibleTime1


    it  adds new possible time to possibleTime
      expect component getPossibleTimes    toEqual  possibleTime1


    it  emits the new value
      expect component changePossibleTime emit  toHaveBeenCalledWith  possibleTime1



  describe  deletePossibleTime
    const possibleTime3   new PossibleTime new Date  2012 10 10T15 00 00 000Z

    beforeEach
      const possibleTime2   new PossibleTime new Date  2012 11 10T15 00 00 000Z
      component addPossibleTime possibleTime1
      component addPossibleTime possibleTime2
      component addPossibleTime possibleTime3
      component deletePossibleTime 1


    it  deletes the possible time by index
      expect component getPossibleTimes    toEqual  possibleTime1  possibleTime3


    it  emits the new value
      expect component changePossibleTime emit  toHaveBeenCalledWith  possibleTime1  possibleTime3



  describe  getPossibleTimes
    beforeEach
      component addPossibleTime possibleTime1


    it  returns possible times
      expect component getPossibleTimes    toEqual  possibleTime1



import   Component  EventEmitter  Input  Output   from   angular core
import   I18n   from        i18n i18n
import   PossibleTime   from     models possible time model

 Component
  selector   my time picker component
  templateUrl   time picker component html
  styleUrls    time picker component scss

export class TimePickerComponent
   Input   possibleTimes  PossibleTime
   Output   changePossibleTime  EventEmitter PossibleTime      new EventEmitter PossibleTime
  i18n   I18n

  addPossibleTime possibleTime  PossibleTime
    this possibleTimes push possibleTime
    this changePossibleTime emit this possibleTimes


  deletePossibleTime index  number
    this possibleTimes splice index  1
    this changePossibleTime emit this possibleTimes


  getPossibleTimes
    return this possibleTimes


import   AppSettings   from        app settings
import   TrackingPixelComponent   from    tracking pixel component

describe  TrackingPixelComponent
  let component  TrackingPixelComponent
  const timeNow   new Date 2018  1  2  10  50  30

  beforeEach
    jasmine clock   mockDate timeNow
    component   new TrackingPixelComponent
    component identifier   123


  describe  getSrc
    it  contains the time parameter
      expect component getSrc    toContain   time   timeNow getTime


    it  contains the identifier parameter
      expect component getSrc    toContain   tt 123
      component identifier   456
      expect component getSrc    toContain   tt 456


    it  contains the tracking pixel url parameter
      expect component getSrc   startsWith AppSettings TRACKING PIXEL URL   toBe true



import   Component  Input   from   angular core
import   AppSettings   from        app settings

 Component
  selector   my tracking pixel
  templateUrl   tracking pixel component html

export class TrackingPixelComponent
   Input   identifier  number
  private cacheBuster  number

  constructor
    this cacheBuster   new Date   getTime


  hasTrackingPixelUrl    boolean
    return   AppSettings TRACKING PIXEL URL


  getSrc
    return    AppSettings TRACKING PIXEL URL  tt   this identifier  time   this cacheBuster


import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   User   from        models user model
import   UserProfileEditComponent   from    user profile edit component

describe  UserProfileEditComponent
  const alertService    any   success            danger
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched
  const numberFormatter    any   mobileNumberPattern
  let userSessionService  any
  let userService  any
  let component  UserProfileEditComponent

  beforeEach
    userSessionService   jasmine createSpyObj  userSessionService     currentUser
    userService   jasmine createSpyObj  userService     update
    component   new UserProfileEditComponent alertService  formBuilder  formHelper  userSessionService  userService  numberFormatter


  describe  isFormValid
    it  is valid if userForm is valid
      component userForm    any   valid  true
      expect component isFormValid    toEqual true



  describe  ngOnInit
    it  assigns the returned customer and builds the form
      expect component userForm  toBeUndefined
      const customer   new User
      userSessionService currentUser and returnValue Observable of customer
      component ngOnInit
      expect component user  toBe customer
      expect component userForm  toEqual jasmine any FormGroup



  describe  submit
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeFormWithCustomer
      spyOn formHelper   setAsTouched


    describe  successful
      beforeEach
        userService update and returnValue Observable of new User
        spyOn alertService   success
        component submit


      it  calls update on userService
        expect userService update  toHaveBeenCalled


      it  shows success alert
        expect alertService success  toHaveBeenCalledWith I18n t userProfile success


      it  marks all elements as touched
        expect formHelper setAsTouched  toHaveBeenCalled



    describe  unsuccessful
      it  shows danger alert
        userService update and returnValue Observable throw null
        spyOn alertService   danger
        component submit
        expect alertService danger  toHaveBeenCalledWith I18n t userProfile error




import   Component  OnDestroy  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   Subscription   from  rxjs Subscription
import   AlertService   from        alerts alerts service
import   I18n   from        i18n i18n
import   User   from        models user model
import   UserService   from        services user service
import   UserSessionService   from        services user session service
import   FormHelper   from        utils form helper
import   MyValidators   from        utils my validators
import   PhoneNumberFormatterService   from        utils phone number formatter service
import   FormBase   from     form base form base

 Component
  selector   my user profile edit
  templateUrl   user profile edit component html

export class UserProfileEditComponent extends FormBase implements OnInit  OnDestroy
  userForm  FormGroup
  user  User
  i18n   I18n
  formSent   false
  private subscription  Subscription

  constructor private alertService  AlertService  private formBuilder  FormBuilder  private formHelper  FormHelper
              private userSessionService  UserSessionService  private userService  UserService
              private mobileNumberFormatter  PhoneNumberFormatterService    super

  ngOnInit
    this subscription   this userSessionService currentUser   first   subscribe customer
      this user   customer
      this buildForm



  ngOnDestroy
    this subscription unsubscribe


  private buildForm
    this userForm   this formBuilder group
      firstName  new FormControl this user firstName   MyValidators present
      lastName  new FormControl this user lastName   MyValidators present
      phoneNumber  new FormControl this user phoneNumber   Validators pattern this mobileNumberFormatter mobileNumberPattern
      address  new FormControl this user address   Validators required  MyValidators address



  isFormValid    boolean
    return this userForm valid


  submit
    this formHelper setAsTouched this userForm
    this submitted   true
    if   this isFormValid      return
    this formSent   true
    this mergeFormWithCustomer
    this userService update this user  subscribe       this onSuccess          this onError


  mergeFormWithCustomer
    Object assign this user  this userForm value


  private onSuccess
    this formSent   false
    this alertService success this i18n t userProfile success


  private onError
    this formSent   false
    this alertService danger this i18n t userProfile error


import   FormBuilder  FormControl   from   angular forms
import   UserProfileFormComponent   from    user profile form component

describe  UserProfileFormComponent
  const formatter  any    format
  let formHelper  any
  let component  UserProfileFormComponent

  beforeEach
    formHelper   jasmine createSpyObj  fromHelper     showError
    component   new UserProfileFormComponent formatter  formHelper
    component userForm   new FormBuilder   group
      phoneNumber  new FormControl
      address  new FormControl



  describe  formatPhoneNumber
    it  calls the format function of the formatter and assigns the returned value
      const spy   spyOn formatter   format   and returnValue  123
      component userForm controls phoneNumber setValue  333
      component formatPhoneNumber
      expect component userForm value phoneNumber  toEqual  123
      expect spy  toHaveBeenCalled



  describe  showAddressError
    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component userForm controls address



import   Component  Input   from   angular core
import   FormGroup   from   angular forms
import   I18n   from        i18n i18n
import   User   from        models user model
import   FormHelper   from        utils form helper
import   PhoneNumberFormatterService   from        utils phone number formatter service

 Component
  selector   my user profile form
  templateUrl   user profile form component html

export class UserProfileFormComponent
   Input   userForm  FormGroup
   Input   user  User
  i18n   I18n

  constructor private phoneNumberFormatter  PhoneNumberFormatterService
              private formHelper  FormHelper

  formatPhoneNumber
    const phoneNumber   this phoneNumberFormatter format this userForm value phoneNumber
    this userForm controls phoneNumber setValue phoneNumber


  showAddressError
    return this formHelper showError this userForm controls address


import   WorkAnswerListingComponent   from    work answer listing component

describe  WorkAnswerListingComponent
  let component  WorkAnswerListingComponent

  beforeEach
    component   new WorkAnswerListingComponent


  describe  hasAnswers
    it  returns true if there are some answers
      component answers    any    question      answer
      expect component hasAnswers    toEqual true


    it  returns false if there is no answer
      component answers    any
      expect component hasAnswers    toEqual false



import   Component  Input   from   angular core
import   AnswerStruct   from        api endpoints work state api interface
import   I18n   from        i18n i18n

 Component
  selector   my work answer listing
  templateUrl   work answer listing component html

export class WorkAnswerListingComponent
   Input   answers  AnswerStruct
  i18n   I18n

  hasAnswers    boolean
    return this answers length   0


import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  templateUrl   about lawoon component html
  styleUrls    about lawoon component scss

export class AboutLawoonComponent
  i18n   I18n

import   CustomerLandingpageComponent   from    customer landingpage component

describe  CustomerLandingpageComponent
  let component  CustomerLandingpageComponent
  let router  any

  beforeEach
    router   jasmine createSpyObj  router     navigate
    component   new CustomerLandingpageComponent  any      router


  describe  createNewWork
    it  shows the modal on after view init
      component navigateToNewWork
      expect router navigate  toHaveBeenCalledWith    works new



import   Component   from   angular core
import   Router   from   angular router
import   I18n   from        i18n i18n
import   CreateWorkService   from        services create work service

 Component
  selector   my customer landingpage
  styleUrls    customer landingpage component scss          shared lawoon ad lawoon ad component scss
           shared landingpage landingpage scss
  templateUrl   customer landingpage component html

export class CustomerLandingpageComponent
  i18n   I18n

  constructor public createWorkService  CreateWorkService  private router  Router

  navigateToNewWork    void
    this router navigate    works new


import   Component  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from        i18n i18n
import   scrollToFragment   from        utils helpers

 Component
  templateUrl   faq component html

export class FaqComponent implements OnInit
  isCollapsedCommonQA  boolean   true
  i18n   I18n

  constructor private route  ActivatedRoute

  ngOnInit    void
    this route fragment subscribe f
      if  f      service fee
        this isCollapsedCommonQA   false

      scrollToFragment f



import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  templateUrl   forbidden component html

export class ForbiddenComponent
  i18n   I18n

import  rxjs add observable of
import   Observable   from  rxjs Observable
import   GoogleAnalyticsEventsService   from        services google analytics events service
import   TalentRegistrationService   from        services talent registration service
import   HomeComponent   from    home component

describe  HomeComponent
  let component  HomeComponent
  let googleAnalytics  GoogleAnalyticsEventsService
  let talentRegistrationService  TalentRegistrationService
  let router  any
  let route  any

  beforeEach
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent
    router   jasmine createSpyObj  router     navigateByUrl
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     ensureTalent
    route    fragment  Observable of  test
    component   new HomeComponent route  googleAnalytics  router  talentRegistrationService
    component howItWorks    nativeElement  jasmine createSpyObj  howItWorks     scrollIntoView


  describe  emitTeaserGoEvent
    it  calls the GoogleAnalyticsEventsService
      component emitTeaserGoEvent
      expect googleAnalytics emitEvent  toHaveBeenCalledWith  Register    click


    it  scrolls to the element
      component emitTeaserGoEvent
      expect component howItWorks nativeElement scrollIntoView  toHaveBeenCalledWith  block   start   behavior   smooth



  describe  startTalentRegistration
    it  calls ensure talent of the service
      component startTalentRegistration
      expect talentRegistrationService ensureTalent  toHaveBeenCalled



  describe  ngOnInit
    it  navigates to the url if called with a path
      route fragment   Observable of   hello
      component ngOnInit
      expect router navigateByUrl  toHaveBeenCalledWith   hello


    it  doesnt navigates if not called with path
      route fragment   Observable of  hello
      component ngOnInit
      expect router navigateByUrl  not toHaveBeenCalled


    it  doesnt navigates if not called with undefined
      route fragment   Observable of undefined
      component ngOnInit
      expect router navigateByUrl  not toHaveBeenCalled



import   Component  ElementRef  OnInit  ViewChild   from   angular core
import   ActivatedRoute  Router   from   angular router
import   I18n   from        i18n i18n
import   GoogleAnalyticsEventsService   from        services google analytics events service
import   TalentRegistrationService   from        services talent registration service
import   scrollToFragment   from        utils helpers

 Component
  selector   my home
  styleUrls    home component scss
  templateUrl   home component html

export class HomeComponent implements OnInit
  i18n   I18n
   ViewChild  howItWorks   howItWorks  ElementRef

  constructor private route  ActivatedRoute  private googleAnalyticsService  GoogleAnalyticsEventsService
              private router  Router  private talentRegistrationService  TalentRegistrationService

  ngOnInit    void
    this route fragment subscribe  f  string
      if  f    f startsWith
        this router navigateByUrl f
        else
        scrollToFragment f




  emitTeaserGoEvent
    this googleAnalyticsService emitEvent  Register    click
    this howItWorks nativeElement scrollIntoView  block   start   behavior   smooth


  startTalentRegistration
    this talentRegistrationService ensureTalent
            this router navigate    talent onboarding




export   from    home component
import   Component   from   angular core

 Component
  styleUrls    jobs component scss
  templateUrl   jobs component html

export class JobsComponent

export   from    privacy component
import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  selector   my privacy
  templateUrl   privacy component html

export class PrivacyComponent
  i18n   I18n

export   from    site notice component
import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  selector   my site notice
  templateUrl   site notice component html

export class SiteNoticeComponent
  i18n   I18n

import   TalentLandingpageComponent   from    talent landingpage component

describe  TalentLandingpageComponent
  let component  TalentLandingpageComponent
  let talentRegistrationService  any
  let router  any

  beforeEach
    talentRegistrationService    ensureTalent            talentForm   oldForm
    router   jasmine createSpyObj  router     navigate
    component   new TalentLandingpageComponent talentRegistrationService  router


  describe  startTalentRegistration
    it  assigns the talent to the talentForm of the talent registration service
      component startTalentRegistration  any   mockedTalent
      expect talentRegistrationService talentForm  toBe  mockedTalent


    it  ensures the talent
      spyOn talentRegistrationService   ensureTalent
      component startTalentRegistration  any
      expect talentRegistrationService ensureTalent  toHaveBeenCalled



import   Component   from   angular core
import   Router   from   angular router
import   I18n   from        i18n i18n
import   Talent   from        models
import   TalentRegistrationService   from        services talent registration service

 Component
  selector   my talent landingpage
  styleUrls          shared lawoon ad lawoon ad component scss
           shared landingpage landingpage scss
  templateUrl   talent landingpage component html

export class TalentLandingpageComponent
  i18n   I18n

  constructor public talentRegistrationService  TalentRegistrationService  private router  Router

  startTalentRegistration talent  Talent
    this talentRegistrationService ensureTalent
            this router navigate   outlets   primary    talent onboarding    auth  null
        outlets   primary    talents    auth  null

    this talentRegistrationService talentForm   talent


import   Component  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from        i18n i18n
import   scrollToFragment   from        utils helpers

 Component
  templateUrl   terms component html

export class TermsComponent implements OnInit
  i18n   I18n
  constructor private route  ActivatedRoute

  ngOnInit    void
    this route fragment subscribe f    scrollToFragment f


import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  templateUrl   unauthorized component html

export class UnauthorizedComponent
  i18n   I18n

import   DomSanitizer   from   angular platform browser
import   ModalDirective   from  ng2 bootstrap modal
import   Observable   from  rxjs Observable
import   I18n   from        i18n i18n
import   GoogleAnalyticsEventsService   from        services google analytics events service
import   VideoComponent   from    video component

describe  VideoComponent
  let googleAnalytics  GoogleAnalyticsEventsService
  let domSanitizer  DomSanitizer
  let spy  ModalDirective
  let video  VideoComponent

  beforeEach
    spy   jasmine createSpyObj ModalDirective   modal     show
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent
    domSanitizer   jasmine createSpyObj DomSanitizer   domSanitizer     bypassSecurityTrustResourceUrl
    video   new VideoComponent googleAnalytics  domSanitizer


  it  should start the video
    video modal   spy
    expect video isPlaying  toBeFalsy
    video play
    expect video isPlaying  toBeTruthy
    expect spy show  toHaveBeenCalled
    expect googleAnalytics emitEvent  toHaveBeenCalledWith  Video    play


  it  should stop the video
    video modal    any  spy
    video play
    video stop
    expect video isPlaying  toBeFalsy


  describe  getVideoUrl
    it  returns the german video if language is german   done
      spyOn I18n   getLang   and returnValue Observable of  de
      video getVideoUrl   subscribe  url
        expect domSanitizer bypassSecurityTrustResourceUrl
           toHaveBeenCalledWith  https   www youtube com embed 7 pe8RWfidw color white autoplay 1 showinfo 0 rel 0
        done



    it  returns the english video if language is not german   done
      spyOn I18n   getLang   and returnValue Observable of  fr
      video getVideoUrl   subscribe  url
        expect domSanitizer bypassSecurityTrustResourceUrl
           toHaveBeenCalledWith  https   www youtube com embed XOK2vf53kaY color white autoplay 1 showinfo 0 rel 0
        done




import   Component  ViewChild   from   angular core
import   DomSanitizer   from   angular platform browser
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from        i18n i18n
import   GoogleAnalyticsEventsService   from        services google analytics events service

 Component
  selector   my video
  styleUrls    video component scss
  templateUrl   video component html

export class VideoComponent
   ViewChild ModalDirective  modal  ModalDirective
  isPlaying  boolean   false

  constructor private googleAnalyticsService  GoogleAnalyticsEventsService  private sanitizer  DomSanitizer

  play
    this googleAnalyticsService emitEvent  Video    play
    this modal show
    this isPlaying   true


  stop
    this isPlaying   false


  getVideoUrl
    return I18n getLang   map language
      const videoID    language      de      7 pe8RWfidw     XOK2vf53kaY
      const videoURL    https   www youtube com embed   videoID  color white autoplay 1 showinfo 0 rel 0
      return this sanitizer bypassSecurityTrustResourceUrl videoURL



import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   WorkFlow   from        shared models work flow model
import   ArchivedWorkFlowStatus  WorkFlowStatus   from        shared models work flow types
import   TalentArchivedWorkFlowListComponent   from    talent archived work flow list component

describe  TalentArchivedWorkFlowListComponent
  let component  TalentArchivedWorkFlowListComponent
  let workFlowService  any
  let route  any    queryParams
  let router  any
  const mockedResponse  Paginated WorkFlow
    data   new WorkFlow
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    workFlowService   jasmine createSpyObj  workFlowService     allArchived
    router   jasmine createSpyObj  router     navigate
    route    queryParams
    component   new TalentArchivedWorkFlowListComponent workFlowService  route  router


  describe  status text
    let workFlow  any

    beforeEach
      workFlow   new WorkFlow

      declinedInvitation    declinedOffer    receipt   forEach  status  WorkFlowStatus
      it  returns the correct text for   status
        workFlow latestType   status
        expect component statusText workFlow   toBe I18n t talentArchive workFlowStatus  ArchivedWorkFlowStatus  status




  describe  hasWorkFlows
    it  returns false  if workFlows is unefined
      expect component hasWorkFlows    toBe false


    it  returns false  if workFlows is empty
      component workFlows
      expect component hasWorkFlows    toBe false


    it  returns false  if workFlows is not empty
      component workFlows    new WorkFlow
      expect component hasWorkFlows    toBe true



  describe  ngOnInit
    beforeEach
      spyOn component   getWorks


    it  sets the page to the query param if given
      route queryParams   Observable of  page  2
      component ngOnInit
      expect component page  toEqual 2
      expect component getWorks  toHaveBeenCalled


    it  sets the page to 1 if the query param is undefined
      route queryParams   Observable of
      component ngOnInit
      expect component page  toEqual 1
      expect component getWorks  toHaveBeenCalled



  describe  getWorks
    beforeEach
      workFlowService allArchived and returnValue Observable of mockedResponse
      component page   2
      component getWorks


    it  sets archived works
      expect component workFlows  toEqual mockedResponse data


    it  sets totalCount
      expect component totalCount  toEqual mockedResponse meta totalCount


    it  uses the allArchived method of workFlowService for getting data
      expect workFlowService allArchived  toHaveBeenCalledWith 2



  describe  updateQueryParams
    it  serializes the page and calls the navigate function correctly
      component page   2
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  2
        relativeTo  route



    it  sets page to null if they are of default value
      component page   1
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  null
        relativeTo  route




  describe  isWorkFinished
      workInvitation    offer    contract    bill    declinedInvitation    declinedOffer   forEach  status  WorkFlowStatus
      it  returns no for   status
        expect component isWorkFinished status   toBe false



    it  returns yes for receipt
      expect component isWorkFinished  receipt    toBe true



  describe  pageChanged
    it  scrolls to the top
      spyOn window   scrollTo
      component pageChanged
      expect window scrollTo  toHaveBeenCalledWith 0  0



import   Component  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   WorkFlowService   from        services work flow service
import   WorkFlow   from        shared models work flow model
import   ArchivedWorkFlowStatus  WorkFlowStatus   from        shared models work flow types
import   PaginatedArchiveBase   from        shared paginated archive paginated archive base

 Component
  selector   my talent archive
  templateUrl   talent archived work flow list component html
  styleUrls       work flow list talent work flow list component scss

export class TalentArchivedWorkFlowListComponent extends PaginatedArchiveBase implements OnInit
  i18n   I18n
  workFlows  WorkFlow

  constructor private workFlowService  WorkFlowService  protected route  ActivatedRoute  protected router  Router
    super route  router


  statusText workFlow  WorkFlow   string
    return this i18n t talentArchive workFlowStatus  ArchivedWorkFlowStatus  workFlow latestType


  hasWorkFlows    boolean
    return   this workFlows    this workFlows length   0


  getWorks
    this workFlowService allArchived this page  subscribe jsonapiData    this onWorkFlowsFetched jsonapiData


  isWorkFinished status  WorkFlowStatus
    return status      receipt


  private onWorkFlowsFetched jsonapiData  Paginated WorkFlow
    this totalCount   jsonapiData meta totalCount
    this workFlows   jsonapiData data
    window scrollTo 0  0


import   Observable   from  rxjs Observable
import   WorkFlow   from           shared models work flow model
import   Bill   from           shared models work states bill
import   TalentBillDetailComponent   from    talent bill detail component

describe  TalentBillDetailComponent
  let component  TalentBillDetailComponent
  let bankAccountService  any

  beforeEach
    bankAccountService   jasmine createSpyObj  bankAccountService     isConnected
    component   new TalentBillDetailComponent bankAccountService


  describe  ngOnInit
    it  calls the bankAccountService to set bankAccountConnected
      component workFlow   new WorkFlow
      expect component isBankAccountConnected  toEqual true
      bankAccountService isConnected and returnValue Observable of false
      component ngOnInit
      expect component isBankAccountConnected  toEqual false



  describe  openCollapsible
    it  sets billFormCollapsed to false
      component billFormCollapsed   true
      component openCollapsible
      expect component billFormCollapsed  toEqual false



  describe  onBankAccountConnected
    it  sets the isBankAccountConnected
      component isBankAccountConnected   true
      component onBankAccountConnected false
      expect component isBankAccountConnected  toEqual false
      component onBankAccountConnected true
      expect component isBankAccountConnected  toEqual true



  describe  showBill
    it  assigns the bill if it is not null
      const bill   new Bill
      component workFlow   new WorkFlow
      component billFormCollapsed   false
      component showBill bill
      expect component bill  toEqual bill
      expect component billFormCollapsed  toEqual true


    it  assigns not the bill if it is null
      component bill   new Bill
      component billFormCollapsed   false
      component showBill null
      expect component bill  not toBeNull
      expect component billFormCollapsed  toEqual true



  describe  isFixedPriceOffer
    describe  when bill has a fixed price offer
      beforeEach
        component bill    any   offer   cost   work   calculatedFixedRate  300


      it  returns true
        expect component isFixedPriceOffer    toBe true



    describe  when bill has an hourly rate in offer
      beforeEach
        component bill    any   offer   cost   work   calculatedHourlyRate  300


      it  returns true
        expect component isFixedPriceOffer    toBe false




import   Component  Input  OnInit   from   angular core
import   I18n   from           i18n i18n
import   BankAccountService   from           payment bank accounts bank account service
import   WorkFlow   from           shared models work flow model
import   Bill   from           shared models work states bill

 Component
  selector   my talent bill detail
  templateUrl   talent bill detail component html
  styleUrls             shared collapsible collapsible component scss

export class TalentBillDetailComponent implements OnInit
   Input   workFlow  WorkFlow
  i18n   I18n
  bill  Bill
  billFormCollapsed   true
  isBankAccountConnected   true

  constructor private bankAccountService  BankAccountService

  ngOnInit
    this bill   this workFlow bill
    this bankAccountService isConnected   subscribe isConnected    this isBankAccountConnected   isConnected


  openCollapsible
    this billFormCollapsed   false
    window scrollTo 0  0


  private closeCollapsible
    this billFormCollapsed   true
    window scrollTo 0  0


  showBill bill  Bill   null
    if  bill
      this bill   bill
      this workFlow bill   bill

    this closeCollapsible


  onBankAccountConnected isConnected  boolean
    this isBankAccountConnected   isConnected


  isFixedPriceOffer
    return   this bill offer cost work calculatedFixedRate


import   FormBuilder  FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   costMockJSON   from           api mock data cost api service mock data
import   I18n   from           i18n i18n
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   CostForm   from        costs cost form model
import   TalentBillEditComponent   from    talent bill edit component

describe  TalentBillEditComponent
  let component  TalentBillEditComponent
  let billService  any
  let alertService  any
  let costService  any
  const offerFormBuilder   new TalentOfferFormBuilderService new FormBuilder
  const formHelper    any   setAsTouched

  beforeEach
    billService   jasmine createSpyObj  billService     create    update
    alertService   jasmine createSpyObj  alertService     success    danger
    costService   jasmine createSpyObj  costService     calculateCost
    component   new TalentBillEditComponent alertService  billService  formHelper  costService  offerFormBuilder
    component cost   costMockJSON attributes cost


  describe  ngOnInit
    it  builds the form
      expect component billEditFormGroup  toBeUndefined
      component ngOnInit
      expect component billEditFormGroup  toEqual jasmine any FormGroup


    it  assigns the cost form
      expect component costForm  toBeUndefined
      component ngOnInit
      expect component costForm  toEqual jasmine any CostForm



  describe  isFormValid
    beforeEach
      component billEditFormGroup    any   valid  true
      component costForm    any   isValidatedByServer        true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component billEditFormGroup    any   valid  false
      expect component isFormValid    toBe false


    it  returns false if costForm is not valid
      component costForm isValidatedByServer         false
      expect component isFormValid    toBe false



  describe  submitBill
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn formHelper   setAsTouched
      spyOn component onFormCallback   emit
      component costForm    any   id  5
      component ngOnInit


    describe  creates a bill
      beforeEach
        component contractId   5


      describe  successful
        beforeEach
          billService create and returnValue Observable of  id  6
          component submitBill


        it  submits the costForm to the Service
          expect billService create  toHaveBeenCalledWith 5  component costFormGroup


        it  shows an alert success message
          expect alertService success  toHaveBeenCalledWith I18n t talentBillEdit billCreatedSuccess


        it  emits the new bill
          expect component onFormCallback emit  toHaveBeenCalledWith  id  6



      describe  unsuccessful
        beforeEach
          billService create and returnValue Observable throw null
          component submitBill


        it  submits the workDescriptionForm to the Service
          expect billService create  toHaveBeenCalledWith 5  component costFormGroup


        it  shows an alert danger message
          expect alertService danger  toHaveBeenCalledWith I18n t talentBillEdit billCreatedError


        it  does not emit the new value
          expect component onFormCallback emit  not toHaveBeenCalled




    describe  updates a bill
      beforeEach
        component billId   6


      describe  successful
        beforeEach
          billService update and returnValue Observable of  id  6
          component submitBill


        it  submits the costForm to the Service
          expect billService update  toHaveBeenCalledWith 6  component costFormGroup


        it  shows an alert success message
          expect alertService success  toHaveBeenCalledWith I18n t talentBillEdit billUpdatedSuccess


        it  emits the new bill
          expect component onFormCallback emit  toHaveBeenCalledWith  id  6



      describe  unsuccessful
        beforeEach
          billService update and returnValue Observable throw null
          component submitBill


        it  submits the workDescriptionForm to the Service
          expect billService update  toHaveBeenCalledWith 6  component costFormGroup


        it  shows an alert danger message
          expect alertService danger  toHaveBeenCalledWith I18n t talentBillEdit billUpdatedError


        it  does not emit the new value
          expect component onFormCallback emit  not toHaveBeenCalled





  describe  cancel
    it  calls the emiter with null
      spyOn component onFormCallback   emit
      component cancel
      expect component onFormCallback emit  toHaveBeenCalledWith null



  describe  calculateCost
    beforeEach
      component ngOnInit


    describe  when costForm is invalid
      let costFormGetSpy  jasmine Spy

      beforeEach
        costFormGetSpy   spyOn component billEditFormGroup   get   and returnValue
          valid  false

        component calculateCost


      it  fetches the costform
        expect costFormGetSpy  toHaveBeenCalledWith  cost


      it  does not call the service
        expect costService calculateCost  not toHaveBeenCalled


      it  marks cost as invalid
        expect component costForm validatedByServer  toBe false



    describe  when costForm is valid
      const costFormGroupMock
        valid  true


      beforeEach
        spyOn component billEditFormGroup   get   and returnValue costFormGroupMock


      it  calls the service
        costService calculateCost and returnValue Observable of
        component calculateCost
        expect costService calculateCost  toHaveBeenCalledWith costFormGroupMock
        expect component costForm validatedByServer  toBeTruthy


      describe  when cost service call is unsuccessful
        beforeEach
          costService calculateCost and returnValue Observable throw null


        it  marks cost as invalid
          component calculateCost
          expect costService calculateCost  toHaveBeenCalledWith costFormGroupMock
          expect component costForm validatedByServer  toBeFalsy




    describe  isFixedPriceOffer
      describe  when bill has a fixed price offer
        beforeEach
          component costForm    any   cost   work   calculatedFixedRate  300


        it  returns true
          expect component isFixedPriceOffer    toBe true



      describe  when bill has an hourly rate in offer
        beforeEach
          component costForm    any   cost   work   calculatedHourlyRate  300


        it  returns true
          expect component isFixedPriceOffer    toBe false





import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   FormGroup   from   angular forms
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   BillService   from           services bill service
import   CostService   from           services cost service
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   FormBase   from           shared form base form base
import   Cost   from           shared models cost cost model
import   Bill   from           shared models work states bill
import   FormHelper   from           utils form helper
import   CostForm   from        costs cost form model

 Component
  selector   my talent bill edit
  templateUrl   talent bill edit component html

export class TalentBillEditComponent extends FormBase implements OnInit
   Input   cost  Cost
   Input   billId  number
   Input   contractId  number
   Output   onFormCallback   new EventEmitter Bill
  i18n   I18n
  costForm  CostForm
  billEditFormGroup  FormGroup
  formSent   false
  private touched   false

  get costFormGroup
    return  FormGroup  this billEditFormGroup get  cost


  constructor private alertService  AlertService  private billService  BillService
              private formHelper  FormHelper
              private costService  CostService
              private offerFormBuilder  TalentOfferFormBuilderService
    super


  ngOnInit
    this costForm   new CostForm this cost
    this billEditFormGroup   this offerFormBuilder buildCostForm this costForm


  submitBill
    this formHelper setAsTouched this billEditFormGroup
    this submitted   true
    if   this isFormValid      return
    this formSent   true
    this billId   this updateBill     this createBill


  private createBill
    this billService create this contractId  this costFormGroup  subscribe bill    this onSuccess bill         this onError


  private updateBill
    this billService update this billId  this costFormGroup  subscribe bill    this onSuccess bill         this onError


  isFormValid    boolean
    return this billEditFormGroup valid    this costForm isValidatedByServer


  private onSuccess bill  Bill
    this alertService success this billId   I18n t talentBillEdit billUpdatedSuccess   I18n t talentBillEdit billCreatedSuccess
    this billId   bill id
    this formSent   false
    this onFormCallback emit bill


  private onError
    this alertService danger this billId   I18n t talentBillEdit billUpdatedError   I18n t talentBillEdit billCreatedError
    this formSent   false


  cancel
    this onFormCallback emit null


  markTotalsInvalid    boolean
    return  this costForm isValidatedByServer       this submitted    this touched


  calculateCost
    this touched   true
    if  this costFormGroup valid
      this costService calculateCost this costFormGroup  subscribe cost
        this costForm cost   cost
        this costForm validatedByServer   true
               this costForm validatedByServer   false
      else
      this costForm validatedByServer   false



  isFixedPriceOffer
    return   this costForm cost work calculatedFixedRate


import   Component  Input   from   angular core
import   I18n   from        i18n i18n
import   Contract   from        shared models contract model

 Component
  selector   my talent contract detail
  templateUrl   talent contract detail component html

export class TalentContractDetailComponent
   Input   contract  Contract
  i18n   I18n

import   FormBuilder  FormControl  FormGroup   from   angular forms
import   TalentOfferFormBuilderService   from        services talent offer form builder service talent offer form builder service
import   OfferForm   from        shared models offer form model
import   CostEditComponent   from    cost edit component

describe  CostEditComponent
  let component  CostEditComponent
  let formHelper  any
  const talentOfferFormBuilderService   new TalentOfferFormBuilderService new FormBuilder
  const offerForm   new OfferForm

  beforeEach
    formHelper   jasmine createSpyObj  formHelper     showError
    component   new CostEditComponent formHelper  talentOfferFormBuilderService
    component costForm   offerForm costForm
    component offerFormGroup   talentOfferFormBuilderService buildForm offerForm  true
    spyOn component onCostFormChanged   emit


  describe  showDurationError
    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showDurationError    toBe true
      formHelper showError and returnValue false
      expect component showDurationError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component offerFormGroup get   cost    work    duration



  describe  markTotalsInvalid
    describe  when form is not submitted
      beforeEach
        component submitted   false


      it  returns false
        expect component markTotalsInvalid    toBe false



    describe  when form is not touched
      beforeEach
        spyOn component   costFormGroup   and returnValue  touched  false


      it  returns false
        expect component markTotalsInvalid    toBe false



    describe  when form is submitted and touched
      beforeEach
        component submitted   true
        spyOn component   costFormGroup   and returnValue  touched  true


      it  returns true if form is invalid
        spyOn component costFormGroup   hasError   and returnValue true
        expect component markTotalsInvalid    toBe true


      it  returns false if form is validated
        spyOn component costFormGroup   hasError   and returnValue false
        expect component markTotalsInvalid    toBe false




  describe  markFixedRateInvalid
    describe  when markTotalsInvalid returns true
      it  returns true
        spyOn component   markTotalsInvalid   and returnValue true
        expect component markFixedRateInvalid    toBe true



    describe  when markTotalsInvalid returns false
      beforeEach
        spyOn component   markTotalsInvalid   and returnValue false


      it  returns true when fixedRate field is invalid
        spyOn component costFormGroup   get   and returnValue   invalid  true
        expect component markFixedRateInvalid    toBe true


      it  returns true when fixedRate field is valid
        spyOn component costFormGroup   get   and returnValue   invalid  false
        expect component markFixedRateInvalid    toBe false




  describe  emitCostFormChanged
    it  emits the cost form
      component emitCostFormChanged
      expect component onCostFormChanged emit  toHaveBeenCalledWith component costForm



  describe  totalCost
    describe  when is validated by server
      beforeEach
        component costForm    any
          cost
            totals
              subtotal   costExcludingFee  42


          isValidatedByServer        true



      it  returns the cost excluding fee from the server
        expect component totalCost    toBe 42



    describe  when is not validated by server
      beforeEach
        component costForm    any   isValidatedByServer        false
        component offerFormGroup patchValue
          cost
            items     price  42




      it  calculates the total cost by the value of the cost form
        expect component totalCost    toBe 42




  describe  costTypeChanged
    beforeEach
      component offerFormGroup   new FormGroup
        cost  new FormGroup
          work  new FormGroup
            isFixedPrice  new FormControl true
            duration  new FormControl 60
            hourlyRate  new FormControl 1000
            fixedRate  new FormControl undefined

          items  new FormControl  1  2  3




    it  emits a cost change
      component costTypeChanged
      expect component onCostFormChanged emit  toHaveBeenCalled


    it  resets in every case
      const work   component offerFormGroup get  cost   get  work
      component costTypeChanged
      expect work get  duration   value  toBeNull
      expect work get  hourlyRate   value  toBeNull
      expect work get  fixedRate   value  toBeNull
      expect component costFormGroup get  items   value  toEqual


    describe  when is set to fixed price offer
      beforeEach
        component displayFixedPrice   true


      it  correctly sets isFixedPrice to true
        component costTypeChanged
        expect component costFormGroup get  work   get  isFixedPrice   value  toEqual true



    describe  when is set to hourly rate price offer
      beforeEach
        component displayFixedPrice   false


      it  correctly sets isFixedPrice to false
        component costTypeChanged
        expect component costFormGroup get  work   get  isFixedPrice   value  toEqual false




import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   FormGroup   from   angular forms
import   I18n   from        i18n i18n
import   TalentOfferFormBuilderService   from        services talent offer form builder service talent offer form builder service
import   FormHelper   from        utils form helper
import   CostForm   from    cost form model

 Component
  selector   my cost edit
  templateUrl   cost edit component html
  styleUrls    cost edit component scss

export class CostEditComponent implements OnInit
   Input   costForm  CostForm
   Input   offerFormGroup  FormGroup
   Input   submitted  boolean
   Input   hideCostTypeRadioButtons   false
   Input   totalCostLabel  string
   Output   onCostFormChanged  EventEmitter CostForm    new EventEmitter CostForm
  displayFixedPrice   false
  i18n   I18n

  get costFormGroup
    return this offerFormGroup get  cost


  constructor private formHelper  FormHelper  private formBuilderService  TalentOfferFormBuilderService

  ngOnInit
    this displayFixedPrice   this costForm isFixedPrice


  emitCostFormChanged
    this onCostFormChanged emit this costForm


  showDurationError
    return this formHelper showError this offerFormGroup get   cost    work    duration


  showHourlyRateError
    return this formHelper showError this offerFormGroup get   cost    work    hourlyRate


  markTotalsInvalid    boolean
    return  this submitted    this costFormGroup touched     this costFormGroup hasError  totalCost


  markFixedRateInvalid    boolean
    return this markTotalsInvalid      this costFormGroup get   work    fixedRate    invalid


  costTypeChanged
    this resetWorkCostForm
    this emitCostFormChanged


  showWorkCostBelowMinimumError
    return this costFormGroup hasError  work      this costFormGroup dirty


  costIsBelowMinimum
    return this costFormGroup hasError  totalCost


  private resetWorkCostForm
    this costFormGroup get  work   reset
      isFixedPrice  this displayFixedPrice
      duration  undefined
      hourlyRate  undefined
      fixedRate  undefined

    this costFormGroup get  items   setValue


  totalCost
    return this costForm isValidatedByServer
      this costForm cost totals subtotal costExcludingFee
      this formBuilderService totalCost  FormGroup  this offerFormGroup get  cost


import   CostItemForm   from        shared models cost item form model
import   Cost   from        shared models cost cost model
import   CostForm   from    cost form model

describe  CostForm
  let model  CostForm
  const cost  Cost
    currency   chf
    work
      duration  435
      hourlyRate  3000
      calculatedHourlyRate  null

    items
      description   Hundekuchen
      price  4800
      amount  2
      calculatedPrice  null
      totals  null

      description   Reisekosten
      price  3245
      amount  1
      calculatedPrice  null
      totals  null

    totals
      items  null
      work  null
      subtotal  null
      talentVat  null
      lawoon  null
      payment  null



  describe  initializes the cost form
    let newModel  CostForm

    describe  map cost to model if cost
      beforeEach
        newModel   new CostForm cost


      it  converts the costItemForms
        expect newModel costItemForms  toEqual
          new CostItemForm  Hundekuchen   4800  2
          new CostItemForm  Reisekosten   3245  1



      it  converts the validatedByServer
        expect newModel validatedByServer  toEqual true



    describe  sets defaults if no cost given
      beforeEach
        newModel   new CostForm


      it  converts the validatedByServer
        expect newModel validatedByServer  toBe false


      it  converts the costItemForms
        expect newModel costItemForms  toEqual


      it  has the correct defaults
        expect model durationInMinutes  toEqual 0
        expect model netHourlyRate  toEqual undefined
        expect model fixedRate  toEqual undefined
        expect model isFixedPrice  toEqual false




  beforeEach
    model   new CostForm


  describe  isValidatedByServer
    it  returns true if validatedByServer is true
      model validatedByServer   true
      expect model isValidatedByServer    toBeTruthy


    it  returns false if validatedByServer is false
      expect model isValidatedByServer    toBeFalsy



import   CostItemForm   from        shared models cost item form model
import   Cost   from        shared models cost cost model

export class CostForm
  readonly costItemForms  CostItemForm
  netHourlyRate   number
  fixedRate   number
  isFixedPrice  boolean   false
  cost  Cost
  validatedByServer  boolean   true
  durationInMinutes  number   0

  constructor cost   Cost
    if  cost
         todo Refactor the API response and the cost model to remove this step  Then this model can be removed completely
      this costItemForms   cost items map item    new CostItemForm item description  item price  item amount
      this durationInMinutes   cost work duration
      this netHourlyRate   cost work hourlyRate
      this fixedRate   cost work fixedRate
      this isFixedPrice     cost work fixedRate
      this cost   cost
      else
      this costItemForms
      this validatedByServer   false



  isValidatedByServer    boolean
    return this validatedByServer


import   CostItemForm   from        shared models cost item form model
import   CostItemStruct   from     offer new talent offer new types
import   CostItemsFormComponent   from    cost items form component

describe  CostItemsFormComponent
  let costItemNewForm  any
  let component  CostItemsFormComponent

  beforeEach
    costItemNewForm   jasmine createSpyObj  costItemNewForm     hide
    component   new CostItemsFormComponent
    component costItems
    component costItemNewForm   costItemNewForm


  describe  addCostItem
    describe  if invalid
      it  sets the state to  submitted  and does not reset the new cost item
        const newCostItem  CostItemStruct    description   testItem   price  null  amount  null
        component newCostItem   newCostItem
        expect component isNewCostItemSubmitted  toBeFalsy
        component addCostItem
        expect component isNewCostItemSubmitted  toBeTruthy
        expect component newCostItem  toEqual newCostItem


      it  does not hide the modal
        component addCostItem
        expect costItemNewForm hide  not toHaveBeenCalled



    describe  if valid
      beforeEach
        component newCostItem    description   description   price  800  amount  1


      it  adds the item to the costForm
        expect component costItems length  toBe 0
        component addCostItem
        expect component costItems length  toBe 1


      it  emits that an item has been added
        spyOn component onCostItemsChanged   emit
        component addCostItem
        expect component onCostItemsChanged emit  toHaveBeenCalledWith component costItems


      it  resets the cost item
        component addCostItem
        expect component newCostItem  toEqual  description      price  null  amount  1


      it  resets the submitted state
        component addCostItem
        expect component isNewCostItemSubmitted  toBeFalsy


      it  hides the modal
        component addCostItem
        expect costItemNewForm hide  toHaveBeenCalled




  describe  deleteCostItem
    it  deletes the possible time by index and calls emit
      const costItemForm1   new CostItemForm  Item 1   1  10
      const costItemForm2   new CostItemForm  Item 2   1  10
      const costItemForm3   new CostItemForm  Item 3   1  10
      spyOn component onCostItemsChanged   emit
      component costItems    costItemForm1  costItemForm2  costItemForm3
      component deleteCostItem 1
      expect component costItems  toEqual  costItemForm1  costItemForm3
      expect component onCostItemsChanged emit  toHaveBeenCalledWith component costItems



  describe  isNewQuestionErrorVisible
    it  returns false  if not is submitted and is invalid
      spyOn component   isNewCostItemValid   and returnValue false
      component isNewCostItemSubmitted   false
      expect component isNewCostItemErrorVisible    toBeFalsy


    it  returns false  if not is submitted and is valid
      spyOn component   isNewCostItemValid   and returnValue true
      component isNewCostItemSubmitted   false
      expect component isNewCostItemErrorVisible    toBeFalsy


    it  returns true  if is submitted and is invalid
      spyOn component   isNewCostItemValid   and returnValue false
      component isNewCostItemSubmitted   true
      expect component isNewCostItemErrorVisible    toBeTruthy


    it  returns false  if is submitted and is valid
      spyOn component   isNewCostItemValid   and returnValue true
      component isNewCostItemSubmitted   true
      expect component isNewCostItemErrorVisible    toBeFalsy



  describe  isNewCostItemValid
    beforeEach
      component newCostItem    description   Test   price  23  amount  2
      expect component isNewCostItemValid    toBeTruthy


    it  returns false if a new cost item has no or an empty description
      component newCostItem description
      expect component isNewCostItemValid    toBeFalsy


    it  returns false if a new cost item has an empty price which is for number inputs  null
      component newCostItem price   null
      expect component isNewCostItemValid    toBeFalsy


    it  returns false if a new cost is below 45 cents
      component newCostItem amount   1
      expect component isNewCostItemValid    toBeFalsy



  describe  sum
    it  calculates the sum of all cost items
      component costItems push new CostItemForm  My Item   1  5   new CostItemForm  Item 2   2  1
      expect component sum    toEqual 7



  describe  newCostTotal
    it  calculates the total of new cost position
      component newCostItem    description   description   price  8 0  amount  1
      expect component newCostItemTotal    toEqual 8 0


    it  returns null if the price is still undefined
      component newCostItem    description   description   price  undefined  amount  1
      expect component newCostItemTotal    toEqual null



import   Component  EventEmitter  Input  Output  ViewChild   from   angular core
import   ModalDirective   from  ng2 bootstrap modal
import   I18n   from        i18n i18n
import   CostItemForm   from        shared models cost item form model
import   Cost   from        shared models cost cost model
import   sum   from        utils helpers
import   CostItemStruct   from     offer new talent offer new types

 Component
  selector   my cost items form
  templateUrl   cost items form component html
  styleUrls    cost items form component scss

export class CostItemsFormComponent
   Output   onCostItemsChanged  EventEmitter CostItemForm      new EventEmitter CostItemForm
   Input   costItems  CostItemForm
   Input   cost  Cost
   ViewChild  costItemNewForm   costItemNewForm  ModalDirective
  i18n   I18n
  newCostItem  CostItemStruct   this createCostItemStruct
  isNewCostItemSubmitted  boolean   false

  addCostItem
    this isNewCostItemSubmitted   true
    if  this isNewCostItemValid
      this costItemNewForm hide
      this costItems push this createCostItemForm
      this newCostItem   this createCostItemStruct
      this isNewCostItemSubmitted   false
      this onCostItemsChanged emit this costItems



  private createCostItemForm
    return new CostItemForm this newCostItem description  this newCostItem price  this newCostItem amount


  deleteCostItem index  number
    this costItems splice index  1
    this onCostItemsChanged emit this costItems


  isNewCostItemErrorVisible    boolean
    return this isNewCostItemSubmitted     this isNewCostItemValid


  isNewCostItemValid    boolean
    return this createCostItemForm   isValid


  sum    number
    return sum this costItems  costItem    costItem price   costItem amount


  private createCostItemStruct    CostItemStruct
    return  description      amount  1  price  null


  newCostItemTotal
    return  this newCostItem amount   this newCostItem price     null


import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   WorkFlow   from           shared models work flow model
import   DeclinedOffer   from           shared models work states declined offer model
import   Offer   from           shared models work states offer model
import   TalentOfferDetailComponent   from    talent offer detail component

describe  TalentOfferDetailComponent
  let component  TalentOfferDetailComponent
  let offerService  any
  let alertService  any
  let router  any
  const route    any   snapshot   params   id  4

  beforeEach
    offerService   jasmine createSpyObj  offerService     allTalentOffersForWork    declineOffer
    alertService   jasmine createSpyObj  alertService     success
    router   jasmine createSpyObj  router     navigate
    component   new TalentOfferDetailComponent offerService  route  alertService  router


  describe  openCollapsible
    it  sets offerFormCollapsed to false
      component offerFormCollapsed   true
      component openCollapsible
      expect component offerFormCollapsed  toEqual false



  describe  showOffer
    it  assigns the offer if it is not null
      const offer   new Offer
      component offerFormCollapsed   false
      component showOffer offer
      expect component offer  toEqual offer
      expect component offerFormCollapsed  toEqual true


    it  assigns not the offer if it is null
      component offer   new Offer
      component offerFormCollapsed   false
      component showOffer null
      expect component offer  not toBeNull
      expect component offerFormCollapsed  toEqual true


    it  updates the workflow latest type if workflow is given
      const offer   new Offer
      component workFlow   new WorkFlow
      component showOffer offer
      expect component workFlow offer  toEqual offer
      expect component workFlow latestType  toEqual  offer



  describe  ngOnInit
    it  assigns the offer of the workflow if a workflow is given
      const offer   new Offer
      component workFlow    any   offer
      component ngOnInit
      expect component offer  toEqual offer
      expect offerService allTalentOffersForWork  not toHaveBeenCalled


    it  assigns the offer of the workflow if a workflow is given
      const offer   new Offer
      offerService allTalentOffersForWork and returnValue Observable of  offer
      component ngOnInit
      expect component offer  toEqual offer
      expect offerService allTalentOffersForWork  toHaveBeenCalledWith 4



  describe  declineOffer
    let declinedOffer  DeclinedOffer

    beforeEach
      component offer    any   id  3
      declinedOffer   new DeclinedOffer
      offerService declineOffer and returnValue Observable of declinedOffer


    it  declines offer and creates an alert if it is successful
      router  url       public works 4
      component declineOffer  some reason
      expect offerService declineOffer  toHaveBeenCalledWith 3   some reason
      expect alertService success  toHaveBeenCalledWith I18n t talentOfferDetail offerDeletedSuccessful
      expect router navigate  not toHaveBeenCalled
      expect component offer  toEqual null


    it  routes to the dashboard if is dashboard detail view
      router  url       workflows 4
      component declineOffer  some reason
      expect router navigate  toHaveBeenCalledWith    dashboard



import   Component  Input  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   OfferService   from           services offer service
import   WorkFlow   from           shared models work flow model
import   Offer   from           shared models work states offer model
import   WorkDescription   from           shared models work states work description model

 Component
  selector   my talent offer detail
  templateUrl   talent offer detail component html
  styleUrls             shared collapsible collapsible component scss

export class TalentOfferDetailComponent implements OnInit
  i18n   I18n
   Input   workFlow  WorkFlow
   Input   workDescription  WorkDescription
  offer  Offer
  offerFormCollapsed   true

  constructor private offerService  OfferService  private route  ActivatedRoute
              private alertService  AlertService  private router  Router

  ngOnInit
    if  this workFlow
      this offer   this workFlow offer
      else
         TODO  improve handling of multiple offers and archived ones
      this offerService allTalentOffersForWork this route snapshot params  id    subscribe offers
        this offer   offers filter offer     offer archivedAt  0




  openCollapsible
    this offerFormCollapsed   false
    window scrollTo 0  0


  private closeCollapsible
    this offerFormCollapsed   true
    window scrollTo 0  0


  showOffer offer  Offer   null
    if  offer
      this offer   offer
      if  this workFlow
        this workFlow latestType    offer
        this workFlow offer   offer


    this closeCollapsible


  declineOffer reason  string
    this offerService declineOffer this offer id  reason  subscribe  declinedOffer
      this alertService success I18n t talentOfferDetail offerDeletedSuccessful
      if  this isPublicDetailView
        this offer   null
        else
        this router navigate    dashboard




  private isPublicDetailView    boolean
    return this router url includes  public works


import   FormBuilder   from   angular forms
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   Offer   from           shared models work states offer model
import   TalentOfferEditComponent   from    talent offer edit component

describe  TalentOfferEditComponent
  let component  TalentOfferEditComponent
  let offerService  any
  let alertService  any
  const formBuilder   new FormBuilder
  const offerFormBuilder   new TalentOfferFormBuilderService formBuilder
  const formHelper    any   setAsTouched

  beforeEach
    offerService   jasmine createSpyObj  offerService     update
    alertService   jasmine createSpyObj  alertService     success    danger
    component   new TalentOfferEditComponent alertService  offerService  formHelper  offerFormBuilder
    component offer   new Offer


  describe  ngOnInit
    it  builds an offerFormGroup
      const spy   spyOn offerFormBuilder   buildForm
      component ngOnInit
      expect spy  toHaveBeenCalled



  describe  isFormValid
    it  returns true if everything is ok
      component offerFormGroup    any    valid  true
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component offerFormGroup    any    valid  false
      expect component isFormValid    toBe false



  describe  submitOffer
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn formHelper   setAsTouched
      spyOn component onFormCallback   emit
      component offer id   5


    describe  successful
      beforeEach
        offerService update and returnValue Observable of  id  5
        component submitOffer


      it  submits the workDescriptionForm to the Service
        expect offerService update  toHaveBeenCalledWith component offerForm  5


      it  shows an alert success message
        expect alertService success  toHaveBeenCalledWith I18n t talentOfferEdit success


      it  emits the new offer
        expect component onFormCallback emit  toHaveBeenCalledWith  id  5



    describe  unsuccessful
      beforeEach
        offerService update and returnValue Observable throw null
        component submitOffer


      it  submits the workDescriptionForm to the Service
        expect offerService update  toHaveBeenCalledWith component offerFormGroup  5


      it  shows an alert danger message
        expect alertService danger  toHaveBeenCalledWith I18n t talentOfferEdit error


      it  does not emit the new value
        expect component onFormCallback emit  not toHaveBeenCalled




  describe  cancel
    it  calls the emitter with null
      spyOn component onFormCallback   emit
      component cancel
      expect component onFormCallback emit  toHaveBeenCalledWith null



import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   FormGroup   from   angular forms
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   OfferService   from           services offer service
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   FormBase   from           shared form base form base
import   OfferForm   from           shared models offer form model
import   Offer   from           shared models work states offer model
import   FormHelper   from           utils form helper

 Component
  selector   my talent offer edit
  templateUrl   talent offer edit component html
  styleUrls    talent offer edit component scss

export class TalentOfferEditComponent extends FormBase implements OnInit
   Input   offer  Offer
   Output   onFormCallback   new EventEmitter Offer
  i18n   I18n
  offerForm  OfferForm
  offerFormGroup  FormGroup
  formSent   false

  constructor private alertService  AlertService  private offerService  OfferService
              private formHelper  FormHelper
              private offerFormBuilder  TalentOfferFormBuilderService
    super


  ngOnInit
    this offerForm   new OfferForm this offer
    this offerFormGroup   this offerFormBuilder buildForm this offerForm  true


  submitOffer
    this formHelper setAsTouched this offerFormGroup
    this submitted   true
    if   this isFormValid      return
    this formSent   true
    this offerService update this offerFormGroup  this offer id  subscribe offer    this onSuccess offer         this onError


  private onSuccess offer  Offer
    this alertService success I18n t talentOfferEdit success
    this formSent   false
    this onFormCallback emit offer


  private onError
    this alertService danger I18n t talentOfferEdit error
    this formSent   false


  cancel
    this onFormCallback emit null


  isFormValid    boolean
    return this offerFormGroup valid


import   FormBuilder  FormGroup   from   angular forms
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   WorkDescription   from           shared models work states work description model
import   TalentOfferNewComponent   from    talent offer new component

describe  TalentOfferNewComponent
  let component  TalentOfferNewComponent
  let offerService  any
  let alertService  any
  let talentRegistrationService  any
  const router  any    navigateByUrl            navigate            url    test
  const formBuilder   new FormBuilder
  const formBuilderService   new TalentOfferFormBuilderService formBuilder
  const formHelper    any   setAsTouched
  let googleAnalytics  any

  beforeEach
    offerService   jasmine createSpyObj  offerService     create
    alertService   jasmine createSpyObj  alertService     success    danger
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     ensureTalent
    googleAnalytics   jasmine createSpyObj GoogleAnalyticsEventsService   googleAnalyticsService     emitEvent

    component   new TalentOfferNewComponent alertService  offerService  formHelper
      router  talentRegistrationService  googleAnalytics  formBuilderService


  describe  ngOnInit
    beforeEach
      component workDescription   new WorkDescription
      component workDescription questions


    it  builds the form
      expect component offerFormGroup  toBeUndefined
      component ngOnInit
      expect component offerFormGroup  toEqual jasmine any FormGroup


    it  builds a form with agbs not accepted
      component ngOnInit
      expect component offerFormGroup value agb  toBe false



  describe  isFormValid
    beforeEach
      component offerFormGroup    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if offerForm is not valid
      component offerFormGroup    any   valid  false
      expect component isFormValid    toBe false



  describe  submitOffer
    beforeEach
      spyOn component onFormCallback   emit
      component workDescription    any   id  5


    describe  when form is valid
      beforeEach
        spyOn component   isFormValid   and returnValue true


      it  calls the talent registration service
        component submitOffer
        expect talentRegistrationService ensureTalent  toHaveBeenCalled



    describe  when form is invalid
      beforeEach
        spyOn component   isFormValid   and returnValue false


      it  does not call the talent registration service
        component submitOffer
        expect talentRegistrationService ensureTalent  not toHaveBeenCalled




  describe  createOffer
    beforeEach
      spyOn component onFormCallback   emit
      component workDescription    any   id  5  questions
      component ngOnInit


    describe  successful
      const offer    id  3  workFlow   id  4

      beforeEach
        offerService create and returnValue Observable of offer


      it  submits the workDescriptionForm to the Service
        component createOffer
        expect offerService create  toHaveBeenCalledWith component offerFormGroup  5


      it  shows an alert success message
        component createOffer
        expect alertService success  toHaveBeenCalledWith I18n t talentOfferNew submitSuccess


      it  emits the new offer
        component createOffer
        expect component onFormCallback emit  toHaveBeenCalledWith offer


      it  calls the GoogleAnalyticsEventsService
        component createOffer
        expect googleAnalytics emitEvent  toHaveBeenCalledWith  Offer    tendered


      it  routes to the dashboard view if current url is not offer overview
        spyOn router   navigate
        component createOffer
        expect router navigate  toHaveBeenCalledWith   outlets   primary    workflows   offer workFlow id   offers    auth  null


      it  does not route if current url is offer overview
        spyOn router   navigate
        router url     public works 45 offers
        component createOffer
        expect router navigate  not toHaveBeenCalled



    describe  unsuccessful
      beforeEach
        offerService create and returnValue Observable throw null
        spyOn router   navigateByUrl
        component goBackUrl    test
        component createOffer


      it  submits the workDescriptionForm to the Service
        expect offerService create  toHaveBeenCalledWith component offerFormGroup  5


      it  shows an alert danger message
        expect alertService danger  toHaveBeenCalledWith I18n t talentOfferNew submitError


      it  does not emit the new value
        expect component onFormCallback emit  not toHaveBeenCalled


      it  routes to the offer overview
        expect router navigateByUrl  toHaveBeenCalledWith  test




import   Component  EventEmitter  Input  OnInit  Output   from   angular core
import   FormGroup   from   angular forms
import   Router   from   angular router
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   GoogleAnalyticsEventsService   from           services google analytics events service
import   OfferService   from           services offer service
import   TalentOfferFormBuilderService   from           services talent offer form builder service talent offer form builder service
import   TalentRegistrationService   from           services talent registration service
import   FormBase   from           shared form base form base
import   OfferForm   from           shared models offer form model
import   Offer   from           shared models work states offer model
import   WorkDescription   from           shared models work states work description model
import   FormHelper   from           utils form helper

 Component
  selector   my talent offer new
  templateUrl   talent offer new component html

export class TalentOfferNewComponent extends FormBase implements OnInit
   Input   workDescription  WorkDescription
   Output   onFormCallback   new EventEmitter Offer
  i18n   I18n
  offerForm  OfferForm   new OfferForm
  offerFormGroup  FormGroup
  formSent   false
  goBackUrl  string

  constructor private alertService  AlertService  private offerService  OfferService
              private formHelper  FormHelper  private router  Router
              private talentRegistrationService  TalentRegistrationService
              private googleAnalyticsEventsService  GoogleAnalyticsEventsService
              private formBuilderService  TalentOfferFormBuilderService
    super


  ngOnInit
    this offerForm questions   this workDescription questions
    this offerFormGroup   this formBuilderService buildForm this offerForm  false


  submitOffer
    this formHelper setAsTouched this offerFormGroup
    this submitted   true
    if   this isFormValid      return
    this goBackUrl   this router url
    this talentRegistrationService ensureTalent       this createOffer     this goBackUrl


  createOffer
    this formSent   true
    this offerService create this offerFormGroup  this workDescription id  subscribe offer    this onSuccess offer         this onError


  navigateToOfferOverview
    void this router navigateByUrl this goBackUrl


  private onSuccess offer  Offer
    this alertService success I18n t talentOfferNew submitSuccess
    if  this comesFromTalentRegistration
      void this router navigate   outlets   primary    workflows   offer workFlow id   offers    auth  null

    this googleAnalyticsEventsService emitEvent  Offer    tendered
    this onFormCallback emit offer


  private comesFromTalentRegistration    boolean
    return  this router url includes  public works


  private onError
    this alertService danger I18n t talentOfferNew submitError
    this formSent   false
    this navigateToOfferOverview


  isFormValid
    return this offerFormGroup valid


export interface CostItemStruct
  description  string
  price  number   null
  amount  number   null

import   FormBuilder   from   angular forms
import   Observable   from  rxjs Observable
import   TalentOfferFormBuilderService   from        services talent offer form builder service talent offer form builder service
import   OfferForm   from        shared models offer form model
import   PossibleTime   from        shared models possible time model
import   Offer   from        shared models work states offer model
import   WorkDescription   from        shared models work states work description model
import   OfferFormComponent   from    offer form component

describe  OfferFormComponent
  let costService  any
  let formHelper  any
  let component  OfferFormComponent
  const possibleTime   new PossibleTime new Date  2016 12 01T11 28 58 000Z
  const offerFormBuilderService   new TalentOfferFormBuilderService new FormBuilder
  const offerForm   new OfferForm new Offer

  const buildOfferFormGroup
    return offerFormBuilderService buildForm offerForm  true


  const formGroup   buildOfferFormGroup

  beforeEach
    costService   jasmine createSpyObj  costService     calculateCost
    formHelper   jasmine createSpyObj  formHelper     showError
    component   new OfferFormComponent costService  formHelper
    component workDescription   new WorkDescription
    component offerForm   new OfferForm
    component offerFormGroup   formGroup


  describe  ngOnInit
    beforeEach
      component workDescription possibleTimes


    describe  preselect possible times in case of only one
      beforeEach
        component offerFormGroup   buildOfferFormGroup


      it  preselects the possible times  if only one suggestion
        component workDescription possibleTimes    possibleTime
        component ngOnInit
        expect component offerFormGroup value chosenTimes  toEqual  possibleTime serialize


      it  does not preselect the possible times  if multiple suggestions
        component workDescription possibleTimes    possibleTime  possibleTime
        component ngOnInit
        expect component offerFormGroup value chosenTimes  toEqual



    describe  disabling the workplace form control
      beforeEach
        component offerFormGroup    any   controls   workPlace   disable
        spyOn component offerFormGroup controls workPlace   disable


      it  disables the form control if workplace is given
        component workDescription workPlace    any   some   workplace
        component ngOnInit
        expect component offerFormGroup controls workPlace disable  toHaveBeenCalled


      it  does not disable the form control if workplace is not given
        component ngOnInit
        expect component offerFormGroup controls workPlace disable  not toHaveBeenCalled




  describe  setPossibleTimes
    const selectedPossibleTimes
        from   2016 12 01T11 28 58 000Z
        from   2016 12 02T11 28 58 000Z


    const possibleTimes   selectedPossibleTimes map    from       new PossibleTime new Date from

    beforeEach
      component setPossibleTimes possibleTimes


    it  sets the possible times by the given output of the emitter
      expect component offerFormGroup value chosenTimes  toEqual selectedPossibleTimes
      component setPossibleTimes
      expect component offerFormGroup value chosenTimes  toEqual



  describe  showAddressError
    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component offerFormGroup controls workPlace



  describe  showTimeAlert
    it  returns true if it is submitted and has no chosen times
      component submitted   true
      component offerFormGroup patchValue
        chosenTimes

      expect component showTimeAlert    toBe true


    it  return false if not submitted
      component submitted   false
      component offerFormGroup patchValue
        chosenTimes

      expect component showTimeAlert    toBe false


    it  returns false if has chosen times
      component submitted   true
      component offerFormGroup patchValue
        chosenTimes    any   some   time

      expect component showTimeAlert    toBe false



  describe  preventSendingForm
    it  removes given Talent from selectedTalents list  if it is part of it
      const event    KeyboardEvent   srcElement   localName   input    preventDefault
      spyOn event   preventDefault
      component preventSendingForm event
      expect event preventDefault  toHaveBeenCalled


    it  adds given Talent to selectedTalents list  if it is not part of it yet
      const event    KeyboardEvent   srcElement   localName   textarea    preventDefault
      spyOn event   preventDefault
      component preventSendingForm event
      expect event preventDefault  not toHaveBeenCalled


    it  handles also the case that scrElement is called target
      const event    any   target   localName   input    preventDefault
      spyOn event   preventDefault
      component preventSendingForm event
      expect event preventDefault  toHaveBeenCalled



  describe  calculateCost
    describe  when costForm is invalid
      beforeEach
        spyOn component offerFormGroup   get   and returnValue  any   valid  false


      it  does not call the service
        component calculateCost
        expect costService calculateCost  not toHaveBeenCalled


      it  marks cost as invalid
        component calculateCost
        expect component offerForm costForm validatedByServer  toBe false



    describe  when costForm is valid
      beforeEach
        spyOn component offerFormGroup   get   and returnValue  any   valid  true


      it  calls the service
        costService calculateCost and returnValue Observable of  validatedByServer  true
        component calculateCost
        expect costService calculateCost  toHaveBeenCalledWith component offerFormGroup get  cost


      describe  when cost service call is unsuccessful
        beforeEach
          costService calculateCost and returnValue Observable throw null


        it  marks cost as invalid
          component calculateCost
          expect costService calculateCost  toHaveBeenCalledWith component offerFormGroup get  cost
          expect component offerForm costForm validatedByServer  toBe false





import   Component  Input  OnInit   from   angular core
import   FormGroup   from   angular forms
import   I18n   from        i18n i18n
import   CostService   from        services cost service
import   OfferForm   from        shared models offer form model
import   PossibleTime   from        shared models possible time model
import   WorkDescription   from        shared models work states work description model
import   FormHelper   from        utils form helper

 Component
  selector   my offer form
  templateUrl   offer form component html

export class OfferFormComponent implements OnInit
   Input   offerFormGroup  FormGroup
   Input   offerForm  OfferForm
   Input   workDescription  WorkDescription
   Input   submitted   false
  i18n   I18n

  constructor private costService  CostService  private formHelper  FormHelper

  ngOnInit
    if  this workDescription possibleTimes length     1
      this preselectPossibleTimes

    if  this workDescription workPlace
      this offerFormGroup controls workPlace disable



  private preselectPossibleTimes
    this setPossibleTimes this workDescription possibleTimes


  setPossibleTimes possibleTimes  PossibleTime
    const chosenTimes   possibleTimes map possibleTime    possibleTime serialize

    this offerFormGroup patchValue   chosenTimes


  showAddressError
    return this formHelper showError this offerFormGroup controls workPlace


  preventSendingForm event  KeyboardEvent
    const target    any  event target    event srcElement
    if  target localName      textarea
      event preventDefault



  showTimeAlert    boolean
    return this submitted    this offerFormGroup get  chosenTimes   invalid


  calculateCost
    if  this offerFormGroup get  cost   valid
      this costService calculateCost  FormGroup  this offerFormGroup get  cost    subscribe cost
        this offerForm costForm cost   cost
        this offerForm costForm validatedByServer   true
               this offerForm costForm validatedByServer   false
      else
      this offerForm costForm validatedByServer   false



import   Component   from   angular core
import   I18n   from        i18n i18n

 Component
  templateUrl   talent onboarding show component html
  styleUrls    talent onboarding show component scss

export class TalentOnboardingShowComponent
  i18n   I18n

import   Component  OnInit   from   angular core
import   I18n   from           i18n i18n
import   BankAccountForm   from           payment bank accounts bank account form model
import   UserSessionService   from           services user session service

 Component
  selector   my talent bank account edit
  templateUrl   talent profile bank account edit component html

export class TalentProfileBankAccountEditComponent implements OnInit
  i18n   I18n
  bankAccountForm  BankAccountForm   new BankAccountForm

  constructor private userSessionService  UserSessionService

  ngOnInit
    this userSessionService currentTalent   first   subscribe talent
      this bankAccountForm iban   talent iban
      this bankAccountForm name   talent accountHolderName



import   FormBuilder  FormGroup   from   angular forms
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   I18n   from           i18n i18n
import   Talent   from           models talent model
import   TalentProfileEditComponent   from    talent profile edit component

describe  TalentProfileEditComponent
  let talentService  any
  let alertService  any
  let userSessionService  any
  let userService  any
  let component  TalentProfileEditComponent
  const formBuilder   new FormBuilder
  const formHelper    any   setAsTouched
  const numberFormatter    any   mobileNumberPattern

  beforeEach
    talentService   jasmine createSpyObj  talentService     update
    alertService   jasmine createSpyObj  alertService     success    danger
    userSessionService   jasmine createSpyObj  userSessionService     currentTalent
    userService   jasmine createSpyObj  userService     update
    component   new TalentProfileEditComponent talentService  alertService  formBuilder  formHelper  numberFormatter  userSessionService
      userService


  describe  isFormValid
    beforeEach
      component talent   new Talent
      component talent profilePictureUrl     this url
      component talentEditForm    any   valid  true


    it  returns true if everything is ok
      expect component isFormValid    toBe true


    it  returns false if form is invalid
      component talentEditForm    any   valid  false
      expect component isFormValid    toBe false


    it  returns false if profile picture is missing
      component talent profilePictureUrl   undefined
      expect component isFormValid    toBe false



  describe  initialVatRateInPercentage
    beforeEach
      component talent   new Talent


    it  returns the talent vat rate if present
      component talent vatRate   0 1
      expect component initialVatRateInPercentage    toEqual 10


    it  returns the default vat rate if talent has none set
      expect component initialVatRateInPercentage    toEqual 7 7



  describe  ngOnInit
    beforeEach
      const talent   new Talent
      talent user    any   id  3  firstName   Hans   lastName   Muster
      talent qualification    any   isProfessional  true
      userSessionService currentTalent and returnValue Observable of talent


    it  builds the form
      expect component talentEditForm  toBeUndefined
      component ngOnInit
      expect component talentEditForm  toEqual jasmine any FormGroup



  describe  submit
    beforeEach
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeFormWithTalent
      spyOn component   submitUser
      spyOn formHelper   setAsTouched
      component talent   new Talent


    describe  successful
      beforeEach
        talentService update and returnValue Observable of new Talent
        component submit


      it  calls update on talentService
        expect talentService update  toHaveBeenCalled


      it  shows success alert
        expect alertService success  toHaveBeenCalledWith I18n t talentProfileEdit updateSuccessful


      it  marks all elements as touched
        expect formHelper setAsTouched  toHaveBeenCalled



    describe  unsuccessful
      it  shows danger alert
        talentService update and returnValue Observable throw null
        component submit
        expect alertService danger  toHaveBeenCalledWith I18n t talentProfileEdit error




  describe  submitUser
    beforeEach
      const user    any   firstName   Hans   lastName   Muster
      component talentEditForm    any   value   user
      component user   user


    it  does nothing if the user properties did not change
      component submitUser
      expect userService update  not toHaveBeenCalled


    it  updates the user if it changed
      userService update and returnValue Observable of null
      component user    any   firstName   Max   lastName   Muster
      component submitUser
      expect userService update  toHaveBeenCalledWith component user



import   Component  OnInit   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   AlertService   from           alerts alerts service
import   I18n   from           i18n i18n
import   TalentQualification   from           models
import   Talent   from           models talent model
import   User   from           models user model
import   TalentService   from           services talent service
import   UserService   from           services user service
import   UserSessionService   from           services user session service
import   FormBase   from           shared form base form base
import   FormHelper   from           utils form helper
import   MyValidators   from           utils my validators
import   PhoneNumberFormatterService   from           utils phone number formatter service

 Component
  selector   my talent profile edit
  templateUrl   talent profile edit component html
  styleUrls    talent profile edit component scss

export class TalentProfileEditComponent extends FormBase implements OnInit
  i18n   I18n
  talent  Talent
  talentEditForm  FormGroup
  formSent   false
  user  User

  constructor private talentService  TalentService  private alertService  AlertService
              private formBuilder  FormBuilder  private formHelper  FormHelper
              private mobileNumberFormatter  PhoneNumberFormatterService
              private userSessionService  UserSessionService  private userService  UserService    super

  ngOnInit
    this userSessionService currentTalent   first   subscribe talent
      this talent   talent
      this user   talent user

    this buildForm


  private buildForm
    this talentEditForm   this formBuilder group
      serviceDescription  new FormControl this talent serviceDescription   MyValidators present
      about  new FormControl this talent about   MyValidators present
      mobileNumber  new FormControl this talent mobileNumber
         Validators required  Validators pattern this mobileNumberFormatter mobileNumberPattern
      address  new FormControl this talent address   Validators required  MyValidators address
      vatRateInPercentage  new FormControl this initialVatRateInPercentage     Validators required  MyValidators range 0  100
      vatNumber  new FormControl this talent vatNumber   MyValidators present
      isProfessional  new FormControl this talent qualification isProfessional
      companyName  new FormControl this talent companyName
      companyUidRegisterNumber  new FormControl this talent companyUidRegisterNumber
      website  new FormControl this talent website
      user  this formBuilder group
        firstName  new FormControl this user firstName   MyValidators present
        lastName  new FormControl this user lastName   MyValidators present


      validator  MyValidators matchCompanyData



  initialVatRateInPercentage
    return this talent vatRate   100    7 7


  submit
    this formHelper setAsTouched this talentEditForm
    this submitted   true
    if   this isFormValid      return
    this submitTalent
    this submitUser


  private submitTalent
    this mergeFormWithTalent
    this formSent   true
    this talentService update this talent  subscribe       this onSuccess          this onError


  mergeFormWithTalent
    Object assign this talent  this talentEditForm value
    this talent user id   this user id
    this talent qualification   new TalentQualification  isProfessional  this talentEditForm value isProfessional
    this talent vatRate   this talentEditForm value vatRateInPercentage   0   this talentEditForm value vatRateInPercentage   100   0


  submitUser
    const userForm   this talentEditForm value user
    if  userForm firstName     this user firstName    userForm lastName     this user lastName
      Object assign this user  userForm
      this userService update this user  subscribe



  isFormValid
    return this talentEditForm valid      this talent profilePictureUrl


  private onSuccess
    this alertService success this i18n t talentProfileEdit updateSuccessful
    this formSent   false
    window scrollTo 0  0


  private onError
    this alertService danger this i18n t talentProfileEdit error
    this formSent   false
    window scrollTo 0  0


export   from    shared personal information talent profile personal information edit component
export   from    shared qualifications talent profile qualifications edit component
export   from    registration current step talent profile current step component
import  rxjs add observable of
import  rxjs add observable throw
import   Observable   from  rxjs Observable
import   TalentProfileCurrentStepComponent   from    talent profile current step component

describe  TalentProfileCurrentStepComponent
  let component  TalentProfileCurrentStepComponent
  let activatedRoute  any

  beforeEach
    activatedRoute    params  Observable of  step   3
    component   new TalentProfileCurrentStepComponent activatedRoute


  describe  ngOnInit
    it  reads the current step of the url
      expect component currentStep  toBeUndefined
      component ngOnInit
      expect component currentStep  toBe 3



  describe  isCurrentStep
    beforeEach
      component currentStep   2


    it  returns true if step is currentStep
      expect component isCurrentStep 2   toEqual true


    it  returns false if step is not currentStep
      expect component isCurrentStep 1   toEqual false



  describe  previousStepLink
    it  returns undefined if currentStep is 1
      component currentStep   1
      expect component previousStepLink    toBeUndefined


    it  returns the link for step 1 if currentStep is 2
      component currentStep   2
      expect component previousStepLink    toEqual   talent registration 1



import   Component  HostListener  OnDestroy  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from              i18n i18n

 Component
  templateUrl   talent profile current step component html
  styleUrls    talent profile current step component scss

export class TalentProfileCurrentStepComponent implements OnInit  OnDestroy
   HostListener  window beforeunload      event
  preventFromUnload  event  BeforeUnloadEvent
     event returnValue   this i18n t talentProfileCurrentStep beforeUnloadAlert


  currentStep  number
  paramsSub  any
  i18n   I18n

  constructor private activatedRoute  ActivatedRoute

  ngOnInit
    this paramsSub   this activatedRoute params subscribe params    this currentStep   parseInt params  step    10


  ngOnDestroy
    this paramsSub unsubscribe


  isCurrentStep step  number   boolean
    return this currentStep     step


  previousStepLink
    if  this currentStep     1
      return undefined

    return   talent registration      this currentStep   1


import   FormBuilder  FormGroup   from   angular forms
import   TalentRegistrationService   from              services talent registration service
import   PhoneNumberFormatterService   from              utils phone number formatter service
import   TalentProfilePersonalInformationComponent   from    talent profile personal information component

describe  TalentProfilePersonalInformationComponent
  const formBuilder   new FormBuilder
  let formHelper  any
  let component  TalentProfilePersonalInformationComponent

  let router  any
  const talentRegistrationService   new TalentRegistrationService null  null  null
  const phoneNumberFormatter   new PhoneNumberFormatterService

  beforeEach
    router   jasmine createSpyObj  router     navigate
    formHelper   jasmine createSpyObj  formHelper     setAsTouched    showError

    component   new TalentProfilePersonalInformationComponent formBuilder  formHelper  talentRegistrationService  router
      phoneNumberFormatter


  describe  profilePicture
    beforeEach
      component profilePicture    any   setDisplayedPicture            setPlaceholder


    describe  addProfilePicture
      it  sets the uploaded image to the profile picture of the talent
        expect component talent profilePictureUrl  toBeUndefined
        component addProfilePicture  path to uploadedImg
        expect component talent profilePictureUrl  toEqual  path to uploadedImg


      it  calls setDisplayedPicture on profilePictureComponent
        spyOn component profilePicture   setDisplayedPicture
        component addProfilePicture  path to uploadedImg
        expect component profilePicture setDisplayedPicture  toHaveBeenCalledWith  path to uploadedImg




  describe  isFormValid
    beforeEach
      component personalInfoForm    any   valid  true
      component talent    any   profilePictureUrl    url to my picture


    it  is valid if everything is set
      expect component isFormValid    toBe true


    it  is invalid if the form is invalid
      component personalInfoForm    any   valid  false
      expect component isFormValid    toBe false


    it  is invalid if no image was uploaded
      component talent    any
      expect component isFormValid    toBe false



  describe  submit
    it  navigates to the next registration step if form is valid
      spyOn component   isFormValid   and returnValue true
      spyOn component   mergeFormWithTalent
      component submit
      expect router navigate  toHaveBeenCalledWith    talent registration 2
      expect component mergeFormWithTalent  toHaveBeenCalled


    it  doesnt navigates when form is invalid
      spyOn component   isFormValid   and returnValue false
      component submit
      expect router navigate  not toHaveBeenCalled



  describe  ngOnInit
    it  builds the form
      expect component personalInfoForm  toBeUndefined
      component ngOnInit
      expect component personalInfoForm  toEqual jasmine any FormGroup



  describe  formatPhoneNumber
    beforeEach
      component ngOnInit


    it  calls the format function of the formatter and assigns the returned value
      const spy   spyOn phoneNumberFormatter   format   and returnValue  123
      component personalInfoForm controls mobileNumber setValue  333
      component formatPhoneNumber
      expect component personalInfoForm value mobileNumber  toEqual  123
      expect spy  toHaveBeenCalled



  describe  showAddressError
    beforeEach
      component ngOnInit


    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component personalInfoForm controls address



  describe  showMissingCompanyDataError
    let errorSpy  any

    beforeEach
      errorSpy   jasmine createSpy  errorSpy
      component personalInfoForm    any   hasError  errorSpy


    describe  if form is not submitted
      beforeEach
        component submitted   false


      it  returns false if company data are missing
        errorSpy and returnValue true
        expect component showMissingCompanyDataError    toBe false


      it  returns false if company data are ok
        errorSpy and returnValue false
        expect component showMissingCompanyDataError    toBe false



    describe  if form is submitted
      beforeEach
        component submitted   true


      it  returns true if company data are missing
        errorSpy and returnValue true
        expect component showMissingCompanyDataError    toBe true
        expect errorSpy  toHaveBeenCalledWith  missingCompanyData


      it  returns false if company data are ok
        errorSpy and returnValue false
        expect component showMissingCompanyDataError    toBe false
        expect errorSpy  toHaveBeenCalledWith  missingCompanyData




  describe  cancelRegistration
    beforeEach
      spyOn talentRegistrationService   cancelRegistrationWithRedirect


    it  cancels the registration if confirm dialog was accepted
      spyOn window   confirm   and returnValue true
      component cancelRegistration
      expect talentRegistrationService cancelRegistrationWithRedirect  toHaveBeenCalled
      expect window confirm  toHaveBeenCalled


    it  does not cancel the registration if confirm dialog was rejected
      spyOn window   confirm   and returnValue false
      component cancelRegistration
      expect talentRegistrationService cancelRegistrationWithRedirect  not toHaveBeenCalled
      expect window confirm  toHaveBeenCalled



import   Component  OnInit  ViewChild   from   angular core
import   FormBuilder  FormControl  FormGroup  Validators   from   angular forms
import   Router   from   angular router
import   I18n   from              i18n i18n
import   TalentQualification   from              models
import   Talent   from              models talent model
import   ProfilePictureComponent   from              profile picture profile picture component
import   DropzoneOptions   from              renuo uploads dropzone options model
import   TalentRegistrationService   from              services talent registration service
import   FormBase   from              shared form base form base
import   FormHelper   from              utils form helper
import   MyValidators   from              utils my validators
import   PhoneNumberFormatterService   from              utils phone number formatter service

 Component
  selector   my personal information
  templateUrl   talent profile personal information component html

export class TalentProfilePersonalInformationComponent extends FormBase implements OnInit
  talent  Talent
   ViewChild ProfilePictureComponent  profilePicture  ProfilePictureComponent
  i18n   I18n
  personalInfoForm  FormGroup
  dropzoneOptions  DropzoneOptions   new DropzoneOptions
    acceptedFiles   image
    maxFilesize  10     MB
    previewTemplate    div class  dz error message   span data dz errormessage   span   div
    dictDefaultMessage    div class  btn btn secondary btn sm btn block btn white
         i class  lw lw  orange lw change    i  nbsp   this i18n t talentProfilePersonalInfo uploadProfilePicture   div


  constructor private formBuilder  FormBuilder  private formHelper  FormHelper
              public talentRegistrationService  TalentRegistrationService  private router  Router
              private phoneNumberFormatter  PhoneNumberFormatterService
    super
    this talent   this talentRegistrationService talentForm


  ngOnInit
    this buildForm
    window scrollTo 0  0


  private buildForm
    this personalInfoForm   this formBuilder group
      serviceDescription  new FormControl this talent serviceDescription   MyValidators present
      about  new FormControl this talent about   MyValidators present
      mobileNumber  new FormControl this talent mobileNumber
         Validators required  Validators pattern this phoneNumberFormatter mobileNumberPattern
      address  new FormControl this talent address   Validators required  MyValidators address
      isProfessional  new FormControl this talent qualification isProfessional
      companyName  new FormControl this talent companyName
      companyUidRegisterNumber  new FormControl this talent companyUidRegisterNumber
      website  new FormControl this talent website
      user  this formBuilder group
        firstName  new FormControl this talentRegistrationService talentForm user firstName   MyValidators present
        lastName  new FormControl this talentRegistrationService talentForm user lastName   MyValidators present


      validator  MyValidators matchCompanyData




  addProfilePicture fileUrl  string
    this talent profilePictureUrl   fileUrl
    this profilePicture setDisplayedPicture fileUrl


  submit
    this formHelper setAsTouched this personalInfoForm
    this submitted   true
    if   this isFormValid      return
    this mergeFormWithTalent
    this router navigate    talent registration 2


  mergeFormWithTalent
    Object assign this talent  this personalInfoForm value
    this talent qualification   new TalentQualification  isProfessional  this personalInfoForm value isProfessional
    this talentRegistrationService talentForm   this talent


  isFormValid    boolean
    return this personalInfoForm valid      this talent profilePictureUrl


  formatPhoneNumber
    const mobileNumber   this phoneNumberFormatter format this personalInfoForm value mobileNumber
    this personalInfoForm controls mobileNumber setValue mobileNumber


  showAddressError
    return this formHelper showError this personalInfoForm controls address


  showMissingCompanyDataError
    return this submitted    this personalInfoForm hasError  missingCompanyData


  cancelRegistration
    if  window confirm I18n t talentRegistration leaveRegistrationConfirmation
      this talentRegistrationService cancelRegistrationWithRedirect



import   Observable   from  rxjs Observable
import   I18n   from              i18n i18n
import   TalentProfileQualificationsComponent   from    talent profile qualifications component

describe  TalentProfileQualificationsComponent
  let component  TalentProfileQualificationsComponent
  let talentService  any
  let talentRegistrationService  any
  let alertService  any
  let roleStorageService  any

  beforeEach
    talentService   jasmine createSpyObj  talentService     create
    talentRegistrationService   jasmine createSpyObj  talentRegistrationService     buildingTalentWithUserId
    alertService   jasmine createSpyObj  alertService     success    danger
    roleStorageService   jasmine createSpyObj  roleService     setRoleToTalent
    component   new TalentProfileQualificationsComponent talentRegistrationService  talentService  alertService
      roleStorageService


  describe  submit
    describe  onRegisteredSuccessful
      beforeEach
        talentService create and returnValue Observable of null


      it  sets formSent to true
        expect component formSent  toEqual false
        component submit
        expect component formSent  toEqual true


      it  calls the alertService
        component submit
        expect alertService success  toHaveBeenCalledWith I18n t talentProfileQualification createSuccess


      it  calls the roleStorageService
        component submit
        expect roleStorageService setRoleToTalent  toHaveBeenCalled



    describe  onError
      beforeEach
        talentService create and returnValue Observable throw null


      it  resets the formSent flag
        component submit
        expect component formSent  toEqual false


      it  calls the alertService
        component submit
        expect alertService danger  toHaveBeenCalledWith I18n t talentProfileQualification createError




import   Component   from   angular core
import   AlertService   from              alerts alerts service
import   I18n   from              i18n i18n
import   RoleStorageService   from              services role storage service
import   TalentRegistrationService   from              services talent registration service
import   TalentService   from              services talent service

 Component
  selector   my qualifications
  templateUrl   talent profile qualifications component html

export class TalentProfileQualificationsComponent
  i18n   I18n
  formSent   false

  constructor public talentRegistrationService  TalentRegistrationService
              private talentService  TalentService  private alertService  AlertService
              private roleStorageService  RoleStorageService
    window scrollTo 0  0


  submit
    this formSent   true
    this talentService create this talentRegistrationService buildingTalentWithUserId    subscribe
            this onRegisteredSuccessful
            this onError



  private onRegisteredSuccessful
    this alertService success this i18n t talentProfileQualification createSuccess
    this roleStorageService setRoleToTalent


  private onError
    this formSent   false
    this alertService danger this i18n t talentProfileQualification createError


import   FormBuilder  FormControl   from   angular forms
import   Talent   from              models talent model
import   TalentProfileMiscEditComponent   from    talent profile misc edit component

describe  TalentProfileMiscEditComponent
  const formatter  any    format
  let formHelper  any
  let component  TalentProfileMiscEditComponent

  beforeEach
    formHelper   jasmine createSpyObj  formHelper     showError
    component   new TalentProfileMiscEditComponent formatter  formHelper
    component miscForm   new FormBuilder   group
      mobileNumber  new FormControl
      address  new FormControl undefined
      vatRateInPercentage  new FormControl 8
      vatNumber  new FormControl



  it  has attribute talent
    expect component talent  toEqual undefined


  describe  toggleTax
    function createTalent isLiableToVat  boolean
      const talent   new Talent
      talent isLiableToVat   isLiableToVat
      return talent


    it  sets talent isLiableToVat to true if it is falsey
      component talent   createTalent false
      component toggleTax
      expect component talent isLiableToVat  toEqual true
      expect component miscForm controls vatRateInPercentage disabled  toEqual false
      expect component miscForm controls vatNumber disabled  toEqual false


    it  sets talent isLiableToVat to false if it is truthy
      component talent   createTalent true
      component toggleTax
      expect component talent isLiableToVat  toEqual false
      expect component miscForm controls vatRateInPercentage disabled  toEqual true
      expect component miscForm controls vatNumber disabled  toEqual true



  describe  formatPhoneNumber
    it  calls the format function of the formatter and assigns the returned value
      const spy   spyOn formatter   format   and returnValue  123
      component miscForm controls mobileNumber setValue  333
      component formatPhoneNumber
      expect component miscForm value mobileNumber  toEqual  123
      expect spy  toHaveBeenCalled



  describe  showAddressError
    it  calls the formHelper showError method and returns the result
      formHelper showError and returnValue true
      expect component showAddressError    toBe true
      formHelper showError and returnValue false
      expect component showAddressError    toBe false
      expect formHelper showError  toHaveBeenCalledWith component miscForm controls address



  describe  ngOnInit
    beforeEach
      component talent   new Talent


    it  sets the talents liable to vat to false if talent has no vat number
      component ngOnInit
      expect component talent isLiableToVat  toBe false


    it  sets the talents liable to vat to true if talent has a vat number
      component talent vatNumber    100
      component ngOnInit
      expect component talent isLiableToVat  toBe true



import   Component  Input  OnInit   from   angular core
import   FormGroup   from   angular forms
import   I18n   from              i18n i18n
import   Talent   from              models talent model
import   FormHelper   from              utils form helper
import   PhoneNumberFormatterService   from              utils phone number formatter service

 Component
  selector   my misc edit
  templateUrl   talent profile misc edit component html
  styleUrls    talent profile misc edit component scss

export class TalentProfileMiscEditComponent implements OnInit
   Input   talent  Talent
   Input   miscForm  FormGroup

  i18n   I18n
  vatRateInPercentage  number   this defaultVatRateInPercentage

  constructor private phoneNumberFormatter  PhoneNumberFormatterService
              private formHelper  FormHelper

  ngOnInit
    if  this talent vatNumber
      this setTaxTo true
      else
      this setTaxTo false



  toggleTax
    this setTaxTo  this talent isLiableToVat


  private setTaxTo isLiableToVat  boolean
    this talent isLiableToVat   isLiableToVat
    if  isLiableToVat
      this miscForm controls vatRateInPercentage enable
      this miscForm controls vatNumber enable
      else
      this miscForm controls vatRateInPercentage disable
      this miscForm controls vatNumber disable



  private defaultVatRateInPercentage
    return this defaultVatRate     100


  formatPhoneNumber
    const mobileNumber   this phoneNumberFormatter format this miscForm value mobileNumber
    this miscForm controls mobileNumber setValue mobileNumber


  private defaultVatRate
    return 0 077


  showAddressError
    return this formHelper showError this miscForm controls address


import   TalentVisibility   from              models talent visibility model
import   Talent   from              models talent model
import   TalentProfilePersonalInformationEditComponent   from    talent profile personal information edit component

describe  TalentProfilePersonalInformationEditComponent
  let component  TalentProfilePersonalInformationEditComponent

  beforeEach
    component   new TalentProfilePersonalInformationEditComponent
    component talent   new Talent


  describe  profilePicture
    beforeEach
      component profilePicture    any   setDisplayedPicture            setPlaceholder


    describe  addProfilePicture
      it  sets the uploaded image to the profile picture of the talent
        expect component talent profilePictureUrl  toBeUndefined
        component addProfilePicture  path to uploadedImg
        expect component talent profilePictureUrl  toEqual  path to uploadedImg


      it  calls setDisplayedPicture on profilePictureComponent
        spyOn component profilePicture   setDisplayedPicture
        component addProfilePicture  path to uploadedImg
        expect component profilePicture setDisplayedPicture  toHaveBeenCalledWith  path to uploadedImg




  describe  toggleVisibility
    it  sets talent visibility to given visibility
      const givenVisibility   new TalentVisibility  isHidden  true
      component talent visibility   new TalentVisibility  isHidden  false
      component toggleVisibility givenVisibility isHidden
      expect component talent visibility  toEqual givenVisibility



  describe  showMissingCompanyDataError
    let errorSpy  any

    beforeEach
      errorSpy   jasmine createSpy  errorSpy
      component personalForm    any   dirty  false  hasError  errorSpy


    describe  if form is not dirty
      it  returns false if company data are missing
        errorSpy and returnValue true
        expect component showMissingCompanyDataError    toBe false


      it  returns false if company data are ok
        errorSpy and returnValue false
        expect component showMissingCompanyDataError    toBe false



    describe  if form is dirty
      beforeEach
        component personalForm    any   dirty  true  hasError  errorSpy


      it  returns true if company data are missing
        errorSpy and returnValue true
        expect component showMissingCompanyDataError    toBe true
        expect errorSpy  toHaveBeenCalledWith  missingCompanyData


      it  returns false if company data are ok
        errorSpy and returnValue false
        expect component showMissingCompanyDataError    toBe false
        expect errorSpy  toHaveBeenCalledWith  missingCompanyData




import   Component  Input  ViewChild   from   angular core
import   FormGroup   from   angular forms
import   I18n   from              i18n i18n
import   TalentVisibility   from              models talent visibility model
import   Talent   from              models talent model
import   ProfilePictureComponent   from              profile picture profile picture component
import   DropzoneOptions   from              renuo uploads dropzone options model

 Component
  selector   my personal information edit
  templateUrl   talent profile personal information edit component html

export class TalentProfilePersonalInformationEditComponent
   Input   talent  Talent
   Input   personalForm  FormGroup
   ViewChild ProfilePictureComponent  profilePicture  ProfilePictureComponent
  i18n   I18n
  dropzoneOptions  DropzoneOptions   new DropzoneOptions
    acceptedFiles   image
    maxFilesize  10     MB
    previewTemplate    div class  dz error message   span data dz errormessage   span   div
    dictDefaultMessage    div class  btn btn secondary btn sm btn block btn white
         i class  lw lw  orange lw change    i  nbsp   this i18n t talentProfilePersonalInfo editProfilePicture   div


  addProfilePicture fileUrl  string
    this talent profilePictureUrl   fileUrl
    this profilePicture setDisplayedPicture fileUrl


  toggleVisibility isHidden  boolean
    this talent visibility   new TalentVisibility  isHidden


  showMissingCompanyDataError
    return this personalForm dirty    this personalForm hasError  missingCompanyData


import   Component  Input   from   angular core
import   I18n   from              i18n i18n
import   Talent   from              models talent model

 Component
  selector   my qualifications edit
  templateUrl   talent profile qualifications edit component html
  styleUrls    talent profile qualifications edit component scss

export class TalentProfileQualificationsEditComponent
   Input   talent  Talent

  i18n   I18n

import   Talent   from           models talent model
import   CreateWorkService   from           services create work service
import   TalentProfileShowComponent   from    talent profile show component

describe  TalentProfileShowComponent
  let component  TalentProfileShowComponent
  let createWorkService  any
  let router  any

  beforeEach
    router   jasmine createSpyObj  router     navigate
    createWorkService   new CreateWorkService
    component   new TalentProfileShowComponent createWorkService  router


  describe  inviteTalent
    it  assigns the talent to the workDescriptionForm of the createWorkService and routes to works new
      component talent   new Talent
      component inviteTalent
      expect createWorkService workDescriptionForm talents  toEqual  component talent
      expect router navigate  toHaveBeenCalledWith    works new



import   Component  Input   from   angular core
import   Router   from   angular router
import   I18n   from           i18n i18n
import   Talent   from           models talent model
import   CreateWorkService   from           services create work service

 Component
  selector   my talent profile show
  templateUrl   talent profile show component html
  styleUrls             shared talent info box talent info box component scss    talent profile show component scss

export class TalentProfileShowComponent
   Input   talent  Talent
  i18n   I18n

  constructor private createWorkService  CreateWorkService  private router  Router

  inviteTalent
    this createWorkService workDescriptionForm talents    this talent
    this router navigate    works new


import   Component  Input   from   angular core
import   I18n   from           i18n i18n
import   TalentRating   from           models talent rating model

 Component
  selector   my talent rating list
  styleUrls    talent rating list component scss
  templateUrl   talent rating list component html

export class TalentRatingListComponent
   Input   talentRatings  TalentRating
  i18n   I18n

import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   TalentReceiptComponent   from     talent receipt component

 Component
  templateUrl   talent receipt customer component html
  styleUrls             shared receipt receipt shared styles scss

export class TalentReceiptCustomerComponent extends TalentReceiptComponent
  constructor protected route  ActivatedRoute
    super route


import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   TalentReceiptComponent   from     talent receipt component

 Component
  templateUrl   talent receipt lawoon component html
  styleUrls             shared receipt receipt shared styles scss

export class TalentReceiptLawoonComponent extends TalentReceiptComponent
  constructor protected route  ActivatedRoute
    super route


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Paginated   from        api api types
import   Receipt   from        shared models work states receipt
import   TalentReceiptListComponent   from    talent receipt list component

describe  TalentReceiptListComponent
  let component  TalentReceiptListComponent
  let receiptService  any
  let route  any    queryParams
  let router  any
  const mockedResponse  Paginated Receipt
    data   new Receipt
    meta
      currentPage  1
      nextPage  1
      prevPage  1
      totalCount  3
      totalPages  1



  beforeEach
    receiptService   jasmine createSpyObj  receiptService     allForTalent
    router   jasmine createSpyObj  router     navigate
    route    queryParams
    component   new TalentReceiptListComponent receiptService  route  router


  describe  ngOnInit
    beforeEach
      spyOn component   getWorks


    it  sets the page to the query param if given
      route queryParams   Observable of  page  2
      component ngOnInit
      expect component page  toEqual 2
      expect component getWorks  toHaveBeenCalled


    it  sets the page to 1 if the query param is undefined
      route queryParams   Observable of
      component ngOnInit
      expect component page  toEqual 1
      expect component getWorks  toHaveBeenCalled



  describe  getWorks
    beforeEach
      receiptService allForTalent and returnValue Observable of mockedResponse
      component page   2
      component getWorks


    it  sets receipts
      expect component receipts  toEqual mockedResponse data


    it  sets totalCount
      expect component totalCount  toEqual mockedResponse meta totalCount


    it  uses the allForTalent method of receiptService for getting data
      expect receiptService allForTalent  toHaveBeenCalledWith 2



  describe  updateQueryParams
    it  serializes the page and calls the navigate function correctly
      component page   2
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  2
        relativeTo  route



    it  sets page to null if they are of default value
      component page   1
      component updateQueryParams
      expect router navigate  toHaveBeenCalledWith
        queryParams   page  null
        relativeTo  route




  describe  pageChanged
    it  scrolls to the top
      spyOn window   scrollTo
      component pageChanged
      expect window scrollTo  toHaveBeenCalledWith 0  0



import   Component  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   Paginated   from        api api types
import   I18n   from        i18n i18n
import   ReceiptService   from        services receipt service
import   Receipt   from        shared models work states receipt
import   PaginatedArchiveBase   from        shared paginated archive paginated archive base

 Component
  selector   my talent receipt list
  templateUrl   talent receipt list component html

export class TalentReceiptListComponent extends PaginatedArchiveBase implements OnInit
  receipts  Receipt
  i18n   I18n

  constructor private receiptService  ReceiptService  protected route  ActivatedRoute  protected router  Router
    super route  router


  getWorks
    this receiptService allForTalent this page  subscribe jsonapiData    this onReceiptsFetched jsonapiData


  private onReceiptsFetched jsonapiData  Paginated Receipt
    this totalCount   jsonapiData meta totalCount
    this receipts   jsonapiData data


import   ActivatedRoute   from   angular router
import   Receipt   from        shared models work states receipt
import   ReceiptBaseComponent   from        shared receipt receipt base component

export abstract class TalentReceiptComponent extends ReceiptBaseComponent
  receipt  Receipt

  constructor protected route  ActivatedRoute
    super
    this route data subscribe data    this receipt   data  receipt


  print
    window print


import   NgModule   from   angular core
import   RouterModule   from   angular router
import   AuthGuardService   from     services auth guard service
import   ReceiptDetailResolver   from     services receipt detail resolver service
import   WorkFlowDetailResolver   from     services talent dashboard resolvers work flow detail resolver
import   TalentGuardService   from     services talent guard service
import   TalentOnboardingShowComponent   from    onboarding talent onboarding show component
import   TalentReceiptCustomerComponent   from    receipt talent receipt customer talent receipt customer component
import   TalentReceiptLawoonComponent   from    receipt talent receipt lawoon talent receipt lawoon component
import   TalentWorkFlowDetailComponent   from    work flow detail talent work flow detail component

 NgModule
  imports
    RouterModule forChild
        These are the new routes  to be completed as you work with it

        path   workflows   canActivate   AuthGuardService  TalentGuardService
        children
           path      redirectTo    dashboard   pathMatch   full

            path    id
            resolve   workFlow  WorkFlowDetailResolver
            children
               path      redirectTo   overview   pathMatch   full
               path    tab   component  TalentWorkFlowDetailComponent



        These are the deprecated routes

        path   talent   canActivate   AuthGuardService  TalentGuardService
        children
           path   onboarding   component  TalentOnboardingShowComponent

            path   works
            children
               path      redirectTo    dashboard   pathMatch   full

                path   receipts
                children
                    TODO  move rename this routes

                    path   bill customer  id
                    component  TalentReceiptCustomerComponent
                    resolve   receipt  ReceiptDetailResolver


                    path   bill lawoon  id
                    component  TalentReceiptLawoonComponent
                    resolve   receipt  ReceiptDetailResolver








  exports   RouterModule

export class TalentRoutingModule

import   NgModule   from   angular core
import   FormsModule  ReactiveFormsModule   from   angular forms
import   BrowserModule   from   angular platform browser
import   NgxErrorsModule   from   ultimate ngxerrors
import   PaginationModule   from  ng2 bootstrap pagination
import   AddressSelectorModule   from     address selector address selector module
import   ApiModule   from     api api module
import   AuthenticationModule   from     authentication authentication module
import   ChatModule   from     chat chat module
import   PaymentModule   from     payment payment module
import   PublicBrowseModule   from     public browse public browse module
import   PublicWorkDetailResolver   from     public browse public work public work detail resolver
import   ReceiptDetailResolver   from     services receipt detail resolver service
import   WorkFlowDetailResolver   from     services talent dashboard resolvers work flow detail resolver
import   TalentOfferFormBuilderService   from     services talent offer form builder service talent offer form builder service
import   TalentRegistrationService   from     services talent registration service
import   CustomFormElementModule   from     shared custom form element module
import   TalentCustomerSharedModule   from     shared talent customer shared module
import   TalentBillDetailComponent   from    bill detail talent bill detail component
import   TalentBillEditComponent   from    bill edit talent bill edit component
import   TalentContractDetailComponent   from    contracts talent contract detail component
import   TalentOfferNewComponent   from    offer new talent offer new component
import   TalentOnboardingShowComponent   from    onboarding talent onboarding show component
import   TalentProfileCurrentStepComponent   from    profile registration current step talent profile current step component
import   TalentProfilePersonalInformationComponent   from    profile registration step 1 talent profile personal information component
import   TalentProfileQualificationsComponent   from    profile registration step 2 talent profile qualifications component
import   TalentReceiptCustomerComponent   from    receipt talent receipt customer talent receipt customer component
import   TalentReceiptLawoonComponent   from    receipt talent receipt lawoon talent receipt lawoon component
import   TalentRoutingModule   from    talent routing module
import   TalentArchivedWorkFlowDetailComponent   from    work flow detail archived work flow detail component
import   TalentWorkFlowDetailComponent   from    work flow detail talent work flow detail component
import   WorkFlowDetailComponent   from    work flow detail work flow detail component

 NgModule
  imports
    AddressSelectorModule
    BrowserModule
    ChatModule
    FormsModule
    ReactiveFormsModule
    TalentRoutingModule
    PaginationModule forRoot
    ApiModule
    AuthenticationModule
    CustomFormElementModule
    PublicBrowseModule
    NgxErrorsModule
    PaymentModule
    TalentCustomerSharedModule

  declarations
    TalentArchivedWorkFlowDetailComponent
    TalentBillDetailComponent
    TalentBillEditComponent
    TalentContractDetailComponent
    TalentOnboardingShowComponent
    TalentProfileCurrentStepComponent
    TalentProfilePersonalInformationComponent
    TalentProfileQualificationsComponent
    TalentReceiptCustomerComponent
    TalentReceiptLawoonComponent
    TalentWorkFlowDetailComponent
    WorkFlowDetailComponent

  exports
    TalentOfferNewComponent

  providers
    PublicWorkDetailResolver
    ReceiptDetailResolver
    TalentRegistrationService
    WorkFlowDetailResolver
    TalentOfferFormBuilderService


export class TalentModule

import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   TalentArchivedWorkFlowDetailComponent   from    archived work flow detail component

describe  TalentArchivedWorkFlowDetailComponent
  let component  TalentArchivedWorkFlowDetailComponent
  let router  any
  const workFlow    any   workFlow   workDescription  null
  const activatedRoute    any   params  Observable of  tab   overview

  beforeEach
    router   jasmine createSpyObj  router     navigate
    component   new TalentArchivedWorkFlowDetailComponent activatedRoute  router
    component workFlow   workFlow


  describe  workPlace
    const workPlace1   new Geolocation  zip   8000   city   ZÃ¼rich
    const workPlace2   new Geolocation  zip   7000   city   Chur

    beforeEach
      component workDescription    any   status   offering   workPlace  workPlace1


    it  returns the work place of the work description if work flow has no contract
      component workFlow    any   offer   workPlace  workPlace2
      expect component workPlace    toEqual workPlace1


    it  returns the work place of the contract if workflow has a contract
      component workFlow    any   offer   workPlace  workPlace2   contract   some   contract
      expect component workPlace    toEqual workPlace2



  describe  dates
    const dates1    new PossibleTime new Date 2007  10  1
    const dates2    new PossibleTime new Date 2007  10  2

    beforeEach
      component workDescription    any   possibleTimes  dates1


    it  returns the possible time of the work description if work flow has no contract
      component workFlow    any   contract  null
      expect component dates    toEqual dates1


    it  returns the chose time of the contract if workflow has a contract
      component workFlow    any   contract   chosenTime  dates2
      expect component dates    toEqual dates2



  describe  hasContract
    it  returns true if workflow has a contract
      component workFlow    any   contract   some   contract
      expect component hasContract    toBe true


    it  returns false if workflow has no contract
      component workFlow    any   contract  undefined
      expect component hasContract    toBe false



import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   TabItem   from           shared models tab item model
import   WorkFlowDetailBase   from    work flow detail base

 Component
  selector   my archived work flow detail
  templateUrl   archived work flow detail component html

export class TalentArchivedWorkFlowDetailComponent extends WorkFlowDetailBase implements OnInit  OnDestroy

  constructor protected route  ActivatedRoute  protected router  Router
    super route  router


  buildTabItems
    this tabItems    new TabItem this i18n t tabSubnavbar overview   overview
    if  this workFlow latestType      declinedInvitation
      this tabItems push new TabItem this i18n t tabSubnavbar yourOffer   offers

    if  this workFlow latestType      receipt     this tabItems push new TabItem this i18n t tabSubnavbar bill   bill


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   WorkFlow   from           shared models work flow model
import   WorkFlowStatus   from           shared models work flow types
import   TalentWorkFlowDetailComponent   from    talent work flow detail component

describe  TalentWorkFlowDetailComponent
  let component  TalentWorkFlowDetailComponent
  const workFlow   new WorkFlow
  const activatedRoute    any   data  Observable of workFlow

  beforeEach
    component   new TalentWorkFlowDetailComponent activatedRoute


  describe  isArchived
    beforeEach
      component workFlow    any   latestType   Offer


      declinedInvitation    declinedOffer    receipt   forEach  status  WorkFlowStatus
      it  returns true if status is   status
        component workFlow latestType   status
        expect component isArchived    toBe true



      workInvitation    offer    contract    bill   forEach  status  WorkFlowStatus
      it  returns false if status is   status
        component workFlow latestType   status
        expect component isArchived    toBe false




import   Component   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from           i18n i18n
import   WorkFlow   from           shared models work flow model

 Component
  templateUrl   talent work flow detail component html

export class TalentWorkFlowDetailComponent
  i18n   I18n
  workFlow  WorkFlow

  constructor private route  ActivatedRoute
    this route data subscribe data    this workFlow   data  workFlow


  isArchived    boolean
    return   declinedInvitation    declinedOffer    receipt   includes this workFlow latestType


import   Input  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Params  Router   from   angular router
import   Subscription   from  rxjs Subscription
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   TabItem   from           shared models tab item model
import   WorkFlow   from           shared models work flow model
import   WorkDescription   from           shared models work states work description model

export abstract class WorkFlowDetailBase implements OnInit  OnDestroy
   Input   workFlow  WorkFlow
  i18n   I18n
  workDescription  WorkDescription
  tab   offers     overview     bill
  paramsSub  Subscription
  tabItems  TabItem
  private langSub  Subscription

  constructor protected route  ActivatedRoute  protected router  Router

  ngOnInit
    this workDescription   this workFlow workDescription
    this langSub   this i18n getLang   subscribe       this buildTabItems
    this paramsSub   this route params subscribe params    this paramsChanged params


  abstract buildTabItems    void

  private paramsChanged params  Params
    this tab   params  tab
    if   this tabItems some tabItem    tabItem link     this tab
      this router navigate   404



  ngOnDestroy
    this paramsSub unsubscribe
    this langSub unsubscribe


  workPlace    Geolocation
    return this hasContract     this workFlow offer workPlace   this workDescription workPlace


  dates    PossibleTime
    return this hasContract     this workFlow contract chosenTime   this workDescription possibleTimes


  hasContract    boolean
    return   this workFlow contract


import  rxjs add observable of
import   Observable   from  rxjs Observable
import   Geolocation   from           models geolocation model
import   PossibleTime   from           shared models possible time model
import   WorkFlowDetailComponent   from    work flow detail component

describe  WorkFlowDetailComponent
  let component  WorkFlowDetailComponent
  let workService  any
  let router  any
  const workFlow    any   workFlow   workDescription  null
  const activatedRoute    any   params  Observable of  tab   overview

  beforeEach
    workService   jasmine createSpyObj  workService     deleteWorkInvitation
    router   jasmine createSpyObj  router     navigate
    component   new WorkFlowDetailComponent activatedRoute  router  workService
    component workFlow   workFlow


  describe  workPlace
    const workPlace1   new Geolocation  zip   8000   city   ZÃ¼rich
    const workPlace2   new Geolocation  zip   7000   city   Chur

    beforeEach
      component workDescription    any   status   offering   workPlace  workPlace1


    it  returns the work place of the work description if work flow has no contract
      component workFlow    any   offer   workPlace  workPlace2
      expect component workPlace    toEqual workPlace1


    it  returns the work place of the contract if workflow has a contract
      component workFlow    any   offer   workPlace  workPlace2   contract   some   contract
      expect component workPlace    toEqual workPlace2



  describe  dates
    const dates1    new PossibleTime new Date 2007  10  1
    const dates2    new PossibleTime new Date 2007  10  2

    beforeEach
      component workDescription    any   possibleTimes  dates1


    it  returns the possible time of the work description if work flow has no contract
      component workFlow    any   contract  null
      expect component dates    toEqual dates1


    it  returns the chose time of the contract if workflow has a contract
      component workFlow    any   contract   chosenTime  dates2
      expect component dates    toEqual dates2



  describe  hasContract
    it  returns true if workflow has a contract
      component workFlow    any   contract   some   contract
      expect component hasContract    toBe true


    it  returns false if workflow has no contract
      component workFlow    any   contract  undefined
      expect component hasContract    toBe false



  describe  deleteInvitation
    describe  if user cancels confirmation
      beforeEach
        spyOn window   confirm   and returnValue false


      it  does nothing
        component deleteInvitation
        expect workService deleteWorkInvitation  not toHaveBeenCalled



    describe  if user accepts confirmation
      const workInvitation    any   workDescription   id  3

      beforeEach
        spyOn window   confirm   and returnValue true
        workService deleteWorkInvitation and returnValue Observable of
        component workFlow    any   workInvitation


      it  calls the service
        component deleteInvitation
        expect workService deleteWorkInvitation  toHaveBeenCalledWith workInvitation


      it  routes to the dashboard
        component deleteInvitation
        expect router navigate  toHaveBeenCalledWith    dashboard




import   Component  OnDestroy  OnInit   from   angular core
import   ActivatedRoute  Router   from   angular router
import   I18n   from           i18n i18n
import   WorkService   from           services work service
import   TabItem   from           shared models tab item model
import   WorkFlowDetailBase   from    work flow detail base

 Component
  selector   my work flow detail
  templateUrl   work flow detail component html

export class WorkFlowDetailComponent extends WorkFlowDetailBase implements OnInit  OnDestroy
  constructor protected route  ActivatedRoute  protected router  Router  private workService  WorkService
    super route  router


  buildTabItems
    this tabItems
      new TabItem this i18n t tabSubnavbar overview   overview
      new TabItem this i18n t tabSubnavbar yourOffer   offers

    if  this isStatusToWriteOrShowBill
      this tabItems push new TabItem this i18n t tabSubnavbar bill   bill



  private isStatusToWriteOrShowBill
    return   contractDone    bill    receipt   includes this workFlow getStatus


  deleteInvitation
    if  confirm I18n t talentWorkDetail deleteInvitationConfirmation
      this workService deleteWorkInvitation this workFlow workInvitation  subscribe
        this router navigate    dashboard




import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   Contract   from           shared models contract model
import   PossibleTime   from           shared models possible time model
import   WorkFlow   from           shared models work flow model
import   TalentWorkFlowsListComponent   from    talent work flow list component

describe  TalentWorkFlowsListComponent
  let component  TalentWorkFlowsListComponent

  beforeEach
    component   new TalentWorkFlowsListComponent  any   snapshot   data   workFlows


  describe  ngOnInit
    it  sorts workflows with actions first
      const workFlowWait    latestType   workInvitation
      const workFlowAction    latestType   contract
      const workFlowAction2    latestType   offer
      component workFlows    any   workFlowWait  workFlowAction  workFlowAction2
      component ngOnInit
      component workFlows    any   workFlowAction  workFlowAction2  workFlowWait



  describe  status text
    let contract  any
    let workFlow  any

    beforeEach
      contract   new Contract
      workFlow   new WorkFlow
      contract chosenTime
      workFlow contract   contract


    it  returns text  that offer needs to be created
      workFlow latestType    workInvitation
      expect component statusText workFlow   toBe I18n t talentDashboard workFlowStatus workInvitation


    it  returns text  that has been canceled
      workFlow latestType    offer
      expect component statusText workFlow   toBe I18n t talentDashboard workFlowStatus offer


    it  returns text  that work has to be completed
      const tomorrow   new Date
      tomorrow setDate new Date   getDate     1
      contract chosenTime    new PossibleTime tomorrow
      workFlow latestType    contract
      expect component statusText workFlow
         toBe I18n t talentDashboard workFlowStatus contract


    it  returns text  that work is passed and is now waiting for bill
      const yesterday   new Date
      yesterday setDate new Date   getDate     1
      contract chosenTime    new PossibleTime yesterday
      workFlow latestType    contract
      expect component statusText workFlow   toBe I18n t talentDashboard workFlowStatus contractDone


    it  returns text  that bill has to be paid
      workFlow latestType    bill
      expect component statusText workFlow   toBe I18n t talentDashboard workFlowStatus bill


    it  returns text  that rating has to be done
      workFlow latestType    receipt
      expect component statusText workFlow   toBe I18n t talentDashboard workFlowStatus receipt



  describe  status color
    describe  returns call to action color
      it  returns action if is invitation
        expect component statusLabel  workInvitation    toBe  action


      it  returns action if talent has to do work or write bill
        expect component statusLabel  contract    toBe  action



    describe  returns waiting color
      it  returns wait if is offering
        expect component statusLabel  offer    toBe  wait


      it  returns wait if invitation was declined
        expect component statusLabel  declinedInvitation    toBe  wait


      it  returns wait if offer was declineded
        expect component statusLabel  declinedOffer    toBe  wait


      it  returns wait if customer has to pay the bill
        expect component statusLabel  bill    toBe  wait


      it  returns wait if work has been done
        expect component statusLabel  receipt    toBe  wait




  describe  hasWorkFlows
    it  returns false  if pendingWorks is empty
      expect component hasWorkFlows    toBe false


    it  returns false  if pendingWorks is not empty
      component   new TalentWorkFlowsListComponent  any   snapshot   data   workFlows   new WorkFlow    new WorkFlow
      expect component hasWorkFlows    toBe true



  describe  preselectTab
    let workFlow  any

    beforeEach
      workFlow    latestType   offer   getStatus         offer


    it  returns offers if in offering status
      expect component preselectTab workFlow   toEqual  offers


    it  returns bill if in payment status
      workFlow latestType    bill
      expect component preselectTab workFlow   toEqual  bill


    it  returns overview by default
      workFlow latestType    contract
      expect component preselectTab workFlow   toEqual  overview



  describe  workPlace
    let workFlow  any
    const geolocation   new Geolocation

    it  returns offers workplace if workflow has an offer
      workFlow    offer   workPlace  geolocation
      expect component workPlace workFlow   toEqual geolocation


    it  returns workDescription workplace if workflow has no offer
      workFlow    workDescription   workPlace  geolocation
      expect component workPlace workFlow   toEqual geolocation


    it  returns undefined if workflow has no offer and workdescription has no workplace
      workFlow    workDescription
      expect component workPlace workFlow   toBeUndefined



import   Component  OnInit   from   angular core
import   ActivatedRoute   from   angular router
import   I18n   from           i18n i18n
import   Geolocation   from           models geolocation model
import   WorkFlow   from           shared models work flow model
import   WorkFlowStatus   from           shared models work flow types

 Component
  selector   my talent dashboard
  templateUrl   talent work flow list component html
  styleUrls    talent work flow list component scss

export class TalentWorkFlowsListComponent implements OnInit
  i18n   I18n
  workFlows  WorkFlow

  constructor private route  ActivatedRoute
    this workFlows   this route snapshot data  workFlows


  ngOnInit
    this sortByStatusLabel


  private sortByStatusLabel
    this workFlows sort  a  b
      const statusA   this statusLabel a latestType
      const statusB   this statusLabel b latestType
      if  statusA     statusB    return 0
      if  statusA      action     statusB      wait     return  1
      return 1



  statusText workFlow  WorkFlow   string
    return this i18n t talentDashboard workFlowStatus workFlow getStatus


  statusLabel workStatus  WorkFlowStatus
    return
      workInvitation   action
      offer   wait
      declinedInvitation   wait
      declinedOffer   wait
      contract   action
      bill   wait
      receipt   wait
      workStatus


  hasWorkFlows    boolean
    return this workFlows    this workFlows length   0


  preselectTab workFlow  WorkFlow   string
    if  workFlow latestType      bill     workFlow getStatus        contractDone     return  bill
    if  workFlow latestType      offer     return  offers
    return  overview


  workPlace workFlow  WorkFlow   Geolocation   undefined
    return  workFlow offer   workFlow offer workPlace   workFlow workDescription workPlace


import   CentConvertPipe   from    cent convert pipe

describe  CentConvertPipe
  const pipe  CentConvertPipe   new CentConvertPipe

  it  transforms  1900  to  19
    expect pipe transform 1900   toEqual 19


  it  transforms  1900 00001  to  19
    expect pipe transform 1900 00001   toEqual 19


  it  transforms  1899 99999  to  19
    expect pipe transform 1899 99999   toEqual 19


  it  transforms  1920  to  19 2
    expect pipe transform 1920   toEqual 19 2


  it  transforms  1920 001  to  19 2
    expect pipe transform 1920 001   toEqual 19 2


import   Pipe  PipeTransform   from   angular core

   Converts a number in cents to the next bigger unit
   Usage
     value   myCentConvert
   Example
       1920   myCentConvert
     formats to  19 2

 Pipe  name   myCentConvert
export class CentConvertPipe implements PipeTransform
  transform value  number   number
    return Math round value    100


import   CompanyUidRegisterNumberValidator   from    company uid register number validator

describe  CompanyUidRegisterNumberValidator
  const validationErros
    companyUidRegisterNumber
      valid  false



  describe  validate
    describe  is valid
      it  is valid if modulo11 of product sum has no remainder
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 105 409 360     toBeNull


      it  is valid if check digit is valid
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 109 456 306     toBeNull
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 409 950 039     toBeNull



    describe  is invalid
      it  is invalid if the format is wrong
        expect CompanyUidRegisterNumberValidator validate  any   value        toEqual validationErros
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 409 950 0     toEqual validationErros


      it  is invalid if the checksum would be 10
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 409 950 0     toEqual validationErros


      it  is invalid if check digit is wrong of the UID is given
        expect CompanyUidRegisterNumberValidator validate  any   value   CHE 109 456 305     toEqual validationErros




import   AbstractControl  ValidationErrors   from   angular forms

export class CompanyUidRegisterNumberValidator
  private static MULTIPLICATOR    5  4  3  2  7  6  5  4

  static validate c  AbstractControl   ValidationErrors   null
    return CompanyUidRegisterNumberValidator isValidCompanyUidRegisterNumber c value    null
      companyUidRegisterNumber   valid  false



  private static checkFormat uid  string
    return   CHE  0 9  3    0 9  3    0 9  3    test uid


  private static isValidCompanyUidRegisterNumber uid  string
    return CompanyUidRegisterNumberValidator checkFormat uid     CompanyUidRegisterNumberValidator isCheckDigitValid uid


  private static isCheckDigitValid uid  string
    return CompanyUidRegisterNumberValidator checkDigit uid      parseInt uid 14   10


  private static checkDigit uid  string
    const remainder   CompanyUidRegisterNumberValidator productSum uid    11
    return remainder     0   0    11   remainder


  private static productSum uid  string
    const digits   uid substr 4  3    uid substr 8  3    uid substr 12  2
    return  0  1  2  3  4  5  6  7  reduce
       total   currentValue  position
        total    parseInt digits position   10    CompanyUidRegisterNumberValidator MULTIPLICATOR position    0


import   CurrencyConverterPipe   from    currency converter pipe

describe  CurrencyConverterPipe
  const pipe  CurrencyConverterPipe   new CurrencyConverterPipe  de CH

  it  transforms  1900  to  CHF 19 00
    expect pipe transform 1900   chf    toEqual  CHF 19 00


  it  transforms  1900 00001  to  CHF 19 00
    expect pipe transform 1900 00001   chf    toEqual  CHF 19 00


  it  transforms  1899 99999  to  EUR 19 00
    expect pipe transform 1899 99999   eur    toEqual  EUR 19 00


  it  transforms  19 2  to  CHF 19 20  if it not in cent parameter is passed
    expect pipe transform 19 2   chf   false   toEqual  CHF 19 20


import   CurrencyPipe   from   angular common
import   Pipe  PipeTransform   from   angular core

   Converts a number in cents to currency format
   Usage
     value   myCurrencyConverter
   Example
       1920   myCurrencyConverter  CHF
     formats to  CHF19 20

 Pipe  name   myCurrencyConverter
export class CurrencyConverterPipe extends CurrencyPipe implements PipeTransform

  transform value  number  currency  string  inCent  boolean   true   string
    const amount   inCent   Math round value    100   value
       default pipe has a different white space character  therefore the replace
    return super transform amount  currency  true   1 2 2   replace   s


import   Component  OnInit   from   angular core

 Component
  templateUrl   design examples component html

export class DesignExamplesComponent implements OnInit
  ngOnInit
       TODO


import   FormHelper   from    form helper

describe  FormHelper
  let helper  FormHelper

  beforeEach
    helper   new FormHelper


  describe  showError
    it  returns true if control is invalid and touched
      const control    any   valid  false  touched  true
      expect helper showError control   toBe true


    it  returns false if control is invalid and but not touched
      const control    any   valid  false  touched  false
      expect helper showError control   toBe false


    it  returns false if control is valid and touched
      const control    any   valid  true  touched  true
      expect helper showError control   toBe false


    it  returns false if control is undefined
      expect helper showError undefined   toBe false



import   AbstractControl  FormControl  FormGroup   from   angular forms

export class FormHelper


     Sets all FormControls to touched

     This method can be used after submitting to  invalidate  all fields

  setAsTouched group  FormGroup
    group markAsTouched
    Object keys group controls  forEach  key  string
      if  group instanceof FormGroup    group controls key  instanceof FormControl
        group controls key  markAsTouched
        else if  group controls key  instanceof FormGroup
        this setAsTouched  FormGroup  group controls key




  showError formControl  AbstractControl   boolean
    return   formControl     formControl valid    formControl touched


import   sum   from    helpers
import   scrollToFragment   from    helpers

describe  helpers
  describe  sum
    describe  number array
      it  works with an empty array
        expect sum      toEqual 0


      it  works with one element
        expect sum  1    toEqual 1


      it  works with one element
        expect sum  1  10  15  3  7    toEqual 1   10   15   3   7



    describe  object array
      it  works with an empty array
        expect sum     item    item price   toEqual 0


      it  works with one element
        expect sum   price  1    item    item price   toEqual 1


      it  works with one element
        expect sum
            price  1    price  10    price  15    price  3    price  7
          item    item price   toEqual 1   10   15   3   7




  describe  scrollToFragment
    let element  any

    beforeEach
      element   jasmine createSpyObj  element     scrollIntoView
      spyOn document   querySelector   and returnValue element


    it  does nothing if passed string is empty
      scrollToFragment
      expect document querySelector  not toHaveBeenCalled
      expect element scrollIntoView  not toHaveBeenCalled


    it  does nothing if passed string is undefined
      scrollToFragment undefined
      expect document querySelector  not toHaveBeenCalled
      expect element scrollIntoView  not toHaveBeenCalled


    it  does nothing if passed string begins with
      scrollToFragment   asdf
      expect document querySelector  not toHaveBeenCalled
      expect element scrollIntoView  not toHaveBeenCalled


    it  queries selector if string is present and calls scrollIntoView on it
      scrollToFragment  fragment
      expect document querySelector  toHaveBeenCalledWith   fragment
      expect element scrollIntoView  toHaveBeenCalled



export function sum T  items  T    func    t  T     number   number
  if  func     undefined
    return innerSum  number     any  items   el  number     el

  return innerSum items  func


function innerSum T  items  T    func   t  T     number   number
  return items reduce  sum  number  item  T     sum   func item   0


export function scrollToFragment f  string
  if   f    f startsWith         return
  const element   document querySelector       f
  if  element    element scrollIntoView element

export interface Translation
   key  string   string

import   ImageService   from    image service

const service   new ImageService

describe  ImageService
  const imagePath     o lawoon develop vrww cfe3 b977 0eb1 84f4 c15f 83ba 247a 3f1d apple wallpaper cool hd jpg
  const host    renuo upload cdn master renuoapp ch
  const testImageUrl        host   imagePath

  it  returns the resized image
    const resized   service resizeProfileImage testImageUrl
    expect resized  toEqual  https     host  t 200x200 filters round corner 200 255 255 255  u  imagePath


  it  returns a thumbor converted image
    const resized   service thumborImage testImageUrl   my options
    expect resized  toEqual  https     host  t my options u  imagePath


import   Injectable   from   angular core

 Injectable
export class ImageService
  resizeProfileImage imageUrl  string
    return this thumborImage imageUrl   200x200 filters round corner 200 255 255 255


     see https   github com thumbor thumbor wiki Usage for options
  thumborImage imageUrl  string  imageOptions  string
    const index   imageUrl indexOf   o
    const filePath   imageUrl slice index
    const host   imageUrl slice 0  index
    return  https   host  t   imageOptions  u  filePath


import   MinutesToHourMinutesPipe   from    minutes to hour minutes pipe

describe  MinutesToHourMinutesPipe
  const pipe  MinutesToHourMinutesPipe   new MinutesToHourMinutesPipe

  it  transforms  120  to  2 00h
    expect pipe transform 120   toEqual  2 00h


  it  transforms  150  to  2 30h
    expect pipe transform 150   toEqual  2 30h


  it  transforms  30  to  0 30
    expect pipe transform 30   toEqual  0 30h


  it  transforms  645  to  10 45
    expect pipe transform 645   toEqual  10 45h


import   Pipe  PipeTransform   from   angular core


   Converts minutes into hours
   Usage
     value   myMinutesToHourMinutes
   Example
       150   myMinutesToHourMinutes
     formats to  2 30h

 Pipe  name   myMinutesToHourMinutes
export class MinutesToHourMinutesPipe implements PipeTransform
  transform value  number   string
    return    Math floor value   60       0    value   60  slice  2  h


import   CompanyUidRegisterNumberValidator   from    company uid register number validator
import   MyValidators   from    my validators

describe  MyValidators

  function formControlGenerator fields  any
    return  get   control  string     fields control   setErrors


  describe  minValue
    const validateFn   MyValidators minValue 5

    it  is invalid if number is below minValue
      expect validateFn  any   value  4    not toBeNull


    it  is invalid if number is no a number
      expect validateFn  any   value   a     not toBeNull


    it  is valid if number is above minValue
      expect validateFn  any   value  5    toBeNull



  describe  optionalMinValue
    const validateFn   MyValidators optionalMinValue 5
    const expectedError    minValue   valid  false

    it  is invalid if number is below minValue
      expect validateFn  any   value  4    toEqual expectedError


    it  is invalid if number is not a number
      expect validateFn  any   value   a     toEqual expectedError


    it  is valid if number is above minValue
      expect validateFn  any   value  5    toBeNull


    it  is valid if there is no value
      expect validateFn  any   value  undefined    toBeNull



  describe  range
    const validateFn   MyValidators range 5  10

    it  is invalid if number is below minValue
      expect validateFn  any   value  4    not toBeNull


    it  is invalid if number is no a number
      expect validateFn  any   value   a     not toBeNull


    it  is invalid if number is above maxValue
      expect validateFn  any   value  11    not toBeNull


    it  is valid if number is between minValue and maxValue
      expect validateFn  any   value  10    toBeNull
      expect validateFn  any   value  5    toBeNull



  describe  region
    it  is valid if undefined
      expect MyValidators region  any   value  undefined    toBeNull


    it  is valid if geolocation has min attributes
      expect MyValidators region  any   value   hasMinAttributes        true     toBeNull


    it  is invalid if geolocation does not have min attributes
      expect MyValidators region  any   value   hasMinAttributes        false     not toBeNull



  describe  dynamicallyRequired
    describe  when the testing function returns false
      it  is valid
        expect MyValidators dynamicallyRequired       false   any       toBeNull



    describe  when the testing function returns true
      const validatorFunction   MyValidators dynamicallyRequired       true

      it  it requires a value
        expect validatorFunction  any   value  undefined    not toBeNull
        expect validatorFunction  any   value   some value     toBeNull




  describe  address
    it  is valid if undefined
      expect MyValidators address  any   value  undefined    toBeNull


    it  is valid if geolocation has all attributes
      expect MyValidators address  any   value   hasAllAttributes        true     toBeNull


    it  is invalid if geolocation does not have all attributes
      expect MyValidators address  any   value   hasAllAttributes        false     not toBeNull



  describe  matchCompanyData
    let companyUidRegisterNumber  any
    let isProfessional  any
    let formControl  any
    let website  any
    let setErrorSpy  any

    beforeEach
      setErrorSpy   jasmine createSpy  errorSpy
      companyUidRegisterNumber    value      setErrors  setErrorSpy


    describe  if is professional
      beforeEach
        isProfessional    value  true
        website    value


      it  is invalid if whether website nor company uid register number are given
        formControl   formControlGenerator  isProfessional  website  companyUidRegisterNumber
        expect MyValidators matchCompanyData formControl   toEqual  missingCompanyData  true


      it  is valid if only the website is given
        formControl   formControlGenerator  isProfessional  website   value   test    companyUidRegisterNumber
        expect MyValidators matchCompanyData formControl   toEqual null


      describe  if only the company uid register number is given
        beforeEach
          companyUidRegisterNumber    value   mockedPlaceholder   setErrors  setErrorSpy
          formControl   formControlGenerator  isProfessional  website  companyUidRegisterNumber


        it  is valid if the company uid register is valid
          spyOn CompanyUidRegisterNumberValidator   validate   and returnValue null
          expect MyValidators matchCompanyData formControl   toBeNull
          expect setErrorSpy  toHaveBeenCalledWith null
          expect CompanyUidRegisterNumberValidator validate  toHaveBeenCalledWith companyUidRegisterNumber


        it  is invalid if the company uid register is invalid
          spyOn CompanyUidRegisterNumberValidator   validate   and returnValue  companyUidRegisterNumber   valid  false
          expect MyValidators matchCompanyData formControl   toBeNull
          expect setErrorSpy  toHaveBeenCalledWith  companyUidRegisterNumber   valid  false
          expect CompanyUidRegisterNumberValidator validate  toHaveBeenCalledWith companyUidRegisterNumber




    describe  if not professional
      beforeEach
        isProfessional    value  false
        formControl   formControlGenerator  isProfessional  website  companyUidRegisterNumber


      it  is valid
        expect MyValidators matchCompanyData formControl   toBeNull


      it  resets a possible error of the company uid register number
        MyValidators matchCompanyData formControl
        expect setErrorSpy  toHaveBeenCalledWith null




  describe  matchPassword
    let passwordControl  any
    let passwordConfirmationControl  any
    let formControl  any

    beforeEach
      passwordControl    value   test
      passwordConfirmationControl    value   test   setErrors
      formControl   formControlGenerator  password  passwordControl  passwordConfirmation  passwordConfirmationControl


    it  sets errors of passwordConfirmation to null if both are equal
      spyOn passwordConfirmationControl   setErrors
      expect MyValidators matchPassword formControl   toBeNull
      expect passwordConfirmationControl setErrors  toHaveBeenCalledWith null


    it  sets errors of passwordConfirmation if they are not equal
      passwordControl value    wrong
      spyOn passwordConfirmationControl   setErrors
      expect MyValidators matchPassword formControl   toBeNull
      expect passwordConfirmationControl setErrors  toHaveBeenCalledWith  matchPassword  true



  describe  iban
    describe  valid formats
      it  is valid with whitespaces
        expect MyValidators iban  any   value   CH93 0076 2011 6238 5295 7     toBeNull


      it  is valid with dots
        expect MyValidators iban  any   value   CH93 0076 2011 6238 5295 7     toBeNull


      it  is valid with dashes
        expect MyValidators iban  any   value   CH93 0076 2011 6238 5295 7     toBeNull


      it  is valid if includes letters after the first two
        expect MyValidators iban  any   value   CH10 00230 00A109822346     toBeNull



    describe  invalid formats
      it  is invalid when not starts with two letters
        expect MyValidators iban  any   value   C93 0076 2011 6238 5295 7     not toBeNull


      it  is invalid when from iban is not from switzerland
        expect MyValidators iban  any   value   DE44500105175407324931     not toBeNull


      it  is invalid when one letter is missing
        expect MyValidators iban  any   value   CH93 0076 211 6238 5295 7     not toBeNull



    describe  iban has length of 21 chars after normalization
      it  is invalid with 20 signs
        expect MyValidators iban  any   value   CH930076201162385295     not toBeNull


      it  is invalid with 22 signs
        expect MyValidators iban  any   value   CH93007620116238529577     not toBeNull




  describe  present
    it  is invalid if undefined
      expect MyValidators present  any   value  undefined    not toBeNull


    it  is invalid if the string consists only out of whitespaces
      expect MyValidators present  any   value         not toBeNull


    it  is valid if the string has actual characters
      expect MyValidators present  any   value    hello     toBeNull


    it  is valid if its a number
      expect MyValidators present  any   value   4     toBeNull



import   FormControl  ValidatorFn  Validators   from   angular forms
import   Geolocation   from     models geolocation model
import   CompanyUidRegisterNumberValidator   from    company uid register number validator

export class MyValidators
  static minValue min  number
    return  control  FormControl
      const num   parseFloat control value

      if  isNaN num     num   min
        return
          minValue   valid  false


      return null



  static optionalMinValue min  number
    return  control  FormControl
      if   control value
        return null


      return MyValidators minValue min  control



  static range min  number  max  number
    return  control  FormControl
      const num   parseFloat control value
      if  isNaN num     num   min    num   max
        return
          range   valid  false


      return null



  static region control  FormControl
    const geolocation    Geolocation  control value
    if   geolocation    geolocation hasMinAttributes
      return null

    return
      region   valid  false



  static dynamicallyRequired func        boolean   ValidatorFn
    return  control  FormControl     func     Validators required control    null


  static address control  FormControl
    const geolocation    Geolocation  control value
    if   geolocation    geolocation hasAllAttributes
      return null

    return
      address   valid  false



  static matchPassword control  FormControl   any
    const password   control get  password   value
    const passwordConfirmation   control get  passwordConfirmation
    if  password     passwordConfirmation value
      passwordConfirmation setErrors  matchPassword  true
      else
      passwordConfirmation setErrors null

    return null


     tslint disable next line cyclomatic complexity
  static matchCompanyData control  FormControl   any
    const website   control get  website
    const isProfessional   control get  isProfessional
    const companyUidRegisterNumber   control get  companyUidRegisterNumber
    companyUidRegisterNumber setErrors null

    if   isProfessional value
      return null


    if   website value     companyUidRegisterNumber value
      return  missingCompanyData  true


    if  companyUidRegisterNumber      companyUidRegisterNumber value
      companyUidRegisterNumber setErrors CompanyUidRegisterNumberValidator validate companyUidRegisterNumber

    return null


  static iban control  FormControl
    const iban   control value replace        g      toUpperCase
    if   iban      CH d 7  0 9A Z  12    test iban
      return null

    return
      iban   valid  false



  static present control  FormControl
    return  control value      typeof control value      string      control value trim              present   valid  false     null


import   PhoneNumberFormatterService   from    phone number formatter service

describe  PhoneNumberFormatterService
  const service   new PhoneNumberFormatterService

  function expect number to format input  string  expected  string
    it  formats   input  to   expected
      expect service format input   toEqual expected



  describe  format
    expect number to format  0791234567     41 79 123 45 67
    expect number to format  079 1234567     41 79 123 45 67
    expect number to format  079123 4567     41 79 123 45 67
    expect number to format  0 7 9 1 2 3 4 5 6 7     41 79 123 45 67
    expect number to format   4179 1234567     41 79 123 45 67
    expect number to format  004179 1234567     41 79 123 45 67
    expect number to format  0441234567     41 44 123 45 67
    expect number to format  0781234567     41 78 123 45 67
    expect number to format  07812345673    07812345673
    expect number to format  0781234567        41 78 123 45 67
    expect number to format   41 79 123 45 67     41 79 123 45 67
    expect number to format   41 44 123 45 67     41 44 123 45 67


import   Injectable   from   angular core

 Injectable
export class PhoneNumberFormatterService

  mobileNumberPattern         00 41 s  0 9  2  s  0 9  3  s  0 9  2  s  0 9  2

  format unformatted  string   string
    const strippedMobileNumber   unformatted replace   s g      replace     41 0041    0
    if    0 d 9    test strippedMobileNumber
      return strippedMobileNumber replace   0  d 2    d 3    d 2    d 2        41  1  2  3  4

    return unformatted


import   as moment from  moment
import  moment locale de
import   I18n   from     i18n i18n
import   TimeAgoPipe   from    time ago pipe

describe  TimeAgoPipe
  const pipe  TimeAgoPipe   new TimeAgoPipe
  const createdAt   new Date 2017  1  1  12  6  0

  describe  translations work in german
    beforeEach
      moment locale  de


    it  shows hours if work was published some hours before and rounds
      jasmine clock   mockDate new Date 2017  1  1  16  10  0
      expect pipe transform createdAt   toEqual  Vor 4 Stunden erstellt


    it  shows days if work was published yesterday
      jasmine clock   mockDate new Date 2017  1  2  16  6  0
      expect pipe transform createdAt   toEqual  Vor einem Tag erstellt


    it  shows a number if work was published a lot of days before
      jasmine clock   mockDate new Date 2017  1  20  16  6  0
      expect pipe transform createdAt   toEqual  Vor 19 Tagen erstellt



  describe  translations in other languages
    beforeEach
      moment locale  fr
      I18n setLang  fr


    it  shows a number if work was published a lot of days before
      jasmine clock   mockDate new Date 2017  1  20  16  6  0
      expect pipe transform createdAt   toEqual  Cr   il y a 19 jours



import   Pipe  PipeTransform   from   angular core
import   upperFirst   from  lodash
import   as moment from  moment
import   I18n   from     i18n i18n


   Converts a date into into a string of the difference to now
   Usage
     value   myTimeAgo
   Example
       new Date 2017  1  1    myTimeAgo      if called on 2017 01 02
     formats to   Vor einem Tag

   To adapt it everytime the language changes use
      value   myTimeAgo i18n getLang

 Pipe  name   myTimeAgo
export class TimeAgoPipe implements PipeTransform
  transform value  Date   string
    const durationString  string   moment value  fromNow
    return upperFirst I18n interpolate I18n t utils createdSince   durationString


import   TruncatePipe   from    truncate pipe

describe  TruncatePipe
  const exampleString    this is a not so long string
  const pipe  TruncatePipe   new TruncatePipe

  it  truncates by default to 10 characters and with
    expect pipe transform exampleString   toEqual  this is a


  it  truncates by length if given
    expect pipe transform exampleString  20   toEqual  this is a not so lon


  it  appends a custom trailing sequence if given
    expect pipe transform exampleString  20        toEqual  this is a not so lon


import   Pipe  PipeTransform   from   angular core

   Truncates a string
   Usage
     value   myTruncate   length   trail
   Example
         this is a not so long string    truncate
     formats to   this is a

 Pipe  name   myTruncate
export class TruncatePipe implements PipeTransform
  transform value  string  limit  number   10  trail  string           string
    return value length   limit   value substring 0  limit    trail   value


import   ImageGalleryComponent   from    image gallery component

describe  ImageGalleryComponent
  let component  ImageGalleryComponent
  let imageService  any

  beforeEach
    imageService   jasmine createSpyObj  imageService     thumborImage
    component   new ImageGalleryComponent imageService


  describe  resizeImage
    it  calls the image service with the expected params
      const url     this url
      component resizeImage url   200x200
      expect imageService thumborImage  toHaveBeenCalledWith url   200x200


    it  calls the image service with a default size
      const url     this url
      component resizeImage url
      expect imageService thumborImage  toHaveBeenCalledWith url   x



import   Component  Input  OnInit   from   angular core
import   NgxGalleryImage  NgxGalleryOptions   from  ngx gallery
import   ImageService   from     utils image service

 Component
  selector   my image gallery
  templateUrl   image gallery component html
  styleUrls    image gallery component scss

export class ImageGalleryComponent implements OnInit
   Input   urls  string
  images  NgxGalleryImage
  galleryOptions  NgxGalleryOptions

  constructor private imageService  ImageService

  resizeImage url  string  size  string    x
    return this imageService thumborImage url  size


  ngOnInit
    this galleryOptions

        image  false
        height   150px
        width   100
        imageSwipe  true
        previewSwipe  true
        thumbnailsSwipe  true
        previewCloseOnClick  true
        previewCloseOnEsc  true
        previewKeyboardNavigation  true
        previewInfinityMove  true
        previewZoom  true
        thumbnailsMoveSize  4


        breakpoint  530
        thumbnailsColumns  3
        thumbnailsMoveSize  3


        breakpoint  340
        thumbnailsColumns  2
        thumbnailsMoveSize  2



    this images   this urls map url
      return
        small  this resizeImage url   180x140
        big  this resizeImage url




import   WorkDescription   from     shared models work states work description model
import   WorkDescriptionComponent   from    work description component

describe  WorkDescriptionComponent
  const component  WorkDescriptionComponent   new WorkDescriptionComponent

  beforeEach
    component workDescription   new WorkDescription


  describe  ngOnInit
    it  sets the possibleTimes as default dates for the component
      const possibleTimes    any    mocked
      component workDescription possibleTimes   possibleTimes
      component ngOnInit
      expect component dates  toEqual possibleTimes


    it  sets the dates if given
      const possibleTimes    any    mocked
      const chosenTimes    any    mocked2
      component workDescription possibleTimes   possibleTimes
      component dates   chosenTimes
      component ngOnInit
      expect component dates  toEqual chosenTimes


    it  sets the workPlace of workDescription as default for the component
      const workPlace    any    mocked
      component workDescription workPlace   workPlace
      component ngOnInit
      expect component workPlace  toEqual workPlace


    it  takes the passed workPlace if given
      const workPlace    any    mocked
      const workPlace2    any    mocked2
      component workDescription workPlace   workPlace2
      component workPlace   workPlace
      component ngOnInit
      expect component workPlace  toEqual workPlace



import   Component  Input  OnInit   from   angular core
import   I18n   from     i18n i18n
import   Geolocation   from     models geolocation model
import   PossibleTime   from     shared models possible time model
import   WorkDescription   from     shared models work states work description model

 Component
  selector   my work description
  templateUrl   work description component html

export class WorkDescriptionComponent implements OnInit
   Input   workDescription  WorkDescription
   Input   dates  PossibleTime
   Input   workPlace  Geolocation
   Input   referenceNumber  string
  i18n   I18n

  ngOnInit
    if   this dates
      this dates   this workDescription possibleTimes

    if   this workPlace
      this workPlace   this workDescription workPlace



import   PublicWorkListItemComponent   from    public work list item component

describe  PublicWorkListItemComponent
  let component  PublicWorkListItemComponent

  beforeEach
    component   new PublicWorkListItemComponent


  describe  isAssigned
    it  returns true if work has different status than offering
      component workDescription    any   status   contract
      expect component isAssigned    toEqual true


    it  returns false if work has status offering
      component workDescription    any   status   offering
      expect component isAssigned    toEqual false



import   Component  Input   from   angular core
import   I18n   from     i18n i18n
import   WorkDescription   from     shared models work states work description model

 Component
  selector   my public work list item
  templateUrl   public work list item component html
  styleUrls    public work list item component scss

export class PublicWorkListItemComponent
   Input   workDescription  WorkDescription
  i18n   I18n

  isAssigned    boolean
    return this workDescription status      offering


   Extra variables that live on Global that will be replaced by webpack DefinePlugin
   tslint disable no any

   TODO  check what ENV does  and where it comes from
declare var ENV  string

interface GlobalEnvironment
     TODO  check what ENV does  and where it comes from
  ENV  any
  HMR  any


interface WebpackModule
  hot
    data   any
    idle  any
    accept dependencies   string   string    callback    updatedDependencies   any     void   void
    decline dependencies   string   string     void
    dispose callback    data   any     void   void
    addDisposeHandler callback    data   any     void   void
    removeDisposeHandler callback    data   any     void   void
    check autoApply   any  callback    err   Error  outdatedModules   any       void   void
    apply options   any  callback    err   Error  outdatedModules   any       void   void
    status callback    status   string     void   void   string
    removeStatusHandler callback    status   string     void   void



interface WebpackRequire
  context file  string  flag   boolean  exp   RegExp   any


interface ErrorStackTraceLimit
  stackTraceLimit  number


   Extend typings
   tslint disable no empty interface
interface NodeRequire extends WebpackRequire
interface ErrorConstructor extends ErrorStackTraceLimit
interface NodeModule extends WebpackModule
interface Global extends GlobalEnvironment
   tslint enable no empty interface

   tslint disable
declare namespace jasmine
  interface Matchers T
    toEqualData expected  any   boolean


import   GlobalE2EHelpers   from    utils e2e helpers mock

describe  6772 Konto  Loginformular
     Als Benutzer  Talent Kunde  mÃ¶chte ich mich einloggen kÃ¶nnen

  describe  i can navigate to the login modal
    beforeEach
      browser get


    it  is possible to login as a user
      GlobalE2EHelpers loginAsUser




   TODO  this test has to be fixed
   describe  6760 Benutzer registrieren
        Als Besucher mÃ¶chte ich mich registrieren um ein Benutzer zu werden
        Danach kann ich die Applikation als Kunde oder Talent verwenden


     describe  i can navigate to the registration modal
       beforeEach
         browser get


       function navigateToForm
         element by css   registration  link    click
         expect element by css  modal dialog     toBeTruthy


       function expectSubmitFirstStepIsDisabled expected  boolean
         const disabledValue   expected    true    null
         expect element by css   registration  continue    getAttribute  disabled    toEqual disabledValue


       function expectSubmitSecondStepIsDisabled expected  boolean
         const disabledValue   expected    true    null
         expect element by css   registration  finish    getAttribute  disabled    toEqual disabledValue


       function fillInForm elementSelector  string  key  string
         browser wait
           return element by css elementSelector   isDisplayed
            3000
         element by css elementSelector   sendKeys key


          function clickOnButton elementSelector  string
            element all by css elementSelector   click


       it  has a button  registrieren
         expect element by css   registration  link     toBeTruthy


       fit  fills out the form
         navigateToForm
         expectSubmitFirstStepIsDisabled true

         browser wait
           return element all by css   qualification list group item    first   isDisplayed
            4000

         element all by css   qualification list group item    first   click
         expectSubmitFirstStepIsDisabled false
         element all by css   registration  continue    first   click
         expectSubmitSecondStepIsDisabled false
         fillInForm   registration email    test test ch
         expectSubmitSecondStepIsDisabled false
         fillInForm   registration password    testpassword
         expectSubmitSecondStepIsDisabled false
         element all by css   checkbox  icon checkbox default    get 0  click
         element all by css   checkbox  icon checkbox default    get 1  click

         browser wait
           return element by css   registration  finish    getAttribute  disabled   then  value  string
             return value       true

            3000

         element by css   registration  finish    click


            expect element by css   alert alert warning     toBeTruthy

            expectSubmitSecondStepIsDisabled true


            expectSubmitIsDisabled true
            fillInForm   login email    test test ch
            expectSubmitIsDisabled true
            fillInForm   login password    testpassword
            expectSubmitIsDisabled false
            clickOnButton   login button





   import   GlobalE2EHelpers   from    utils e2e helpers mock

   describe  6773 Talentprofil Frontend  Dienstleistungen erfassen
        Als Talent mÃ¶chte ich meine Dienstleistungen  die ich bereitstellen will erfassen

     describe  i register as a talent

       beforeEach
         browser get


          TODO  this test has to be fixed



   function expectToStayOnPage
     element all by css   btn btn primary    first   click
     expect browser getCurrentUrl    toEqual  http   localhost 3000   talent registration step 1
     expect element all by css   subcategory list group item    first    toBeTruthy


   function expectToBeNavigatedToNextStep
     element all by css   btn btn primary btn md    first   click
     expect browser getCurrentUrl    toEqual  http   localhost 3000   talent registration step 2


   function validationErrorIsShown
     expect element all by css   alert alert danger    first    toBeTruthy


   function validationErrorIsNotShown
     expect element all by css   alert alert danger     toEqual


   function selectCategory num  number
     const categoryElement   element all by css   category list group item    get num
     expect categoryElement getAttribute  class    toMatch  category list group item
     categoryElement click
     expect categoryElement getAttribute  class    toMatch  category list group item active
     expect element all by css   subcategory list group item    first    toBeTruthy


   function selectSubcategory num  number
     const subcategoryElement   element all by css   subcategory list group item    get num
     expect subcategoryElement getAttribute  class    toMatch  subcategory list group item
     subcategoryElement click
     expect subcategoryElement getAttribute  class    toMatch  subcategory list group item active


   it  is possible to select a Subcategory
     element all by css   registration  link    first   click
        browser debug
     const modal   element all by css   registration modal    first
     browser wait
       return modal isDisplayed   then displayed
         return displayed

        10000
     element all by css   qualification list group item    get 1  click
     element all by css   registration  continue    first   click
     browser pause
     element by id  registration email    sendKeys email
     element by id  registration password    sendKeys password
     element all by css   checkbox  icon checkbox default    get 0  click
     element all by css   checkbox  icon checkbox default    get 1  click

     browser wait
       return element by css   registration  finish    getAttribute  disabled   then  value  string
         return value       true

        3000

     element by css   registration  finish    click
     return browser wait protractor until elementIsNotVisible modal getWebElement     10000

     expectToStayOnPage
     validationErrorIsShown
     selectCategory 1
     validationErrorIsShown
     expectToStayOnPage
     validationErrorIsShown
     selectSubcategory 1
     validationErrorIsNotShown
     selectCategory 2
     validationErrorIsNotShown
     expectToStayOnPage
     validationErrorIsShown
     selectSubcategory 2
     validationErrorIsNotShown
     expectToBeNavigatedToNextStep




   describe  6775 Talentprofil Frontend  Stell dich vor
        Als Talent mÃ¶chte ich meine persÃ¶nlichen Details erfassen um bei meinen Kunden vertrauen aufzubauen

     describe  i can add personal information

       beforeEach
         browser get     talent registration step 2


       function expectSubmitIsDisabled
         expect element by css   btn btn primary btn md    getAttribute  disabled    toEqual  true


       function expectSubmitIsEnabled
         expect element by css   btn btn primary btn md    getAttribute  disabled    toEqual null


       function expectToBeNavigatedToNextStep
         element all by css   btn btn primary btn md    first   click
         expect browser getCurrentUrl    toEqual  http   localhost 3000   talent registration step 3


       function fillOutRequiredInput id  string  value  string
         const inputElement   element by id id
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng pristine ng invalid
         inputElement sendKeys value
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng dirty ng valid


       function fillOutOptionalInput id  string  value  string
         const inputElement   element by id id
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng pristine ng valid
         inputElement sendKeys value
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng valid ng dirty


       it  is possible to select a Subcategory
         expectSubmitIsDisabled
         fillOutRequiredInput  job title    Kaminfeger
         expectSubmitIsDisabled
         fillOutRequiredInput  first name    Hans
         expectSubmitIsDisabled
         fillOutOptionalInput  about    Ich bin ein Kaminfeger seit 20 Jahren  immer mit Leidenschaft mit dabei
         expectSubmitIsDisabled
         fillOutOptionalInput  company name    Schweineggers Kaminfeger
         expectSubmitIsDisabled
         fillOutRequiredInput  last name    Schweinegger
         expectSubmitIsEnabled
         expectToBeNavigatedToNextStep




   describe  6776 Talentprofil Frontend  Ausbildung Erfahrung
        Als Talent mÃ¶chte ich meine Ausbildung erfassen kÃ¶nnen  einfach

     describe  i can add experience
       beforeEach
         browser get     talent registration step 3


       function expectToStayOnPage
         element all by css   btn btn primary    first   click
         expect browser getCurrentUrl    toEqual  http   localhost 3000   talent registration step 3
         expect element all by css   subcategory list group item    first    toBeTruthy


       function expectToBeNavigatedToNextStep
         element all by css   btn btn primary btn md    first   click
         expect browser getCurrentUrl    toEqual  http   localhost 3000   talent registration step 4


       function pressExpendButton num  expectedTextArea  string
         element all by css   btn btn secondary btn sm    get num  click
         expect element by id expectedTextArea    toBeTruthy


       function fillOutTextArea id  string  value  string
         const textArea   element by id id
         textArea sendKeys value


       function pressQualification num
         const wantedQualification   element all by css   qualification list group item    get num
         expect wantedQualification getAttribute  class    toMatch  qualification list group item
         element all by css   qualification list group item    get num  click
         expect wantedQualification getAttribute  class    toMatch  qualification list group item qualification active
         expect
           element all by css   qualification list group item    get  1   num   2   getAttribute  class
           toMatch  qualification list group item


       it  is possible to select a Subcategory
         expectToStayOnPage
         pressExpendButton 0   professional experience
         fillOutTextArea  professional experience    2012   2015   Automechaniker bei Volvo
         expectToStayOnPage
         pressExpendButton 0   education
         fillOutTextArea  education    2009   2012   Automechanikerlehre mit Berufsschule BBW
         expectToStayOnPage
         pressExpendButton 0   projectPortfolio
         fillOutTextArea  projectPortfolio    2015   2016   Projekt zusammen mit Greenpeace fÃ¼r Umweltfreundliche Autos
         expectToStayOnPage
         pressQualification 0
         pressQualification 1
         expectToBeNavigatedToNextStep




   describe  6777 Talentprofil Frontend  Feinschliff
        Als Entwickler mÃ¶chte ich das Frontend vor fertigstellung Ã¼berprÃ¼fen  This userstory doesnt really make sense

     describe  i can add personal information

       beforeEach
         browser get     talent registration step 4


       function expectSubmitIsDisabled
         expect element by css   btn btn primary btn md    getAttribute  disabled    toEqual  true


       function expectSubmitIsEnabled
         expect element by css   btn btn primary btn md    getAttribute  disabled    toEqual null


       function expectToBeNavigatedToNextStep
         element all by css   btn btn primary btn md    first   click
         expect browser getCurrentUrl    toEqual  http   localhost 3000   placeholder external event talent request


       function fillOutRequiredInput id  string  value  string
         const inputElement   element by id id
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng pristine ng invalid
         inputElement sendKeys value
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng dirty ng valid


       function clickCheckbox
         expect element by id  vat number    isPresent    toBeFalsy
         expect element by id  vat rate    isPresent    toBeFalsy
         element all by css   checkbox  description    first   click
         expect element by id  vat number     toBeTruthy
         expect element by id  vat rate     toBeTruthy


       function fillOutOptionalInput id  string  value  string
         const inputElement   element by id id
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng pristine ng valid
         inputElement sendKeys value
         expect inputElement getAttribute  class    toEqual  form control ng untouched ng valid ng dirty


       it  is possible to select a Subcategory
         expectSubmitIsDisabled
         fillOutRequiredInput  net hourly rate    837
         expectSubmitIsDisabled
         fillOutRequiredInput  address    Weinbergstrasse 34
         expectSubmitIsDisabled
         fillOutRequiredInput  zip    8006
         expectSubmitIsDisabled
         fillOutRequiredInput  city    ZÃ¼rich
         expectSubmitIsDisabled
         fillOutRequiredInput  country    Schweiz
         expectSubmitIsDisabled
         fillOutRequiredInput  mobile number     41 77 345 45 45
         expectSubmitIsDisabled
         fillOutRequiredInput  operation radius km    10
         expectSubmitIsDisabled
         clickCheckbox
         expectSubmitIsDisabled
         fillOutOptionalInput  vat number    CHE 123 456 789 MWST
         expectSubmitIsDisabled
         fillOutOptionalInput  vat rate    8
         expectSubmitIsDisabled
         fillOutRequiredInput  swift    UBSWCHZH80A
         expectSubmitIsDisabled
         fillOutRequiredInput  iban    CH6309000000250097798
         expectSubmitIsDisabled
         fillOutRequiredInput  bank account first name    Anita
         expectSubmitIsDisabled
         fillOutRequiredInput  bank account last name    KÃ¶blitz
         expectSubmitIsEnabled
         expectToBeNavigatedToNextStep



import ElementFinder   protractor ElementFinder
   tslint disable next line
const fs   require  fs

export class GlobalE2EHelpers
  static login email  string  password  string
    element all by css  my login form a    first   click

    const modal   element all by css   login modal    first
    browser wait       modal isDisplayed   then displayed    displayed   10000
    element by id  login email    sendKeys email
    element by id  login password    sendKeys password
    element by id  login button    click
    return browser wait protractor until elementIsNotVisible modal getWebElement     10000


  static loginAsUser
    this login  bertrand king name    A047SyM6X


  static writeScreenShot data  any  filename  string
    const stream   fs createWriteStream filename

    stream write new Buffer data   base64
    stream end


  static saveScreenshot fileName  string
    browser takeScreenshot   then png
      this writeScreenShot png  fileName



  static performClick element  ElementFinder  x  number  y  number
    browser actions
       mouseMove element getWebElement     x  y
       click
       perform


  static hasElementClass element  ElementFinder  cls  string
    return element getAttribute  class
       then classes    classes split      indexOf cls       1


  static fillValue element  protractor ElementFinder  value  string
    element sendKeys value


   import   GlobalE2EHelpers   from    utils e2e helpers mock
   import ElementFinder   protractor ElementFinder

   describe  6053 Jobanfrage erfassen
        Als Entwickler mÃ¶chte ich spezielle Businesslogik entwerfen um Workanfragen gÃ¼ltig zu erfassen und
        weiterzuverarbeiten

     beforeAll
       GlobalE2EHelpers loginAsUser


     describe  i can navigate to the work creation by two ways
       beforeEach
         browser get


       it  has a button  Find talents now
         expect element all by id  work new    count    toEqual 1
         expect element all by id  find talents    count    toEqual 1


       it  navigates to the form
         element by id  work new    click
         expect browser getCurrentUrl    toEqual  http   localhost 3000   customer works new



     describe  i can create a work
       beforeEach
         browser get     customer works new


       function expectSubmitIsDisabled expected  boolean
         const disabledValue   expected    true    null
         expect element by id  submit new work    getAttribute  disabled    toEqual disabledValue


       function selectFirstValueOfDropdown dropdownElement  ElementFinder
         const ddMenu   dropdownElement element by css   dropdown menu
         expect ddMenu isDisplayed    toBeFalsy
         dropdownElement all by css  button dropdown toggle    first   click
         expect ddMenu isDisplayed    toBeTruthy
         const firstDropdownElement   ddMenu all by css  li dropdown items a    first
         firstDropdownElement click
         expect ddMenu isDisplayed    toBeFalsy
         const label   dropdownElement element by css  button btn dropdown
         expect label getInnerHtml    toEqual firstDropdownElement getInnerHtml


       function setWorkVisibilityPublic isPublic  boolean
         const selectedOption  number   isPublic   0   1
         element all by css   choose talent    get selectedOption  click
         expect element by css   main container  container talents    isPresent    toBe  isPublic


       function selectTalents
         expectSubmitIsDisabled true
         setWorkVisibilityPublic true
         expectSubmitIsDisabled false
         setWorkVisibilityPublic false
         expectSubmitIsDisabled true
         browser wait
           return element by css   row talent label    isPresent

         expect element all by css   container talents  row talent    count    toEqual 25
         element all by css   row talent  checkbox  description    first   click
         expectSubmitIsDisabled false


       function fillOutRequiredFieldsStep1
         expectSubmitIsDisabled true
         const allDropdowns   element all by css  my category selection my dropdown
         const categoryDropdown   allDropdowns first
         const subcategoryDropdown   allDropdowns last

            expect subcategories to be empty
         expect subcategoryDropdown element by css   dropdown menu li    isPresent    toBeFalsy
            select a category
         selectFirstValueOfDropdown categoryDropdown

            select a subcategory
         browser driver wait
           return subcategoryDropdown element by css   dropdown menu li    isPresent
            5000
         selectFirstValueOfDropdown subcategoryDropdown

         expectSubmitIsDisabled true
         element by css  input name title     sendKeys  Title of my work
         expectSubmitIsDisabled true
         element by css  textarea name description     sendKeys  Description of my work
            expectSubmitIsDisabled true   TODO  not disabled anymore  will be done in https   redmine renuo ch issues 6757
         element by css  input name work place     sendKeys  Industriestrasse 44  8304 Wallisellen  Schweiz
            Google Autocomplete
         browser driver wait
           return element all by css   pac container  pac item    first   isPresent
            5000
         element all by css   pac container  pac item    first   click
         expectSubmitIsDisabled false


       function addQuestions
         element by css  input ng reflect name  question0      sendKeys  What  Question 1
         element by id  add question    click
         element by css  input ng reflect name  question1      sendKeys  What  Question 2
         element by id  submit new work    click


       function expect to go to dashboard
         expect element by id  dashboard link    isPresent    toBeTruthy
         element by id  dashboard link    click
         browser waitForAngular
         expect browser getCurrentUrl    toContain   customer dashboard show


       function addPossibleTimes
         element by id  at specific time    click
         browser driver wait
           return element all by css   dates  input    first   isPresent
            5000
         element by css  input ng reflect name  date from 0      sendKeys protractor Key ARROW UP  protractor Key TAB
           protractor Key ARROW UP  protractor Key TAB  protractor Key ARROW UP
         element by css  input ng reflect name  from 0      sendKeys  1030
         element by css  input ng reflect name  date to 0      sendKeys protractor Key ARROW UP  protractor Key TAB
           protractor Key ARROW UP  protractor Key TAB  protractor Key ARROW UP
         element by css  input ng reflect name  to 0      sendKeys  1230
         element by id  add possible time    click
         element by css  input ng reflect name  date from 1      sendKeys protractor Key ARROW UP  protractor Key TAB
           protractor Key ARROW UP  protractor Key ARROW UP  protractor Key TAB  protractor Key ARROW UP
         element by css  input ng reflect name  from 1      sendKeys  0930
         element by css  input ng reflect name  date to 1      sendKeys protractor Key ARROW UP  protractor Key TAB
           protractor Key ARROW UP  protractor Key ARROW UP  protractor Key TAB  protractor Key ARROW UP
         element by css  input ng reflect name  to 1      sendKeys  1130
         element by id  add possible time    click


       it  is possible to send invitations with the minimum data
         fillOutRequiredFieldsStep1
         element by id  submit new work    click
         selectTalents
         element by id  submit new work    click
         expect element by css  my sendable work    isPresent    toBeTruthy
         browser wait
           return element by css   container talents  row talent    isPresent

         expect element all by css   container talents  row talent    count    toEqual 1
         element by id  submit new work    click
         browser wait
           return element by css   alert alert success    isPresent
            10000
         expect element by css   alert alert success    isPresent    toBeTruthy
         expect to go to dashboard


       it  is possible to send invitations with all data
         fillOutRequiredFieldsStep1
         addPossibleTimes
         addQuestions
         element by id  submit new work    click
         selectTalents
         element by id  submit new work    click
         browser waitForAngular
         expect element by css  my sendable work    isPresent    toBeTruthy
         expect element all by css   container talents  row talent    count    toEqual 1
         element by id  submit new work    click
         browser driver wait
           return element by css   alert alert success    isPresent
            5000
         expect element by css   alert alert success    isPresent    toBeTruthy
         expect to go to dashboard



import   enableProdMode   from   angular core
import   platformBrowser   from   angular platform browser
import   AppModuleNgFactory   from     compiled src app app module ngfactory

   depending on the env mode  enable prod mode or add debugging modules
if  process env ENV      build
  enableProdMode

export function main
  return platformBrowser   bootstrapModuleFactory AppModuleNgFactory


if  document readyState      complete
  main
  else
  document addEventListener  DOMContentLoaded   main


   eslint disable
import   enableProdMode   from   angular core
import   platformBrowserDynamic   from   angular platform browser dynamic
import   AppModule   from    app app module

   depending on the env mode  enable prod mode or add debugging modules
   TODO  check what ENV does  and where it comes from
if  process env ENV      build
  enableProdMode


export function main
  return platformBrowserDynamic   bootstrapModule AppModule


if  document readyState      complete
  main
  else
  document addEventListener  DOMContentLoaded   main


   eslint disable
import  core js client shim
import  reflect metadata
import  ts helpers

   tslint disable next line
require  zone js dist zone

   TODO  check what ENV does  and where it comes from
if  process env ENV      build
     Development
  Error  stackTraceLimit     Infinity
     tslint disable next line
  require  zone js dist long stack trace zone

import   angular common
import   angular core
import   angular http
import   angular router

import   agm core
import   ultimate ngxerrors
import  angular2 token
import  angularfire2 database
import  firebase database
import  hammerjs
import  lodash
import  moment
import  mydatepicker
import  ng2 progressbar
import  ng2 toasty
import  ngx gallery
import  raven js

   ng2 bootstrap imports
import  ng2 bootstrap collapse
import  ng2 bootstrap dropdown
import  ng2 bootstrap modal
import  ng2 bootstrap pagination
import  ng2 bootstrap timepicker

   RxJs imports
import  rxjs add observable from
import  rxjs add observable of
import  rxjs add observable zip
import  rxjs add operator catch
import  rxjs add operator debounceTime
import  rxjs add operator first
import  rxjs add operator mergeMap
import  rxjs add operator zip
import  rxjs Observable
import  rxjs Observer
import  rxjs ReplaySubject
import  rxjs Subject
import  rxjs SubjectSubscription
import  rxjs Subscriber
import  rxjs Subscription

   Other vendors for example jQuery  Lodash or Bootstrap
   You can import js  ts  css  sass
